<?php
class accounting extends AJAX_library {

	public $total;
	public $journal_total;
	public $account_info = array();
	public $journal_info = array();
	public $current_account;
	public $check_total;
	public $trans_type = array("code"  		=> 	array("AR",
													  "AP",
													  "CD",
													  "CR",
													  "GJ",
													  "PR",
													  "AD",
													  "ME",
													  "VC"),
							   "type"		=>	array("Invoice",
							   						  "Bill",
													  "Check",
													  "Cash Receipt",
													  "General Journal",
													  "Payroll",
													  "Adjustment",
													  "Memo Cost",
													  "Vendor Credit"));
	public $closed_err = "The transaction could not be completed because the period has already been closed.";
	public $acct_ops = array('proposal_hash' 		=> 	'',
							 'ar_invoice_hash'		=>	'',
							 'ap_invoice_hash'		=>	'',
							 'customer_hash'		=>	'',
							 'vendor_hash'			=>	'',
							 'check_no'				=>	'',
							 'ar_payment_hash'		=>	'',
							 'ap_payment_hash'		=>	'',
							 'item_hash'			=>	'');							
	//Test
	private $form;
	
	function accounting($passedHash=NULL,$proposal_hash=NULL) {
		global $db;
		
		if ($passedHash)
			$this->current_hash = $passedHash;
		else
			$this->current_hash = $_SESSION['id_hash'];
			
		$this->form = new form;
		$this->db =& $db;
		$this->content['class_name'] = get_class($this);
		
		if ($proposal_hash)
			$this->proposal_hash = $proposal_hash;
		
		$this->p = new permissions($this->current_hash);
		$result = $this->db->query("SELECT COUNT(*) AS Total
									FROM `".DB_PREFIX."accounts`
									WHERE `parent_hash` = ''");
		$this->total = $this->db->result($result);

		if ($_POST['active_search']) {
			$result = $this->db->query("SELECT `search_class` , `detail_search` , `query` , `total` , `search_str`
										FROM `".DB_PREFIX."search`
										WHERE `search_hash` = '".$_POST['active_search']."'");
			$row = $this->db->fetch_assoc($result);
			if ($row['search_class'] == 'check_reg') {
				$total = $row['total'];
				$sql = base64_decode($row['query']);
				
				$r = $this->db->query("SELECT COUNT(".DB_PREFIX."check_register.obj_id) AS Total
									   FROM `".DB_PREFIX."check_register`
									   LEFT JOIN `".DB_PREFIX."vendor_payment` ON ".DB_PREFIX."vendor_payment.check_no = ".DB_PREFIX."check_register.check_no
									   LEFT JOIN `".DB_PREFIX."vendor_payables` ON ".DB_PREFIX."vendor_payables.invoice_hash = ".DB_PREFIX."vendor_payment.invoice_hash".($sql ? "
									   WHERE $sql" : NULL)."
									   GROUP BY ".DB_PREFIX."check_register.check_no");
				$this->check_total = $this->db->num_rows($r);
				
				if ($this->check_total != $total)
					$this->db->query("UPDATE `".DB_PREFIX."search`
									  SET `total` = '".$this->total."'
									  WHERE `search_hash` = '".$_POST['active_search']."'");
				$check_reg = true;
			} elseif ($row['search_class'] == 'journal') {
				$total = $row['total'];
				$sql = base64_decode($row['query']);
				
				$r = $this->db->query("SELECT COUNT(".DB_PREFIX."journal.obj_id) AS Total
									   FROM `".DB_PREFIX."journal`
									   LEFT JOIN `".DB_PREFIX."customer_invoice` ON ".DB_PREFIX."customer_invoice.invoice_hash = ".DB_PREFIX."journal.ar_invoice_hash 
									   LEFT JOIN `".DB_PREFIX."customer_payment` ON ".DB_PREFIX."customer_payment.payment_hash = ".DB_PREFIX."journal.ar_payment_hash
									   LEFT JOIN `".DB_PREFIX."vendor_payables` ON ".DB_PREFIX."vendor_payables.invoice_hash = ".DB_PREFIX."journal.ap_invoice_hash 
									   LEFT JOIN `".DB_PREFIX."vendor_payment` ON ".DB_PREFIX."vendor_payment.payment_hash = ".DB_PREFIX."journal.ap_payment_hash ".($sql ? "
									   WHERE $sql" : NULL)."
									   GROUP BY ".DB_PREFIX."journal.audit_id");
				$this->journal_total = $this->db->num_rows($r);
				
				if ($this->journal_total != $total)
					$this->db->query("UPDATE `".DB_PREFIX."search`
									  SET `total` = '".$this->total."'
									  WHERE `search_hash` = '".$_POST['active_search']."'");
				$journal = true;
			} 
		} 
		if (!$this->proposal_hash && !$check_reg) {
			$result = $this->db->query("SELECT COUNT(*) AS Total
										FROM `".DB_PREFIX."check_register`");
			$this->check_total = $this->db->result($result);
		}
		if (!$journal) {
			$result = $this->db->query("SELECT COUNT(*) AS Total
										FROM `".DB_PREFIX."journal`".($this->proposal_hash ? "
										WHERE ".DB_PREFIX."journal.proposal_hash = '".$this->proposal_hash."'" : NULL)."
										GROUP BY ".DB_PREFIX."journal.audit_id");
			$this->journal_total = $this->db->num_rows($result);
		}
		return;
	}

	function __destruct() {
		$this->content = '';
	}
	
	function fetch_accounts($start,$end,$order_by=NULL,$order_dir=NULL) {
		$this->account_info = array();

		if ($this->active_search) {
			$result = $this->db->query("SELECT `query` , `total`
								  		FROM `".DB_PREFIX."search`
								  		WHERE `search_hash` = '".$this->active_search."'");
			$row = $this->db->fetch_assoc($result);
			$this->total = $row['total'];
			$sql = unserialize(base64_decode($row['query']));
		}

		$result = $this->db->query("SELECT t1.account_name , t1.account_no , t1.account_hash , t1.balance , ".DB_PREFIX."account_types.type as type_name , 
									t2.account_name AS child_account_name , t2.account_no AS child_account_no , t2.account_hash AS child_account_hash , t2.balance AS child_account_balance
									FROM `".DB_PREFIX."accounts` AS t1
									LEFT JOIN `".DB_PREFIX."account_types` ON ".DB_PREFIX."account_types.type_code = t1.account_type
									LEFT JOIN `".DB_PREFIX."accounts` AS t2 ON t2.parent_hash = t1.account_hash".($sql ? "
									WHERE ".$sql : NULL).($order_by ? "
							  		ORDER BY $order_by ".($order_dir ? $order_dir : "ASC") : NULL));
		while($row = $this->db->fetch_assoc($result)) {
			if (@is_array($this->account_info[$row['account_hash']])) {
				$child[] = $row['child_account_hash'];
				$this->account_info[$row['account_hash']]['children'][] = $row;
			} else {
				$this->account_info[$row['account_hash']]['account_info'] = $row;		
				if ($row['child_account_hash']) {
					$this->account_info[$row['account_hash']]['children'][] = $row;
					$child[] = $row['child_account_hash'];
				}
			}
		}
		
		reset($this->account_info);		
		if (is_array($child)) {
			while (list($account_hash) = each($this->account_info)) {
				if (in_array($account_hash,$child)) 
					unset($this->account_info[$account_hash]);
			}
		}
		$this->total = count($this->account_info);
		$this->account_info = array_slice($this->account_info,$start,$end);
	}
	
	function fetch_accounts_by_type($type,$checking=NULL) {
		$result = $this->db->query("SELECT t1.account_name , t1.account_no , t1.account_hash , t1.balance , ".DB_PREFIX."account_types.type as type_name , 
									t2.account_name AS child_account_name , t2.account_no AS child_account_no , t2.account_hash AS child_account_hash , t2.balance AS child_account_balance
									FROM `".DB_PREFIX."accounts` AS t1
									LEFT JOIN `".DB_PREFIX."account_types` ON ".DB_PREFIX."account_types.type_code = t1.account_type
									LEFT JOIN `".DB_PREFIX."accounts` AS t2 ON t2.parent_hash = t1.account_hash
									WHERE t1.account_type = '$type' ".($checking ? "AND t1.checking = 1" : NULL)."
									ORDER BY t1.account_name ASC");
		while($row = $this->db->fetch_assoc($result)) {
			if (is_array($account_info[$row['account_hash']])) {
				$child[] = $row['child_account_hash'];
				$account_info[$row['account_hash']]['children'][] = $row;
			} else {
				$account_info[$row['account_hash']]['account_info'] = $row;		
				if ($row['child_account_hash']) {
					$account_info[$row['account_hash']]['children'][] = $row;
					$child[] = $row['child_account_hash'];
				}
			}
		}

		reset($account_info);		
		if (is_array($child)) {
			while (list($account_hash) = each($account_info)) {
				if (in_array($account_hash,$child)) 
					unset($account_info[$account_hash]);
			}
		}
		reset($account_info);		
		while (list($account_hash) = each($account_info)) {
			$hash[] = $account_hash;
			$name[] = $account_info[$account_hash]['account_info']['account_name'];
			
			if ($account_info[$account_hash]['children']) {
				for ($i = 0; $i < count($account_info[$account_hash]['children']); $i++) {
					$hash[] = $account_info[$account_hash]['children'][$i]['child_account_hash'];
					$name[] = "&nbsp;&nbsp;--&nbsp;&nbsp;".$account_info[$account_hash]['children'][$i]['child_account_name'];
				}
			}
		}
		
		return array($hash,$name);
	}
	
	function fetch_account_record($account_hash) {
		if (!$account_hash)
			return;
		
		$this->current_account = array();
		$this->account_hash = '';
		$result = $this->db->query("SELECT t1.* , ".DB_PREFIX."account_types.type as type_name , 
									".DB_PREFIX."account_types.account_type as account_action , ".DB_PREFIX."account_types.account_side ,
									t2.account_name AS child_account_name , t2.account_no AS child_account_no , 
									t2.account_hash AS child_account_hash , t2.balance AS child_account_balance
									FROM `".DB_PREFIX."accounts` AS t1
									LEFT JOIN `".DB_PREFIX."account_types` ON ".DB_PREFIX."account_types.type_code = t1.account_type
									LEFT JOIN `".DB_PREFIX."accounts` AS t2 ON t2.parent_hash = t1.account_hash
									WHERE t1.account_hash = '$account_hash'");
		while($row = $this->db->fetch_assoc($result)) {
			$i++;
			if ($i == 1) {
				$this->current_account = $row;
				$this->account_hash = $row['account_hash'];
			}
			if ($row['child_account_hash'])
				$this->current_account['children'][] = $row;			
		}

		if ($this->account_hash) {
			$result = $this->db->query("SELECT COUNT(*) AS Total
										FROM `".DB_PREFIX."journal`
										WHERE `account_hash` = '".$this->account_hash."'");
			if ($this->db->result($result))
				$this->current_account['lock'] = 1;
				
			return true;
		} 
		
		return false;
	}

	function fetch_account_types() {
		$result = $this->db->query("SELECT `type` , `type_code` , `account_type`
									FROM `".DB_PREFIX."account_types`
									ORDER BY `type` ASC");
		while ($row = $this->db->fetch_assoc($result)) {
			$type[] = $row['type'];
			$code[] = $row['type_code'];
			$account_type[] = $row['account_type'];
		}
		
		return array($type,$code,$account_type);
	}
	
	
	function key_search() {
		$display_area = $_POST['display_area'];
		$q = $_POST['q'];
		$parent_name = $_POST['parent_name'];
		$parent_id = $_POST['parent_id'];

		if (!$q) {
			$this->content["jscript"] = "$('".$display_area."').style.display='none'";
			$this->content['html']['keyResults'] = '';
			return;
		} elseif ($q == '*')
			unset($q);
		
		if (ereg("\[",$parent_name)) {
			$hash = substr(strchr($parent_name,"["),1,32);
			$q_name = substr($parent_name,0,strpos($parent_name,"["));
		} else
			$q_name = $parent_name;
			
		switch ($q_name) {
			case 'account_name':
			$result = $this->db->query("SELECT ".DB_PREFIX."accounts.account_hash as ID, ".DB_PREFIX."accounts.account_name as NAME , ".DB_PREFIX."accounts.account_no AS ACCT_NO , ".DB_PREFIX."account_types.type as TYPE
										FROM `".DB_PREFIX."accounts`
										LEFT JOIN `".DB_PREFIX."account_types` ON ".DB_PREFIX."account_types.type_code = ".DB_PREFIX."accounts.account_type
										WHERE ".($q ? "(".DB_PREFIX."accounts.account_name LIKE '".$q."%' OR `account_no` LIKE '".$q."%') AND ".DB_PREFIX."accounts.active = 1" : DB_PREFIX."accounts.active = 1")." AND ".DB_PREFIX."accounts.account_hash != '".DEFAULT_PROFIT_ACCT."'
										ORDER BY ".DB_PREFIX."accounts.account_no , ".DB_PREFIX."accounts.account_name");
			$title = "Chart of Accounts:";
			$style = "style=\"height:125px;overflow:auto;\"";
			break;			

			case 'journal_check_payee':
			$result = $this->db->query("SELECT ".DB_PREFIX."vendors.vendor_hash as ID, ".DB_PREFIX."vendors.vendor_name as NAME
										FROM `".DB_PREFIX."vendors`
										WHERE `vendor_name` LIKE '".$q."%' AND `active` = 1
										ORDER BY `vendor_name`");
			$title = "Vendor List:";
			$style = "style=\"height:125px;overflow:auto;\"";
			break;
		}
		
		while ($row = $this->db->fetch_assoc($result)) {
			if ($type == 'D' && $vendors->current_vendor['deposit_percent'] > 0) 
				$deposit_amt = $row['AMT'] * $vendors->current_vendor['deposit_percent'];
			
			$i++;
			$q_results .= "
			<div id=\"key_result_".$i."\" 
				 style=\"padding:2px 5px;\"
				 onmouseover=\"this.className='search_suggest_over';reset_key_holder('".$i."');\" 
			 	 onmouseout=\"this.className=''\" 
			 	 onclick=\"key_clear();selectItem('".$parent_name."=".($row['ACCT_NO'] ? $row['ACCT_NO']." - " : NULL).addslashes($row['NAME'])."','".$parent_id."=".$row['ID']."');toggle_display('".$display_area."','none');".($parent_name == 'journal_check_payee' ? "agent.call('accounting','sf_loadcontent','cf_loadcontent','vendor_remit_to','vendor_hash=".$row['ID']."','popup_id=".$this->popup_id."');" : NULL)."\" style=\"padding:2px 3px;\" >
				 	".($row['TYPE'] || $row['BALANCE'] ? "<div style=\"float:right;padding-right:5px;\">".($row['TYPE'] ? $row['TYPE'] : ($row['BALANCE'] >= 0 ? "$".number_format($row['BALANCE'],2) : "<span style=\"color:#ff0000;\">($".number_format($row['BALANCE']*-1,2).")</span>"))."</div>" : NULL)."
					".($row['ACCT_NO'] ? $row['ACCT_NO']." : " : NULL).$row['NAME'].($row['AMT'] ? "
							&nbsp;<i>$".number_format($row['AMT'],2)."</i>" : NULL)."
			</div>";
		}
		
		if (!$this->db->num_rows($result)) 
			$q_results = "<div style=\"padding:2px 3px;font-style:italic\">No results...</div>";
		else
			$q_results = ($title ? "
			<div class=\"function_menu_item\" style=\"font-weight:bold;border-bottom:1px solid #8c8c8c;\">
				<div style=\"float:right;padding-right:1px;\">
					<a href=\"javascript:void(0);\" onClick=\"toggle_display('keyResults','none');\"><img src=\"images/close.gif\" border=\"0\"></a>
				</div>
				$title
			</div>" : NULL)."
			<div ".$style.">".$q_results."</div>";
			
		$this->content["jscript"] = "toggle_display('".$display_area."','block');reset_key_holder(0);";
		$this->content['html'][$display_area] = $q_results;		
	}

	function doit_config() {
		$final = $_POST['final'];
		$fiscal_month = $_POST['fiscal_month'];
		$fiscal_day = $_POST['fiscal_day'];
		$fiscal_year = $_POST['fiscal_year'];
		//This is the fiscal year we are setting up
		$year_config = $_POST['year_config'];
		$p = $_POST['p'];
		$order = $_POST['order'];
		$order_dir = $_POST['order_dir'];
		$period_type = $_POST['period_type'];
		$config_complete = $_POST['period_config_complete'];
		$wip_min_amt = ereg_replace("[^-.0-9]", "",$_POST['wip_min_amt']);
		$wip_clearing_acct = $_POST['wip_clearing_acct'];
		$wip_clearing_acct_hash = $_POST['wip_clearing_acct_hash'];
		$toggle_layout = $_POST['toggle_layout'];
		
		if (!$toggle_layout && !checkdate($fiscal_month,$fiscal_day,$fiscal_year)) {
			$this->content['error'] = 1;
			$this->content['form_return']['err']['err_date'] = 1;
			$this->content['form_return']['feedback'] = "Please check that you have entered a valid date for the indicated field.";
			return;
		}
		if (!$toggle_layout && ($wip_clearing_acct || $wip_min_amt)) {
			if (!$wip_clearing_acct_hash || $wip_min_amt <= 0 || !$wip_min_amt) {
				$this->content['error'] = 1;
				if (!$wip_clearing_acct_hash) $this->content['form_return']['err']['err_wip_acct'] = 1;
				if (!$wip_min_amt || $wip_min_amt <= 0) $this->content['form_return']['err']['err_wip_amt'] = 1;
				$this->content['form_return']['feedback'] = "Please check that your WIP account and minimum amount are correct. The errors we found are indicated in red.";
				return;
			}
		}
		if ($final == 1) {
			if ($period_type == 5 && !$config_complete) {
				$this->content['error'] = 1;
				$this->content['form_return']['err']['err_layout'] = 1;
				$this->content['form_return']['feedback'] = "Your period closing dates have not been configured completely. Please make sure your closing dates reflect an entire year.";
				return;
			}
			if ($year_config) {
				$result = $this->db->query("SELECT *
											FROM `".DB_PREFIX."period_dates`
											WHERE `fiscal_year` = '$year_config'");
				while ($row = $this->db->fetch_assoc($result))
					$period_data[$row['period']] = $row;		
				
				for ($i = 0; $i < count($period_data); $i++) {
					if (!$period_data[$i + 1]['closed'])
						break;
				}
				$period_start = $i + 1;
				
				$total_periods = $_POST['total_periods'];
				for ($i = $period_start; $i <= $total_periods; $i++) {
					list($year,$month,$day) = explode("-",$_POST['period'.$i]);
					if (!checkdate($month,$day,$year)) {
						$this->content['error'] = 1;
						$this->content['form_return']['err']['err'.$i] = 1;
					}
					if ($i > 1 && $_POST['period'.$i] && strtotime($_POST['period'.$i]) <= strtotime($_POST['period'.($i - 1)])) {
						$this->content['error'] = 1;
						$this->content['form_return']['err']['err'.$i] = 1;
						$this->content['form_return']['err']['err'.($i-1)] = 1;
					}
					if ($period_data[$i-1]['closed'] && strtotime($_POST['period'.$i]) <= strtotime($period_data[$i-1]['period_end'])) {
						$this->content['error'] = 1;
						$this->content['form_return']['err']['err'.$i] = 1;
						$this->content['form_return']['feedback'] = "You are attempting to overlap a period with one that has already closed. Please check your dates on the indicated fields.";
						return;
					}
					if ($i == 1)
						$period[$i]['open'] = $fiscal_year."-".$fiscal_month."-".$fiscal_day;
					else {
						if ($period_data[$i-1]['closed'])
							$period[$i]['open'] = date("Y-m-d",strtotime($period_data[$i-1]['period_end'])+86400);
						else
							$period[$i]['open'] = date("Y-m-d",strtotime($_POST['period'.($i-1)])+86400);
					}
					$period[$i]['close'] = $_POST['period'.$i];
				}
				if ($this->content['error']) {
					$this->content['form_return']['feedback'] = "Please check that you have entered a valid date for the indicated field.";
					return;
				}
				if (date("Y-m-d",strtotime($_POST['period'.$total_periods])+86400) != date("Y-m-d",strtotime(($fiscal_year + 1)."-".$fiscal_month."-".$fiscal_day))) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err'.$total_periods] = 1;
					$this->content['form_return']['feedback'] = $total_periods."Incomplete periods! Please make sure that the closing date of your final period completes a full year and ends on ".date("Y-m-d",strtotime(($fiscal_year + 1)."-".$fiscal_month."-".$fiscal_day)-86400).".";
					return;
				}
				
				for ($i = $period_start; $i <= $total_periods; $i++) {
					$result = $this->db->query("SELECT `obj_id`
												FROM `".DB_PREFIX."period_dates`
												WHERE `fiscal_year` = '$year_config' AND `period` = '".$i."'");
					if ($obj_id = $this->db->result($result)) 
						$this->db->query("UPDATE `".DB_PREFIX."period_dates`
										  SET `fiscal_year` = '$year_config' , `period` = '".$i."' , `period_start` = '".$period[$i]['open']."' , `period_end` = '".$period[$i]['close']."'
										  WHERE `obj_id` = '$obj_id'");
					else
						$this->db->query("INSERT INTO `".DB_PREFIX."period_dates`
										  (`fiscal_year` , `period` , `period_start` , `period_end`)
										  VALUES ('$year_config' , '".$i."' , '".$period[$i]['open']."' , '".$period[$i]['close']."')");
				}
				update_sys_data('FISCAL_PERIOD_CONFIG',$period_type);
				$_SESSION['FISCAL_PERIOD_CONFIG'] = $period_type;
				update_sys_data('FISCAL_YEAR_START',$fiscal_month."/".$fiscal_day);
				$_SESSION['FISCAL_YEAR_START'] = $fiscal_month."/".$fiscal_day;
				$update = true;
			}
			if ($wip_clearing_acct_hash && $wip_min_amt) {
				if ((defined('AUTO_WIP_CLEARING_ACCT') && AUTO_WIP_CLEARING_ACCT != $wip_clearing_acct_hash) || !defined('AUTO_WIP_CLEARING_ACCT')) {
					$update = true;
					update_sys_data('AUTO_WIP_CLEARING_ACCT',$wip_clearing_acct_hash);
					$_SESSION['AUTO_WIP_CLEARING_ACCT'] = $wip_clearing_acct_hash;
					$this->db->query("UPDATE `".DB_PREFIX."system_vars`
							  		  SET `var_val` = '$wip_clearing_acct_hash'
							  		  WHERE `var_name` = 'AUTO_WIP_CLEARING_ACCT'");
				}
				if ((defined('AUTO_WIP_MIN_AMT') && AUTO_WIP_MIN_AMT != $wip_min_amt) || !defined('AUTO_WIP_MIN_AMT')) {
					$update = true;
					update_sys_data('AUTO_WIP_MIN_AMT',$wip_min_amt);
					$_SESSION['AUTO_WIP_MIN_AMT'] = $wip_min_amt;
					$this->db->query("UPDATE `".DB_PREFIX."system_vars`
							  		  SET `var_val` = '$wip_min_amt'
							  		  WHERE `var_name` = 'AUTO_WIP_MIN_AMT'");
				}
			}
			if ($_POST['DEFAULT_AR_ACCT']) {
				if (!$_POST['DEFAULT_AR_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_DEFAULT_AR_ACCT'] = 1;
				}
				if (!defined('DEFAULT_AR_ACCT') || (defined('DEFAULT_AR_ACCT') && $_POST['DEFAULT_AR_ACCT_hash'] != DEFAULT_AR_ACCT)) 
					$new_val['DEFAULT_AR_ACCT'] = $_POST['DEFAULT_AR_ACCT_hash'];
			}
			if ($_POST['DEFAULT_AP_ACCT']) {
				if (!$_POST['DEFAULT_AP_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_DEFAULT_AP_ACCT'] = 1;
				}
				if (!defined('DEFAULT_AP_ACCT') || (defined('DEFAULT_AP_ACCT') && $_POST['DEFAULT_AP_ACCT_hash'] != DEFAULT_AP_ACCT)) 
					$new_val['DEFAULT_AP_ACCT'] = $_POST['DEFAULT_AP_ACCT_hash'];
			}
			if ($_POST['DEFAULT_WIP_ACCT']) {
				if (!$_POST['DEFAULT_WIP_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_DEFAULT_WIP_ACCT'] = 1;
				}
				if (!defined('DEFAULT_WIP_ACCT') || (defined('DEFAULT_WIP_ACCT') && $_POST['DEFAULT_WIP_ACCT_hash'] != DEFAULT_WIP_ACCT)) 
					$new_val['DEFAULT_WIP_ACCT'] = $_POST['DEFAULT_WIP_ACCT_hash'];
			}
			if ($_POST['DEFAULT_COGS_ACCT']) {
				if (!$_POST['DEFAULT_COGS_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_DEFAULT_COGS_ACCT'] = 1;
				}
				if (!defined('DEFAULT_COGS_ACCT') || (defined('DEFAULT_COGS_ACCT') && $_POST['DEFAULT_COGS_ACCT_hash'] != DEFAULT_COGS_ACCT)) 
					$new_val['DEFAULT_COGS_ACCT'] = $_POST['DEFAULT_COGS_ACCT_hash'];
			}
			if ($_POST['DEFAULT_CASH_ACCT']) {
				if (!$_POST['DEFAULT_CASH_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_DEFAULT_CASH_ACCT'] = 1;
				}
				if (!defined('DEFAULT_CASH_ACCT') || (defined('DEFAULT_CASH_ACCT') && $_POST['DEFAULT_CASH_ACCT_hash'] != DEFAULT_CASH_ACCT)) 
					$new_val['DEFAULT_CASH_ACCT'] = $_POST['DEFAULT_CASH_ACCT_hash'];
			}
			if ($_POST['DEFAULT_CUST_DEPOSIT_ACCT']) {
				if (!$_POST['DEFAULT_CUST_DEPOSIT_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_DEFAULT_CUST_DEPOSIT_ACCT'] = 1;
				}
				if (!defined('DEFAULT_CUST_DEPOSIT_ACCT') || (defined('DEFAULT_CUST_DEPOSIT_ACCT') && $_POST['DEFAULT_CUST_DEPOSIT_ACCT_hash'] != DEFAULT_CUST_DEPOSIT_ACCT)) 
					$new_val['DEFAULT_CUST_DEPOSIT_ACCT'] = $_POST['DEFAULT_CUST_DEPOSIT_ACCT_hash'];
			}
			if ($_POST['DEFAULT_VENDOR_DEPOSIT_ACCT']) {
				if (!$_POST['DEFAULT_VENDOR_DEPOSIT_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_DEFAULT_VENDOR_DEPOSIT_ACCT'] = 1;
				}
				if (!defined('DEFAULT_VENDOR_DEPOSIT_ACCT') || (defined('DEFAULT_VENDOR_DEPOSIT_ACCT') && $_POST['DEFAULT_VENDOR_DEPOSIT_ACCT_hash'] != DEFAULT_VENDOR_DEPOSIT_ACCT)) 
					$new_val['DEFAULT_VENDOR_DEPOSIT_ACCT'] = $_POST['DEFAULT_VENDOR_DEPOSIT_ACCT_hash'];
			}
			if ($_POST['DEFAULT_DISC_TAKEN_ACCT']) {
				if (!$_POST['DEFAULT_DISC_TAKEN_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_DEFAULT_DISC_TAKEN_ACCT'] = 1;
				}
				if (!defined('DEFAULT_DISC_TAKEN_ACCT') || (defined('DEFAULT_DISC_TAKEN_ACCT') && $_POST['DEFAULT_DISC_TAKEN_ACCT_hash'] != DEFAULT_DISC_TAKEN_ACCT)) 
					$new_val['DEFAULT_DISC_TAKEN_ACCT'] = $_POST['DEFAULT_DISC_TAKEN_ACCT_hash'];
			}
			if ($_POST['DEFAULT_PROFIT_ACCT']) {
				if (!$_POST['DEFAULT_PROFIT_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_DEFAULT_PROFIT_ACCT'] = 1;
				}
				if (!defined('DEFAULT_PROFIT_ACCT') || (defined('DEFAULT_PROFIT_ACCT') && $_POST['DEFAULT_PROFIT_ACCT_hash'] != DEFAULT_PROFIT_ACCT)) 
					$new_val['DEFAULT_PROFIT_ACCT'] = $_POST['DEFAULT_PROFIT_ACCT_hash'];
			}			
			if ($_POST['SALES_TAX_PAYABLE']) {
				if (!$_POST['SALES_TAX_PAYABLE_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_SALES_TAX_PAYABLE'] = 1;
				}
				if (!defined('SALES_TAX_PAYABLE') || (defined('SALES_TAX_PAYABLE') && $_POST['SALES_TAX_PAYABLE_hash'] != SALES_TAX_PAYABLE)) 
					$new_val['SALES_TAX_PAYABLE'] = $_POST['SALES_TAX_PAYABLE_hash'];
			}	
			
			//small order fee
			if ($_POST['SMALL_ORDER_FEE_INCOME_ACCT']) {
				if (!$_POST['SMALL_ORDER_FEE_INCOME_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_SMALL_ORDER_FEE_INCOME_ACCT'] = 1;
				}
				if (!defined('SMALL_ORDER_FEE_INCOME_ACCT') || (defined('SMALL_ORDER_FEE_INCOME_ACCT') && $_POST['SMALL_ORDER_FEE_INCOME_ACCT_hash'] != SMALL_ORDER_FEE_INCOME_ACCT)) 
					$new_val['SMALL_ORDER_FEE_INCOME_ACCT'] = $_POST['SMALL_ORDER_FEE_INCOME_ACCT_hash'];
			}	
			if ($_POST['SMALL_ORDER_FEE_COGS_ACCT']) {
				if (!$_POST['SMALL_ORDER_FEE_COGS_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_SMALL_ORDER_FEE_COGS_ACCT'] = 1;
				}
				if (!defined('SMALL_ORDER_FEE_COGS_ACCT') || (defined('SMALL_ORDER_FEE_COGS_ACCT') && $_POST['SMALL_ORDER_FEE_COGS_ACCT_hash'] != SMALL_ORDER_FEE_COGS_ACCT)) 
					$new_val['SMALL_ORDER_FEE_COGS_ACCT'] = $_POST['SMALL_ORDER_FEE_COGS_ACCT_hash'];
			}	

			//freight fee
			if ($_POST['FREIGHT_INCOME_ACCT']) {
				if (!$_POST['FREIGHT_INCOME_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_FREIGHT_INCOME_ACCT'] = 1;
				}
				if (!defined('FREIGHT_INCOME_ACCT') || (defined('FREIGHT_INCOME_ACCT') && $_POST['FREIGHT_INCOME_ACCT_hash'] != FREIGHT_INCOME_ACCT)) 
					$new_val['FREIGHT_INCOME_ACCT'] = $_POST['FREIGHT_INCOME_ACCT_hash'];
			}	
			if ($_POST['FREIGHT_COGS_ACCT']) {
				if (!$_POST['FREIGHT_COGS_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_FREIGHT_COGS_ACCT'] = 1;
				}
				if (!defined('FREIGHT_COGS_ACCT') || (defined('FREIGHT_COGS_ACCT') && $_POST['FREIGHT_COGS_ACCT_hash'] != FREIGHT_COGS_ACCT)) 
					$new_val['FREIGHT_COGS_ACCT'] = $_POST['FREIGHT_COGS_ACCT_hash'];
			}	

			//fuel fee
			if ($_POST['FUEL_SURCHARGE_INCOME_ACCT']) {
				if (!$_POST['FUEL_SURCHARGE_INCOME_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_FUEL_SURCHARGE_INCOME_ACCT'] = 1;
				}
				if (!defined('FUEL_SURCHARGE_INCOME_ACCT') || (defined('FUEL_SURCHARGE_INCOME_ACCT') && $_POST['FUEL_SURCHARGE_INCOME_ACCT_hash'] != FUEL_SURCHARGE_INCOME_ACCT)) 
					$new_val['FUEL_SURCHARGE_INCOME_ACCT'] = $_POST['FUEL_SURCHARGE_INCOME_ACCT_hash'];
			}	
			if ($_POST['FUEL_SURCHARGE_COGS_ACCT']) {
				if (!$_POST['FUEL_SURCHARGE_COGS_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_FUEL_SURCHARGE_COGS_ACCT'] = 1;
				}
				if (!defined('FUEL_SURCHARGE_COGS_ACCT') || (defined('FUEL_SURCHARGE_COGS_ACCT') && $_POST['FUEL_SURCHARGE_COGS_ACCT_hash'] != FUEL_SURCHARGE_COGS_ACCT)) 
					$new_val['FUEL_SURCHARGE_COGS_ACCT'] = $_POST['FUEL_SURCHARGE_COGS_ACCT_hash'];
			}	

			//cbd fee
			if ($_POST['CBD_INCOME_ACCT']) {
				if (!$_POST['CBD_INCOME_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_CBD_INCOME_ACCT'] = 1;
				}
				if (!defined('CBD_INCOME_ACCT') || (defined('CBD_INCOME_ACCT') && $_POST['CBD_INCOME_ACCT_hash'] != CBD_INCOME_ACCT)) 
					$new_val['CBD_INCOME_ACCT'] = $_POST['CBD_INCOME_ACCT_hash'];
			}	
			if ($_POST['CBD_COGS_ACCT']) {
				if (!$_POST['CBD_COGS_ACCT_hash']) {
					$this->content['error'] = 1;
					$this->content['form_return']['err']['err_CBD_COGS_ACCT'] = 1;
				}
				if (!defined('CBD_COGS_ACCT') || (defined('CBD_COGS_ACCT') && $_POST['CBD_COGS_ACCT_hash'] != CBD_COGS_ACCT)) 
					$new_val['CBD_COGS_ACCT'] = $_POST['CBD_COGS_ACCT_hash'];
			}	
					
			if ($this->content['error']) {
				$this->content['form_return']['feedback'] = "The account(s) you selected, indicated in red, are not valid. Please select valid accounts.";
				return;
			}
			if ($new_val) {
				while (list($var_name,$var_val) = each($new_val)) {
					$_SESSION[$var_name] = $var_val;
					update_sys_data($var_name,$var_val);
				}
				$update = true;
				$this->db->query("UPDATE `".DB_PREFIX."session`
								  SET `reload_session` = 1
								  WHERE `obj_id` > 0");
			}

			$this->content['action'] = 'continue';
			$this->content['page_feedback'] = ($update ? "Your business cycle has been configured and saved." : "No changes have been made");
			$this->content['jscript_action'] = ($jscript_action ? $jscript_action : "agent.call('accounting','sf_loadcontent','cf_loadcontent','show_journal','p=$p','order=$order','order_dir=$order_dir');");
			return;
		} else {
			if ($change_year = $_POST['change_year'])
				$this->content['value']['fiscal_year'] = $change_year;
				
			if (!$period_type)
				$period_type = (defined('FISCAL_PERIOD_CONFIG') ? FISCAL_PERIOD_CONFIG : 1);
				
			$this->content['value']['period_type'] = $period_type;
			$period_start = $_POST['period_start'];
			list($this->content['html']['period_layout_holder'],$this->content['jscript']) = $this->config($period_type,$fiscal_month."/".$fiscal_day,$period_start);
			$this->content['action'] = 'continue';
			returrn;
		}
	}
	
	function doit_close_period() {
		$p = $_POST['p'];
		$order = $_POST['order'];
		$order_dir = $_POST['order_dir'];
		$close_array = $_POST['period'];
		for ($i = 0; $i < count($close_array); $i++) {
			if ($close_array[$i])
				$close_period[] = $close_array[$i];
		}
		if (!count($close_period)) {	
			$this->content['error'] = 1;
			$this->content['form_return']['feedback'] = "You have not selected a period to close. Please check the box cooresponding to the period you wish to close.";
			return;
		}
		
		for ($i = 0; $i < count($close_period); $i++) {
			$result = $this->db->query("SELECT *
										FROM `".DB_PREFIX."period_dates`
										WHERE `obj_id` = ".$close_period[$i]."");
			$period_info = $this->db->fetch_assoc($result);
		
			if ($period_info['closed'] == 1) {
				$this->content['error'] = 1;
				$this->content['form_return']['feedback'] = "This period has already been closed. Please check to make sure someone else hasn't already performed this action.";
				return;
			}
			$this->db->query("UPDATE `".DB_PREFIX."period_dates`
							  SET `close_timestamp` = ".time()." , `closed_by` = '".$this->current_hash."' , `closed` = 1
							  WHERE `fiscal_year` = '".$period_info['fiscal_year']."' AND `period` = '".$period_info['period']."'");
		}
		$this->content['action'] = 'continue';
		$this->content['page_feedback'] = "Fiscal year ".$period_info['fiscal_year']." period ".$period_info['period']." has been closed.";
		$this->content['jscript_action'] = ($jscript_action ? $jscript_action : "agent.call('accounting','sf_loadcontent','cf_loadcontent','close_period','p=$p','order=$order','order_dir=$order_dir');");
		return;
	}


	function doit() {
		$action = $_POST['action'];
		$btn = $_POST['btn'];
		$p = $_POST['p'];
		$order = $_POST['order'];
		$order_dir = $_POST['order_dir'];
		$jscript_action = $_POST['jscript_action'];

		$this->popup_id = $_POST['popup_id'];	
		$this->content['popup_controls']['popup_id'] = $this->popup_id;
		
		if ($action)
			return $this->$action();
			
		if ($btn == 'saveaccount') {
			if ($_POST['account_type'] && $_POST['account_name']) {
				$account_hash = $_POST['account_hash'];
				$account_type = $_POST['account_type'];
				$parent_hash = $_POST['parent_hash'];
				$active = $_POST['active'];
				$account_name = trim($_POST['account_name']);
				$account_no = trim($_POST['account_no']);
				$checking = $_POST['checking'];
				if ($account_type != 'CA')
					unset($checking);
					
				$balance = ereg_replace("[^-.0-9]", "",$_POST['balance']);
				if (!$account_hash && $account_no) {
					$result = $this->db->query("SELECT COUNT(*) AS Total
												FROM `".DB_PREFIX."accounts`
												WHERE `account_no` = '$account_no' OR `account_name` = '$account_name'");
					if ($this->db->result($result)) {
						$this->content['error'] = 1;
						$this->content['form_return']['err']['err1_4'.$this->popup_id] = 1;
						$this->content['form_return']['feedback'] = "An account already exists under the account name or number you entered. Please check to make sure you are not creating a duplicate.";
						return;
					}
				}
				if ($account_hash) {
					$this->fetch_account_record($account_hash);
					
					($active != $this->current_account['active'] ? $sql[] = "`active` = '$active'" : NULL);
					($account_name != $this->current_account['account_name'] ? $sql[] = "`account_name` = '$account_name'" : NULL);
					($account_no != $this->current_account['account_no'] ? $sql[] = "`account_no` = '$account_no'" : NULL);
					($parent_hash != $this->current_account['parent_hash'] ? $sql[] = "`parent_hash` = '$parent_hash'" : NULL);
					($checking != $this->current_account['checking'] ? $sql[] = "`checking` = '$checking'" : NULL);
					if ($sql) {
						$this->db->query("UPDATE `".DB_PREFIX."accounts`
										  SET `timestamp` = ".time()." , `last_change` = '".$this->current_hash."' , ".implode(" , ",$sql)."
										  WHERE `account_hash` = '".$this->account_hash."'");
						$feedback = "Your account has been updated.";
					} else
						$feedback = "No changes have been made.";
					
				} else {
					$account_hash = md5(global_classes::get_rand_id(32,"global_classes"));
					while (global_classes::key_exists(DB_PREFIX.'accounts','account_hash',$account_hash))
						$account_hash = md5(global_classes::get_rand_id(32,"global_classes"));
						
					$this->db->query("INSERT INTO `".DB_PREFIX."accounts`
									  (`timestamp` , `last_change` , `account_hash` , `parent_hash` , `account_name` , `active` , `account_no` , `account_type` , `checking` , `balance`)
									  VALUES (".time()." , '".$this->current_hash."', '$account_hash' , '$parent_hash' , '$account_name' , '$active' , '$account_no' , '$account_type' , '$checking' , '$balance')");
					$feedback = "Your account has been added.";
				}
				$this->content['action'] = 'close';
				$this->content['page_feedback'] = $feedback;
				$this->content['jscript_action'] = ($jscript_action ? $jscript_action : "agent.call('accounting','sf_loadcontent','cf_loadcontent','showall','p=$p','order=$order','order_dir=$order_dir');");
			} else {
				$this->content['error'] = 1;
				if (!$_POST['account_type']) $this->content['form_return']['err']['err1_1'.$this->popup_id] = 1;
				if (!$_POST['account_name']) $this->content['form_return']['err']['err1_3'.$this->popup_id] = 1;
				$this->content['form_return']['feedback'] = "Please check that you have completed the required fields.";
				return;
			}
		} elseif ($btn == 'rmaccount') {
			$account_hash = $_POST['account_hash'];
			$this->fetch_account_record($account_hash);
			if ($this->current_account['lock'] || $this->current_account['system']) {
				$this->content['error'] = 1;
				$this->content['form_return']['feedback'] = "We are unable to delete this account because we found journal entries that have been made under this account. To prevent this account from being used uncheck the active box.";
				return;
			}
			
			$this->db->query("DELETE FROM `".DB_PREFIX."accounts`
							  WHERE `account_hash` = '".$this->account_hash."'");
			$feedback = "Your account has been deleted.";
			$this->content['action'] = 'close';
			$this->content['jscript_action'] = ($jscript_action ? $jscript_action : "agent.call('accounting','sf_loadcontent','cf_loadcontent','showall','p=$p','order=$order','order_dir=$order_dir');");
		} elseif ($btn == 'saveentry') {
			$trans_type = $_POST['trans_type'];
			$entry_date = $_POST['entry_date'];
			$_POST['account_name'] = array_values($_POST['account_name']);
			$_POST['account_hash'] = array_values($_POST['account_hash']);
			$_POST['debit'] = array_values($_POST['debit']);
			$_POST['credit'] = array_values($_POST['credit']);
			$_POST['memo'] = array_values($_POST['memo']);			
			$account_name = $_POST['account_name'];
			$account_hash = $_POST['account_hash'];
			$debit = $_POST['debit'];
			$credit = $_POST['credit'];
			$memo = $_POST['memo'];
			$p = $_POST['p'];
			$order = $_POST['order'];
			$order_dir = $_POST['order_dir'];
			$journal_proposal_no = $_POST['journal_proposal_no'];
			$journal_proposal_hash = $_POST['journal_proposal_hash'];
			$journal_memo_amt = $_POST['journal_memo_amt'];
			
			$journal_checking_acct = $_POST['journal_checking_acct'];
			$journal_check_no = $_POST['journal_check_no'];
			$journal_check_remit_to = $_POST['journal_check_remit_to'];
			$journal_check_payee = $_POST['journal_check_payee'];
			$journal_check_payee_hash = $_POST['journal_check_payee_hash'];
			
			$proposal_hash = $_POST['proposal_hash'];
			
			$this->acct_ops['proposal_hash'] = ($journal_proposal_hash ? $journal_proposal_hash : $proposal_hash);
			$this->acct_ops['check_no'] = $journal_check_no;
			$this->acct_ops['vendor_hash'] = $journal_check_payee_hash;
			$this->acct_ops['id_hash'] = $this->current_hash;
			
			if ($trans_type && $entry_date) {
				if (($trans_type == 'ME' && !$journal_proposal_no) || ($trans_type == 'ME' && !$journal_memo_amt) || ($trans_type == 'CD' && !$journal_check_no) || ($trans_type == 'CD' && !$journal_checking_acct) || ($trans_type == 'CD' && !$journal_check_payee) || ($trans_type == 'CD' && !$journal_check_payee_hash)) {
					$this->content['error'] = 1;
					if ($trans_type == 'ME') {
						$this->content['form_return']['feedback'] = "In order to create a memo cost, you must associate it with a proposal and include a memo amount. Please make sure the indicated fields below are completed.";
						if (!$journal_proposal_no)
							$this->content['form_return']['err']['err_proposal_no'] = 1;
						if (!$journal_memo_amt)
							$this->content['form_return']['err']['err_memo_amt'] = 1;
					} elseif ($trans_type == 'CD') {
						$this->content['form_return']['feedback'][] = "In order to create a check entry please complete the indicated fields below.";
						if (!$journal_check_no) 
							$this->content['form_return']['err']['err_check_no'] = 1;
						if (!$journal_checking_acct) 
							$this->content['form_return']['err']['err_check_acct'] = 1;
						if (!$journal_check_payee) 
							$this->content['form_return']['err']['err_check_payee'] = 1;
						if ($journal_check_payee && !$journal_check_payee_hash) {
							$this->content['form_return']['feedback'][] = "We can't seem to find the payee you indicated below. Please make sure you select a valid payee from the list shown.";
							$this->content['form_return']['err']['err_check_payee'] = 1;
						}
					}
					$this->content['submit_btn'] = 'journal_btn';
					return;
				}
				if ($trans_type == 'CD') {
					$result = $this->db->query("SELECT COUNT(*) AS Total
												FROM `".DB_PREFIX."check_register`
												WHERE `check_no` = '$journal_check_no' AND `account_hash` = '$journal_checking_acct'");
					if ($this->db->result($result) != 0) {
						$this->content['error'] = 1;
						$this->content['form_return']['feedback'][] = "The check number you entered, ".$journal_check_no.", has already been used and is found in the check register under the specified checking account. Please enter a check number that has not been used before continuing.";
						$this->content['form_return']['err']['err_check_no'] = 1;
						$this->content['submit_btn'] = 'journal_btn';
						return;
					}
				}
				if ($trans_type == 'ME' && !$journal_proposal_hash) {
					$this->content['error'] = 1;
					$this->content['form_return']['feedback'] = "We can't seem to find the proposal you indicated below. Please make sure you select a valid proposal from the list provided.";
					$this->content['form_return']['err']['err_proposal_no'] = 1;
						
					$this->content['submit_btn'] = 'journal_btn';
					return;
				}
			
				if ($this->period_ck($entry_date) && !$_POST['period_closed_ok']) {
					$this->content['error'] = 1;
					$this->content['form_return']['feedback'] = $this->closed_err;
					if ($this->p->ck('accounting','P','period'))
						$this->content['form_return']['feedback'] .= "
						<br /><br />If you would like to continue, click below:<br /><br />".
						$this->form->button("value=Proceed Anyway","onClick=\$('journal_btn').disabled=1;submit_form(this.form,'accounting','exec_post','refresh_form','btn=saveentry','period_closed_ok=1');");
					
					$this->content['submit_btn'] = 'journal_btn';
					return;
				}	
				$dr = 0;
				$cr = 0;

				for ($i = 0; $i < count($account_hash); $i++) {
					$dr += ereg_replace("[^.0-9]", "",$_POST['debit'][$i]);
					$cr += ereg_replace("[^.0-9]", "",$_POST['credit'][$i]);
					if ($account_name[$i] && !$account_hash[$i] && ($_POST['debit'][$i] || $_POST['credit'][$i])) {
						$account_error = 1;
						$this->content['submit_btn'] = 'journal_btn';
						$this->content['form_return']['err']['err'.$i] = 1;
					}
					if ($_POST['debit'][$i] < 0 || $_POST['credit'][$i] < 0) {
						$this->content['error'] = 1;
						$this->content['form_return']['feedback'] = "You have entered a negative amount. Please make sure all debit/credit amounts are greater than 0.";
						$this->content['submit_btn'] = 'journal_btn';
						return;
					}
				}
				if ($account_error) {
					$this->content['error'] = 1;
					$this->content['form_return']['feedback'] = "We can't seem to find the account indicated below. Please make sure you select a valid account.";
					$this->content['submit_btn'] = 'journal_btn';
					return;
				}
				if (bccomp($cr,$dr,2) != 0 || $dr == 0) {
					$this->content['error'] = 1;
					$this->content['form_return']['feedback'] = ($dr == 0 ? "Your journal entry is empty. Please complete at least 1 debit and 1 credit to continue." : "Your journal entry is out of balance (Debit: $".number_format($dr,2)." Credit: $".number_format($cr,2)."). Please make sure that your credit entries are equal to your debit entries.");
					$this->content['submit_btn'] = 'journal_btn';
					return;
				}
				$audit_id = NEXT_AUDIT_ID;
				update_sys_data('NEXT_AUDIT_ID',($audit_id + 1));
				for ($i = 0; $i < count($account_hash); $i++) {
					$dr = ereg_replace("[^-.0-9]", "",$_POST['debit'][$i]);
					$cr = ereg_replace("[^-.0-9]", "",$_POST['credit'][$i]);			
					
					if ($account_hash[$i] && ($dr || $cr)) {
						$this->fetch_account_record($account_hash[$i]);
						if ($this->current_account['account_action'] == 'DR') {
							if ($dr > 0)
								$balance = $this->current_account['balance'] + $dr;
							if ($cr > 0)
								$balance = $this->current_account['balance'] - $cr;
						} else {
							if ($cr > 0)
								$balance = $this->current_account['balance'] + $cr;
							if ($dr > 0)
								$balance = $this->current_account['balance'] - $dr;
						}
						$this->db->query("UPDATE `".DB_PREFIX."accounts`
										  SET `timestamp` = ".time()." , `last_change` = '".$this->current_hash."' , `balance` = '$balance'
										  WHERE `account_hash` = '".$this->account_hash."'");
						
						$journal_hash = md5(global_classes::get_rand_id(32,"global_classes"));
						while (global_classes::key_exists(DB_PREFIX.'journal','journal_hash',$journal_hash))
							$journal_hash = md5(global_classes::get_rand_id(32,"global_classes"));
						
						if ($i == 0 && $trans_type == 'CD') 
							 $memo[$i] .= (trim($memo[$i]) ? " - " : NULL)."Check No: ".$journal_check_no;
						if ($trans_type == 'CD')
							$check_amt += $cr;
							
						$this->db->query("INSERT INTO `".DB_PREFIX."journal`
										  (`timestamp` , `date` , `id_hash` , `journal_hash` , ".($this->acct_ops['proposal_hash'] ? "`proposal_hash` , " : NULL).($this->acct_ops['check_no'] ? " `check_no` , " : NULL).($this->acct_ops['vendor_hash'] ? "`vendor_hash` , " : NULL)." `audit_id` , `account_hash` , `debit` , `credit` , `trans_type` , `memo`)
										  VALUES ('".time()."' , '$entry_date' , '".$this->current_hash."' , '$journal_hash' , ".($this->acct_ops['proposal_hash'] ? "'".$this->acct_ops['proposal_hash']."' , " : NULL).($this->acct_ops['check_no'] ? "'".$this->acct_ops['check_no']."' , " : NULL).($this->acct_ops['vendor_hash'] ? "'".$this->acct_ops['vendor_hash']."' , " : NULL)." '$audit_id' , '".$this->account_hash."' , '$dr' , '$cr' , '$trans_type' , '".addslashes($memo[$i])."')");
						if ($this->current_account['account_side'] == 'P')
							$this->update_profit($audit_id,$entry_date,$dr,$cr,$this->acct_ops);
							
					}
				}
				if ($trans_type == 'CD') {
					$journal_check_amt = $dr;
					$this->db->query("INSERT INTO `".DB_PREFIX."check_register`
									  (`timestamp` , `last_change` , `account_hash` , `payee` , `remit_to` , `check_date` , `check_no` , `audit_id` , `memo` , `amount`)
									  VALUE(".time()." , '".$this->current_hash."' , '$journal_checking_acct' , '$journal_check_payee_hash' , '$journal_check_remit_to' , '$entry_date' , '$journal_check_no' , '$audit_id' , '".addslashes($memo[0])."' , '$check_amt')");
				} elseif ($trans_type == 'ME') {
					$memo_hash = md5(global_classes::get_rand_id(32,"global_classes"));
					while (global_classes::key_exists(DB_PREFIX.'memo_hash','memo_hash',$memo_hash))
						$memo_hash = md5(global_classes::get_rand_id(32,"global_classes"));
					
					$this->db->query("INSERT INTO `".DB_PREFIX."memo_costs`
									  (`timestamp` , `last_change` , `memo_hash` , `audit_id` , `entry_date` , `proposal_hash` , `amount` , `descr`)
									  VALUES (".time()." , '".$this->current_hash."' , '$memo_hash' , '$audit_id' , '$entry_date' , '$journal_proposal_hash' , '$journal_memo_amt' , '".addslashes($memo[0])."')");
				}
				$this->content['action'] = 'close';
				$this->content['page_feedback'] = "Your journal entry has been saved.";
				if ($proposal_hash)
					$this->content['jscript_action'] = ($jscript_action ? $jscript_action : "agent.call('proposals','sf_loadcontent','cf_loadcontent','ledger','p=$p','proposal_hash=$proposal_hash','otf=1');");				
				else
					$this->content['jscript_action'] = ($jscript_action ? $jscript_action : "agent.call('accounting','sf_loadcontent','cf_loadcontent','show_journal','p=$p','order=$order','order_dir=$order_dir');");
			} else {
				$this->content['error'] = 1;
				$this->content['form_return']['feedback'] = "Please check that you completed the indicated fields.";
				if (!$trans_type) $this->content['form_return']['err']['err1'.$this->popup_id] = 1;
				if (!$entry_date) $this->content['form_return']['err']['err1'.$this->popup_id] = 1;
				$this->content['submit_btn'] = 'journal_btn';
				return;
			}
		} 
	}
	
	function do_search($search_q,$local=NULL) {
		if (!is_array($search_q) || !count($search_q))
			return;
			
		while (list($q_col,$q_info) = each($search_q)) {
			if ($q_info['comp_op']) {
				$combine = " AND ";
				$sql[] = $q_col." ".$q_info['comp_op']." '".$q_info['comp_var']."'";
			} else {
				$combine = " OR ";
				for ($i = 0; $i < count($q_info); $i++)
					$sql[] = $q_col." ".$q_info[$i]['comp_op']." '".$q_info[$i]['comp_var']."'";
			}
		}
		if (!is_array($sql))
			return;
		
		$result = $this->db->query("SELECT t1.obj_id
							  		FROM `".DB_PREFIX."accounts` as t1
							  		WHERE ".implode($combine,$sql));
		$total = $this->db->num_rows($result);
		$search_hash = md5(global_classes::get_rand_id(32,"global_classes"));
		while (global_classes::key_exists(DB_PREFIX.'search','search_hash',$search_hash))
			$search_hash = md5(global_classes::get_rand_id(32,"global_classes"));
		
		$this->db->query("INSERT INTO `".DB_PREFIX."search`
						 (`timestamp` , `search_hash` , `query` , `total` , `variables`)
						 VALUES (".time()." , '$search_hash' , '".base64_encode(serialize(implode($combine,$sql)))."' , '$total' , '".base64_encode(serialize($search_q))."')");
		
		$this->total = $total;
		$this->active_search = $search_hash;
		//$this->content['action'] = 'close';
		//$this->content['jscript_action'] = "agent.call('customers','sf_loadcontent','cf_loadcontent','showall','active_search=$search_hash');";
		return;
	}
	
	function innerHTML_accounts() {
		if (!func_get_args() && $this->ajax_vars['qtype']) {
			$qtype = $this->ajax_vars['qtype'];
			$account_type = $this->ajax_vars['account_type'];
			$selected_value = $this->ajax_vars['parent_hash'];
		} elseif (func_get_args()) {
			$args = func_get_args();
			$qtype = $args[0];
			$account_type = $args[1];
			$selected_value = $args[2];
			$local = 1;
		} 
		list($hash,$name) = $this->fetch_accounts_by_type($account_type);
		
		for ($i = 0; $i < count($hash); $i++) {
			$option[] = "<option value=\"".$hash[$i]."\" ".($selected_value && $selected_value == $hash[$i] ? "selected" : NULL).">".$name[$i]."</option>";
			//if ($account_info['children']) {
				//for ($i = 0; $i < count($account_info['children']); $i++)
					//$option[] = "<option style=\"padding-left:10px;\" value=\"".$account_hash."\" >&nbsp;&nbsp;&nbsp;&nbsp;".$account_info['children'][$i]['child_account_name']."</option>";
			//}
		}
		if (!is_array($option))
			return;
		$select = "<select name=\"parent_hash\" class=\"txtSearch\" ><option></option>".implode("\n",$option)."</select>";
		
		if ($local)
			return $select;
		else
			$this->content['html'][$qtype] = $select;
		return;
	}
	
	function fetch_account_activity($account_hash,$start) {
		$end = SUB_PAGNATION_NUM;

		$result = $this->db->query("SELECT ".DB_PREFIX."journal.* , ".DB_PREFIX."proposals.proposal_no , ".DB_PREFIX."proposals.proposal_descr ,
									".DB_PREFIX."customers.customer_name , ".DB_PREFIX."vendors.vendor_name , ".DB_PREFIX."check_register.check_no AS payment_check_no ,
									".DB_PREFIX."vendor_payables.invoice_no AS ap_invoice_no , ".DB_PREFIX."customer_invoice.invoice_no AS ar_invoice_no
									FROM `".DB_PREFIX."journal`
									LEFT JOIN `".DB_PREFIX."proposals` ON ".DB_PREFIX."proposals.proposal_hash = ".DB_PREFIX."journal.proposal_hash
									LEFT JOIN `".DB_PREFIX."customers` ON ".DB_PREFIX."customers.customer_hash = ".DB_PREFIX."journal.customer_hash
									LEFT JOIN `".DB_PREFIX."vendors` ON ".DB_PREFIX."vendors.vendor_hash = ".DB_PREFIX."journal.vendor_hash
									LEFT JOIN `".DB_PREFIX."customer_invoice` ON ".DB_PREFIX."customer_invoice.invoice_hash = ".DB_PREFIX."journal.ar_invoice_hash
									LEFT JOIN `".DB_PREFIX."customer_payment` ON ".DB_PREFIX."customer_payment.payment_hash = ".DB_PREFIX."journal.ar_payment_hash
									LEFT JOIN `".DB_PREFIX."vendor_payables` ON ".DB_PREFIX."vendor_payables.invoice_hash = ".DB_PREFIX."journal.ar_invoice_hash
									LEFT JOIN `".DB_PREFIX."vendor_payment` ON ".DB_PREFIX."vendor_payment.payment_hash = ".DB_PREFIX."journal.ap_payment_hash
									LEFT JOIN `".DB_PREFIX."check_register` ON (".DB_PREFIX."check_register.check_no = ".DB_PREFIX."vendor_payment.check_no AND ".DB_PREFIX."check_register.audit_id = ".DB_PREFIX."vendor_payment.audit_id)
									WHERE ".DB_PREFIX."journal.account_hash = '$account_hash'									
									ORDER BY ".DB_PREFIX."journal.obj_id DESC".($start ? "
									LIMIT $start , $end" : NULL));		
		while ($row = $this->db->fetch_assoc($result))
			$detail[] = $row;
			
		return $detail;
	}

	function edit_account() {
		$p = $this->ajax_vars['p'];
		$order = $this->ajax_vars['order'];
		$order_dir = $this->ajax_vars['order_dir'];
		if ($this->ajax_vars['popup_id'])
			$this->popup_id = $this->ajax_vars['popup_id'];
		
		if ($account_hash = $this->ajax_vars['account_hash']) 
			$valid = $this->fetch_account_record($account_hash);

		$this->content['popup_controls']['popup_id'] = ($this->ajax_vars['popup_id'] ? $this->ajax_vars['popup_id'] : $_POST['popup_id']);
		$this->popup_id = $this->content['popup_controls']['popup_id'];
		$this->content['popup_controls']['popup_title'] = ($valid ? "Edit an Account" : "Create a New Account");
		
		list($type,$code) = $this->fetch_account_types();
		
		$tbl .= $this->form->form_tag().
		$this->form->hidden(array("account_hash" => $this->account_hash, "popup_id" => $this->popup_id, "p" => $p, "order" => $order, "order_dir" => $order_dir))."
		<div class=\"panel\" id=\"main_table".$this->popup_id."\" style=\"margin-top:0;\">
			<div id=\"feedback_holder".$this->popup_id."\" style=\"background-color:#ffffff;border:1px solid #cccccc;font-weight:bold;padding:5px;display:none;margin-bottom:5px;\">
				<h3 class=\"error_msg\" style=\"margin-top:0;\">Error!</h3>
					<p id=\"feedback_message".$this->popup_id."\"></p>
			</div>".($valid ? "
			<ul id=\"maintab".$this->popup_id."\" class=\"shadetabs\">
				<li class=\"selected\" ><a href=\"javascript:void(0);\" id=\"cntrl_tcontent1".$this->popup_id."\" rel=\"tcontent1".$this->popup_id."\" onClick=\"expandcontent(this);\">General</a></li>
				<li ><a href=\"javascript:void(0);\" id=\"cntrl_tcontent2".$this->popup_id."\" rel=\"tcontent2".$this->popup_id."\" onClick=\"expandcontent(this);\">Activity</a></li>
			</ul>
			<div id=\"tcontent1".$this->popup_id."\" class=\"tabcontent\">" : NULL)."
				<table cellspacing=\"1\" cellpadding=\"5\" style=\"background-color:#8c8c8c;width:700px;margin-top:0;\" class=\"smallfont\">
					<tr>
						<td class=\"smallfont\" style=\"vertical-align:top;text-align:right;background-color:#ffffff;padding-top:10px\" id=\"err1_1".$this->popup_id."\">Type of Account: *</td>
						<td style=\"background-color:#ffffff;padding-top:10px\">".($valid ? 
							$this->current_account['type_name'].$this->form->hidden(array("account_type" => $this->current_account['account_type'])) : 
							$this->form->select("account_type",$type,$this->current_account['account_type'],$code,"onChange=agent.call('accounting','sf_loadcontent','cf_loadcontent','innerHTML_accounts','account_type='+this.options[this.selectedIndex].value,'qtype=subaccount_holder".$this->popup_id."');if(this.options[this.selectedIndex].value=='CA'){toggle_display('checking_holder".$this->popup_id."','block');}else{toggle_display('checking_holder".$this->popup_id."','none');}")).(($valid && $this->current_account['account_type'] == "CA") || !$valid ? "
							<div style=\"padding-top:10px;padding-left:5px;display:".(($valid && $this->current_account['account_type'] == 'CA') || !$valid ? "block" : "none")."\" id=\"checking_holder".$this->popup_id."\">
								".$this->form->checkbox("name=checking","value=1",($this->current_account['checking'] ? "checked" : NULL))."
								Will you write checks from this account?
							</div>" : NULL)."
						</td>
					</tr>
					<tr>
						<td class=\"smallfont\" style=\"text-align:right;background-color:#ffffff;\" id=\"err1_2".$this->popup_id."\">Active: </td>
						<td style=\"background-color:#ffffff;\">".$this->form->checkbox("name=active","value=1",(!$this->current_account || $this->current_account['active'] ? "checked" : NULL))."</td>
					</tr>
					<tr>
						<td class=\"smallfont\" style=\"text-align:right;background-color:#ffffff;\" id=\"err1_2".$this->popup_id."\">Private Account? </td>
						<td style=\"background-color:#ffffff;\">".$this->form->checkbox("name=private","value=1",($this->current_account['private'] ? "checked" : NULL))."</td>
					</tr>
					<tr>
						<td class=\"smallfont\" style=\"text-align:right;background-color:#ffffff;vertical-align:top;\" id=\"err1_3".$this->popup_id."\">Account Name: *</td>
						<td style=\"background-color:#ffffff;\">
							".$this->form->text_box("name=account_name","value=".$this->current_account['account_name'],"maxlength=128","size=25").($this->current_account['system'] ? 
								"&nbsp;&nbsp;<small><i>(System Account)</i></small>" : NULL)."
							
							<div style=\"padding-top:10px;\">
								<i>Subaccount of: </i>
								<div style=\"padding-top:5px;margin-left:10px;padding-bottom:5px;\" id=\"subaccount_holder".$this->popup_id."\">".($valid ? 
									$this->innerHTML_accounts("subaccount_holder".$this->popup_id,$this->current_account['account_type'],$this->current_account['parent_hash']) : $this->form->select("parent_hash",array("Select type of account first..."),NULL,array(),"blank=1","disabled"))."
								</div>
							</div>
						</td>
					</tr>
					<tr>
						<td class=\"smallfont\" style=\"text-align:right;background-color:#ffffff;\" id=\"err1_4".$this->popup_id."\">Account Number: </td>
						<td style=\"background-color:#ffffff;\">".$this->form->text_box("name=account_no","value=".$this->current_account['account_no'],"maxlength=16","size=15")."</td>
					</tr>".(!$valid ? "
					<!--
					<tr>
						<td class=\"smallfont\" style=\"text-align:right;background-color:#ffffff;\" id=\"err1_6".$this->popup_id."\">Opening Balance: </td>
						<td style=\"background-color:#ffffff;\">".$this->form->text_box("name=balance","maxlength=15","size=9","onBlur=this.value=formatCurrency(this.value);","style=text-align:right;")."</td>
					</tr>-->" : NULL)."
				</table>".($valid ? "
			</div>
			<div id=\"tcontent2".$this->popup_id."\" class=\"tabcontent\">".$this->account_history_list(1)."</div>" : NULL)."
			<div style=\"padding:10px;text-align:right;padding-right:45px;\">".(!$valid || ($valid && $this->p->ck(get_class($this),'E','accounts')) ? 
				$this->form->button("value=Save Account","onClick=submit_form(this.form,'accounting','exec_post','refresh_form','btn=saveaccount');") : NULL)."
				&nbsp;&nbsp;".((!$valid || !$this->current_account['lock']) && !$this->current_account['system'] && $this->p->ck(get_class($this),'D','accounts') && $valid ? 
					$this->form->button("value=Delete Account","onClick=if(confirm('Are you sure you want to delete this account? The action CANNOT be undone!')){submit_form(this.form,'accounting','exec_post','refresh_form','btn=rmaccount');}") : NULL)."
			</div>	
		</div>".
		$this->form->close_form();
		
		if ($valid) {
			$this->content["jscript"][] = "setTimeout('initializetabcontent(\'maintab".$this->popup_id."\')',10);";
			if ($this->ajax_vars['tab_to'])
				$this->content['jscript'][] = "setTimeout('expandcontent($(\'cntrl_".$this->ajax_vars['tab_to'].$this->popup_id."\'))',100)";
		}
		$this->content['popup_controls']["cmdTable"] = $tbl;
		return;
	}
	
	function account_history_list($local=NULL) {
		$this->content['popup_controls']['popup_id'] = ($this->ajax_vars['popup_id'] ? $this->ajax_vars['popup_id'] : $_POST['popup_id']);
		$this->popup_id = $this->content['popup_controls']['popup_id'];

		if (!$this->account_hash) {
			if ($account_hash = $this->ajax_vars['account_hash']) 
				$valid = $this->fetch_account_record($account_hash);
		}
		$p = $this->ajax_vars['p'];

		
		$result = $this->db->query("SELECT COUNT(*) AS Total
									FROM `".DB_PREFIX."journal`
									WHERE `account_hash` = '".$this->account_hash."'");
		$total = $this->db->result($result);
		$num_pages = ceil($total / SUB_PAGNATION_NUM);
		$p = (!isset($p) || $p <= 1 || $p > $num_pages) ? 1 : $p;
		$start_from = SUB_PAGNATION_NUM * ($p - 1);
		$end = $start_from + SUB_PAGNATION_NUM;
		if ($end > $total)
			$end = $total;
		
		$order_by_ops = array("date"	=>	DB_PREFIX."journal.date");
	
		$detail = $this->fetch_account_activity($this->account_hash,$start_from);
		
		$tbl .= "
		<table cellspacing=\"1\" cellpadding=\"5\" style=\"background-color:#8c8c8c;width:700px;margin-top:0;\" class=\"smallfont\">
			<tr>
				<td style=\"padding:0;\">
					 <table class=\"tborder\" cellspacing=\"0\" cellpadding=\"6\" style=\"width:100%;\">
						<tr>
							<td style=\"font-weight:bold;vertical-align:middle;\" colspan=\"6\">".($total > 0 ? "
								<div style=\"float:right;font-weight:normal;padding-right:10px;\">".paginate_jscript($num_pages,$p,'sf_loadcontent','cf_loadcontent','accounting','account_history_list',$order,$order_dir,"'otf=1','account_hash=".$this->account_hash."','popup_id=".$this->popup_id."'")."</div>
								Showing ".($start_from + 1)." - ".($start_from + SUB_PAGNATION_NUM > $total ? $total : $start_from + SUB_PAGNATION_NUM)." of ".$total." Entries for ".$this->current_account['account_name']."." : "&nbsp;")."
							</td>
						</tr>
						<tr class=\"thead\" style=\"font-weight:bold;\">
							<td style=\"font-size:9pt;\">Date</td>
							<td style=\"font-size:9pt;\">Type</td>
							<td style=\"font-size:9pt;\">Proposal</td>							
							<td style=\"font-size:9pt;text-align:right;\">Debit</td>
							<td style=\"font-size:9pt;text-align:right;\">Credit</td>
							<td style=\"font-size:9pt;\">Memo</td>
						</tr>";
						for ($i = 0; $i < ($end - $start_from); $i++) {	
							$b++;
							
							$tbl .= "
							<tr onClick=\"agent.call('accounting','sf_loadcontent','refresh_form','doit_search_journal','audit_id=".$detail[$i]['audit_id']."')\" title=\"Click to view entire journal entry for audit id ".$detail[$i]['audit_id']."\" onMouseOver=\"this.className='item_row_over'\" onMouseOut=\"this.className=''\">
								<td style=\"font-size:8pt;\">".date(DATE_FORMAT,strtotime($detail[$i]['date']))."</td>
								<td style=\"font-size:8pt;\">
									".$this->trans_type['type'][array_search($detail[$i]['trans_type'],$this->trans_type['code'])].($detail[$i]['trans_type'] == 'CD' && ($detail[$i]['payment_check_no'] || $detail[$i]['check_no']) ? 
										"&nbsp;".($detail[$i]['payment_check_no'] ? 
											$detail[$i]['payment_check_no'] : $detail[$i]['check_no']) : NULL)."
								</td>
								<td style=\"font-size:8pt;\">".($detail[$i]['proposal_no'] ? 
									$detail[$i]['proposal_no'] : NULL)."
								</td>
								<td style=\"font-size:8pt;;text-align:right;\">".($detail[$i]['debit'] > 0 ?
									"$".number_format($detail[$i]['debit'],2) : NULL)."
								</td>
								<td style=\"font-size:8pt;;text-align:right;\">".($detail[$i]['credit'] > 0 ?
									"$".number_format($detail[$i]['credit'],2) : NULL)."
								</td>
								<td style=\"font-size:8pt;\" ".(strlen($detail[$i]['memo']) > 25 ? "title=\"".$detail[$i]['memo']."\"" : NULL).">".(strlen($detail[$i]['memo']) > 25 ? 
									substr($detail[$i]['memo'],0,25)."..." : $detail[$i]['memo'])."
								</td>
							</tr>".($detail[$i]['vendor_name'] || $detail[$i]['customer_name'] ? "
							<tr>
								<td colspan=\"6\" style=\"font-size:8pt;font-style:italic;padding-top:0;padding-bottom:3px;margin-top:0;margin-bottom:3px;\">".($detail[$i]['vendor_name'] ? 
									stripslashes($detail[$i]['vendor_name']) : ($detail[$i]['customer_name']))."
								</td>
							</tr>" : NULL).($b < ($end - $start_from) ? "
							<tr>
								<td style=\"background-color:#cccccc;\" colspan=\"6\"></td>
							</tr>" : NULL);
						}
						if (!$b)
							$tbl .= "
							<tr>
								<td colspan=\"6\">There is no activity to show within this account.</td>
							</tr>";
						
						
			$tbl .= "
					</table>
				</td>
			</tr>
		</table>";
		
		if ($local)
			return $tbl;
		elseif ($this->ajax_vars['otf'] == 1)
			$this->content['html']["tcontent2".$this->popup_id] = $tbl;
	}
	
	function doit_search_journal() {
		$detail_search = $_POST['detail_search'];
	
		$check_no = ereg_replace("[^0-9]", "",$_POST['check_no']);
		$type = $_POST['type'];
		$invoice_no = $_POST['invoice_no'];
		$from_account = $_POST['from_account'];
		$customer_filter = $_POST['customer_filter'];
		$customer_filter = $this->current_report['customer_filter'];
		if ($customer_filter && !is_array($customer_filter))
			$customer_filter = array($customer_filter);					

		$vendor_filter = $_POST['vendor_filter'];
		$vendor_filter = $this->current_report['vendor_filter'];
		if ($vendor_filter && !is_array($vendor_filter))
			$vendor_filter = array($vendor_filter);							
		
		if ($from_account[0] == "")
			unset($from_account);
			
		$proposal_filter = $_POST['proposal_filter'];
		if (!is_array($proposal_filter) && $proposal_filter)
			$proposal_filter = array($proposal_filter);
			
		$date_start = $_POST['date_start'];
		$date_end = $_POST['date_end'];
	
		$save = $_POST['save'];
		$search_name = $_POST['search_name'];
		if (!$search_name)
			unset($save);
			
		if ($check_no) 
			$sql_p[] = DB_PREFIX."journal.check_no = '".$check_no."'";
		if ($type)
			$sql_p[] = DB_PREFIX."journal.trans_type = '".$type."'";
		if (is_array($proposal_filter) && count($proposal_filter)) {
			$proposal_filter = array_unique($proposal_filter);
			$proposal_filter = array_values($proposal_filter);
			array_walk($proposal_filter,'add_quotes',"'");
			$sql_p[] = DB_PREFIX."journal.proposal_hash IN (".implode(" , ",$proposal_filter).")";
			array_walk($proposal_filter,'strip_quotes');
		}
		if (is_array($from_account) && count($from_account)) {
			$from_account = array_unique($from_account);
			$from_account = array_values($from_account);
			array_walk($from_account,'add_quotes',"'");
			$sql_p[] = DB_PREFIX."journal.account_hash IN (".implode(" , ",$from_account).")";
			array_walk($from_account,'strip_quotes');
		}
		if (is_array($customer_filter) && count($customer_filter)) {
			$customer_filter = array_unique($customer_filter);
			$customer_filter = array_values($customer_filter);
			array_walk($customer_filter,'add_quotes',"'");
			$sql_p[] = DB_PREFIX."journal.customer_hash IN (".implode(" , ",$customer_filter).")";
			array_walk($customer_filter,'strip_quotes');
		}
		if (is_array($vendor_filter) && count($vendor_filter)) {
			$vendor_filter = array_unique($vendor_filter);
			$vendor_filter = array_values($vendor_filter);
			array_walk($vendor_filter,'add_quotes',"'");
			$sql_p[] = DB_PREFIX."journal.vendor_hash IN (".implode(" , ",$vendor_filter).")";
			array_walk($vendor_filter,'strip_quotes');
		}		

		if ($date_start && !$date_end)
			$sql_p[] = DB_PREFIX."journal.date >= '".$date_start."'";
		elseif ($date_end && $date_start && strtotime($date_end) > strtotime($date_start))
			$sql_p[] = DB_PREFIX."journal.date BETWEEN '".$date_start."' AND '".$date_end."'";
		if ($invoice_no) 
			$sql_p[] = DB_PREFIX."customer_invoice.invoice_no LIKE '$invoice_no%' OR ".DB_PREFIX."vendor_payables.invoice_no LIKE '$invoice_no%'";
		
		if ($sql_p) 
			$sql = implode(" AND ",$sql_p);
			
		$r = $this->db->query("SELECT COUNT(".DB_PREFIX."journal.obj_id) AS Total
							   FROM `".DB_PREFIX."journal`
							   LEFT JOIN `".DB_PREFIX."customer_invoice` ON ".DB_PREFIX."customer_invoice.invoice_hash = ".DB_PREFIX."journal.ar_invoice_hash 
							   LEFT JOIN `".DB_PREFIX."vendor_payables` ON ".DB_PREFIX."vendor_payables.invoice_hash = ".DB_PREFIX."journal.ap_invoice_hash 
							   LEFT JOIN `".DB_PREFIX."customer_payment` ON ".DB_PREFIX."customer_payment.payment_hash = ".DB_PREFIX."journal.ar_payment_hash 
							   LEFT JOIN `".DB_PREFIX."vendor_payables` ON ".DB_PREFIX."vendor_payables.payment_hash = ".DB_PREFIX."journal.ap_payment_hash".($sql ? "
							   WHERE $sql" : NULL)."
							   GROUP BY ".DB_PREFIX."journal.audit_id");
		$total = $this->db->num_rows($r);
		$search_hash = md5(global_classes::get_rand_id(32,"global_classes"));
		while (global_classes::key_exists(DB_PREFIX.'search','search_hash',$search_hash))
			$search_hash = md5(global_classes::get_rand_id(32,"global_classes"));
			
		$this->db->query("INSERT INTO `".DB_PREFIX."search`
						  (`timestamp` , `search_hash` , `saved` , `search_name` , `search_class` , `user_hash` , `detail_search` , `query` , `total` , `search_str`)
						  VALUES (".time()." , '$search_hash' , '$save' , '$search_name' , 'journal' , '".$this->current_hash."' , '$detail_search' , '".base64_encode($sql)."' , '$total' , '$str')");
		
		$this->active_search = $search_hash;
		
							  
		$this->content['action'] = ($detail_search ? 'close' : 'continue');
		$this->content['jscript_action'] = "agent.call('accounting','sf_loadcontent','cf_loadcontent','show_journal','active_search=".$this->active_search."');";
		return;
	}

	function fetch_check_detail($check_no,$account_hash=NULL) {
		$result = $this->db->query("SELECT ".DB_PREFIX."check_register.* , ".DB_PREFIX."accounts.account_name , ".DB_PREFIX."accounts.account_no , 
									t1.account_name as expense_account_name , t1.account_no as expense_account_no , ".DB_PREFIX."customers.customer_name , 
									".DB_PREFIX."vendors.vendor_name , COUNT(".DB_PREFIX."vendor_payment.check_no) AS total_invoices_paid
							  		FROM `".DB_PREFIX."check_register`
									LEFT JOIN `".DB_PREFIX."customers` ON ".DB_PREFIX."customers.customer_hash = ".DB_PREFIX."check_register.payee
                                    LEFT JOIN `".DB_PREFIX."vendors` ON ".DB_PREFIX."vendors.vendor_hash = ".DB_PREFIX."check_register.payee
                                    LEFT JOIN `".DB_PREFIX."vendor_payment` ON ".DB_PREFIX."vendor_payment.check_no = ".DB_PREFIX."check_register.check_no
									LEFT JOIN `".DB_PREFIX."accounts` ON ".DB_PREFIX."accounts.account_hash = ".DB_PREFIX."check_register.account_hash
									LEFT JOIN `".DB_PREFIX."accounts` AS t1 ON t1.account_hash = ".DB_PREFIX."check_register.expense_account
							  		WHERE ".DB_PREFIX."check_register.check_no = '$check_no'".($account_hash ? "
							  			 AND ".DB_PREFIX."check_register.account_hash = '$account_hash'" : NULL)."
                                    GROUP BY ".DB_PREFIX."vendor_payment.check_no");
		if ($row = $this->db->fetch_assoc($result)) { 
			$this->current_check = $row;
			return true;
		}
		
		return false;									
	}
	

	function fetch_check_register($start,$end=NULL,$order_by=NULL,$order_dir=NULL) {
		if (!$end)
			$end = MAIN_PAGNATION_NUM;
		
		if ($this->active_search) {
			$result = $this->db->query("SELECT `search_class` , `detail_search` , `query` , `total` , `search_str`
										FROM `".DB_PREFIX."search`
								  		WHERE `search_hash` = '".$this->active_search."'");
			$row = $this->db->fetch_assoc($result);
			if ($row['search_class'] == 'check_reg') {
				$this->total = $row['total'];
				$sql = base64_decode($row['query']);
				unset($this->page_pref['custom']);
				$this->detail_search = $row['detail_search'];
				$this->search_vars = $this->p->load_search_vars($row['search_str']);
			}
		} 
		
		$this->check_register = array();
		$result = $this->db->query("SELECT ".DB_PREFIX."check_register.* , ".DB_PREFIX."accounts.account_name , ".DB_PREFIX."accounts.account_no , 
									t1.account_name as expense_account_name , t1.account_no as expense_account_no , ".DB_PREFIX."customers.customer_name , 
									".DB_PREFIX."vendors.vendor_name , COUNT(".DB_PREFIX."vendor_payment.check_no) AS total_invoices_paid 
							  		FROM `".DB_PREFIX."check_register`
									LEFT JOIN `".DB_PREFIX."customers` ON ".DB_PREFIX."customers.customer_hash = ".DB_PREFIX."check_register.payee
									LEFT JOIN `".DB_PREFIX."vendors` ON ".DB_PREFIX."vendors.vendor_hash = ".DB_PREFIX."check_register.payee
                                    LEFT JOIN `".DB_PREFIX."vendor_payment` ON ".DB_PREFIX."vendor_payment.check_no = ".DB_PREFIX."check_register.check_no
                                    LEFT JOIN `".DB_PREFIX."vendor_payables` ON ".DB_PREFIX."vendor_payables.invoice_hash = ".DB_PREFIX."vendor_payment.invoice_hash
									LEFT JOIN `".DB_PREFIX."accounts` ON ".DB_PREFIX."accounts.account_hash = ".DB_PREFIX."check_register.account_hash
									LEFT JOIN `".DB_PREFIX."accounts` AS t1 ON t1.account_hash = ".DB_PREFIX."check_register.expense_account".($sql ? "
							  		WHERE ".$sql : NULL)."
									GROUP BY ".DB_PREFIX."check_register.check_no".($order_by ? "
							  		ORDER BY $order_by ".($order_dir ? $order_dir : "ASC") : NULL)."
							  		LIMIT $start , $end");
		while ($row = $this->db->fetch_assoc($result)) 
			array_push($this->check_register,$row);
			
	}	

	/*
	 * Fetches the journal entries for bank reconciliation tool
	 * 
	 */
	function fetch_bank_reconcile($account_hash, $start,$end=NULL,$order_by=NULL,$order_dir=NULL) {
		if (!$start) 
			$start = 0;
		if (!$end)
			$end = MAIN_PAGNATION_NUM;
		
		if ($this->active_search) {
			$result = $this->db->query("SELECT `search_class` , `detail_search` , `query` , `total` , `search_str`
										FROM `".DB_PREFIX."search`
								  		WHERE `search_hash` = '".$this->active_search."'");
			$row = $this->db->fetch_assoc($result);
			if ($row['search_class'] == 'check_reg') {
				$this->total = $row['total'];
				$sql = base64_decode($row['query']);
				unset($this->page_pref['custom']);
				$this->detail_search = $row['detail_search'];
				$this->search_vars = $this->p->load_search_vars($row['search_str']);
			}
		} 
		$month_back = date("Y-m-d",strtotime(date("Y-m-d")." -1 month"));
		$sql = "CASE WHEN ". DB_PREFIX."journal.date < '".$month_back."' THEN ".DB_PREFIX."journal.cleared=0 ELSE ".DB_PREFIX."journal.date >= '".$month_back."' END and ".DB_PREFIX."journal.account_hash = '".$account_hash."'";
		
		$this->bank_reconcile = array();
		$result = $this->db->query("SELECT ".DB_PREFIX."journal.* , ".DB_PREFIX."accounts.account_name , ".DB_PREFIX."accounts.account_no 
							  		FROM `".DB_PREFIX."journal`
                                    LEFT JOIN `".DB_PREFIX."accounts` ON ".DB_PREFIX."accounts.account_hash = ".DB_PREFIX."journal.account_hash
									".($sql ? "WHERE ".$sql : NULL)."
									ORDER BY ".DB_PREFIX."journal.date DESC LIMIT $start, $end");
		while ($row = $this->db->fetch_assoc($result)) 
			array_push($this->bank_reconcile,$row);
			
	}	
	
	
	function doit_new_check() {
		$p = $_POST['p'];
		$order = $_POST['order'];
		$order_dir = $_POST['order_dir'];
		
		if ($_POST['journal_check_payee'] && $_POST['payment_account'] && $_POST['account_name'] && $_POST['amount'] && $_POST['check_no'] && $_POST['check_date']) {
			if (!$_POST['journal_check_payee_hash']) {
				$this->content['error'] = 1;
				$this->content['form_return']['feedback'] = "We can't seem to find the payee you entered. Please make sure you are selecting a valid payee.";
				$this->content['form_return']['err']['err2'.$this->popup_id] = 1;
				return;
			}
			if (!$_POST['payment_account_hash']) {
				$this->content['error'] = 1;
				$this->content['form_return']['feedback'] = "We can't seem to find the cash account you entered. Please make sure you are selecting a valid cash account.";
				$this->content['form_return']['err']['err3'.$this->popup_id] = 1;
				return;
			}
			if (!$_POST['account_hash']) {
				$this->content['error'] = 1;
				$this->content['form_return']['feedback'] = "We can't seem to find the account you entered, indicated below. Please make sure you are selecting a valid account.";
				$this->content['form_return']['err']['err3a'.$this->popup_id] = 1;
				return;
			}
			
			$check_no = ereg_replace("[^0-9]", "",$_POST['check_no']);
			$payee_name = $_POST['journal_check_payee'];
			$remit_to = $_POST['journal_check_remit_to'];
			$payee = $_POST['journal_check_payee_hash'];
			$account_hash = $_POST['payment_account_hash'];
			$expense_account = $_POST['account_hash'];

			//Check for duplicate check number
			$result = $this->db->query("SELECT COUNT(*) AS Total
										FROM `".DB_PREFIX."check_register`
										WHERE `check_no` = '".$check_no."' AND `account_hash` = '$account_hash'");
			if ($this->db->result($result) > 0) {
				$this->content['error'] = 1;
				$this->content['form_return']['feedback'] = "The check number you entered has already been assigned. Please enter a unique check number.";
				$this->content['form_return']['err']['err1'.$this->popup_id] = 1;
				return;
			}
			
			$amount = ereg_replace("[^-.0-9]", "",$_POST['amount']);
			if (strspn($amount,"0123456789.") != strlen($amount) || $amount <= 0) {
				$this->content['error'] = 1;
				$this->content['form_return']['feedback'] = "Your check amount is invalid! Please enter you check amount, which must be greater than 0.";
				$this->content['form_return']['err']['err4'.$this->popup_id] = 1;
				return;
			}

			$this->fetch_account_record($expense_account);
			if ($this->current_account['account_action'] == 'CR')
				$exp_amount = $amount * -1;
			else
				$exp_amount = $amount;

			$check_date = $_POST['check_date'];
			list($year,$month,$day) = explode("-",$check_date);
			if (!checkdate($month,$day,$year)) {
				$this->content['error'] = 1;
				$this->content['form_return']['feedback'] = "Your check date is invalid. Please enter a valid check date.";
				$this->content['form_return']['err']['err5'.$this->popup_id] = 1;
				return;
			}
			if ($this->period_ck($check_date)) {
				$this->content['error'] = 1;
				$this->content['form_return']['feedback'] = $this->closed_err;
				return;
			}
			$memo = $_POST['memo'];
			
			$audit_id = NEXT_AUDIT_ID;
			update_sys_data('NEXT_AUDIT_ID',($audit_id + 1));
			
			$this->acct_ops['check_no'] = $check_no;
			$this->acct_ops['vendor_hash'] = $payee;
			
			$this->db->query("INSERT INTO `".DB_PREFIX."check_register`
							  (`timestamp` , `last_change` , `account_hash` , `expense_account` , `payee` , `remit_to` , `check_date` , `check_no` , `audit_id` , `memo` , `amount`)
							  VALUE(".time()." , '".$this->current_hash."' , '$account_hash' , '$expense_account' , '$payee' , '$remit_to' , '$check_date' , '$check_no' , '$audit_id' , '$memo' , '$amount')");
			if ($this->db->insert_id()) {
				$this->exec_trans($audit_id,$check_date,$account_hash,($amount * -1),'CD',$this->acct_ops,$memo.($memo ? " - " : NULL)."Check No. $check_no");
				$this->exec_trans($audit_id,$check_date,$expense_account,$exp_amount,'CD',$this->acct_ops,$memo.($memo ? " - " : NULL)."Check No. $check_no");
				
				update_sys_data('NEXT_CHECK_NO',($check_no + 1));
				
				$this->content['action'] = 'close';
				$this->content['page_feedback'] = "Your check entry has been recorded.";
				$this->content['jscript_action'] = ($jscript_action ? $jscript_action : "agent.call('accounting','sf_loadcontent','cf_loadcontent','check_reg','p=$p','order=$order','order_dir=$order_dir');");
				return;
			} else {
				$this->content['error'] = 1;
				$this->content['form_return']['feedback'] = "The check entry has failed to be created. Please try again.";
				return;
			}
		} else {
			$this->content['error'] = 1;
			$this->content['form_return']['feedback'] = "Please check to make sure you have completed the required fields.";
			if (!$_POST['check_no']) $this->content['form_return']['err']['err1'.$this->popup_id] = 1;
			if (!$_POST['journal_check_payee']) $this->content['form_return']['err']['err2'.$this->popup_id] = 1;
			if (!$_POST['payment_account']) $this->content['form_return']['err']['err3'.$this->popup_id] = 1;
			if (!$_POST['amount']) $this->content['form_return']['err']['err4'.$this->popup_id] = 1;
			if (!$_POST['check_date']) $this->content['form_return']['err']['err5'.$this->popup_id] = 1;
			
			return;
		}
	}

	function edit_check_reg() {
		$p = $this->ajax_vars['p'];
		$order = $this->ajax_vars['order'];
		$order_dir = $this->ajax_vars['order_dir'];
		if ($this->ajax_vars['popup_id'])
			$this->popup_id = $this->ajax_vars['popup_id'];
		
		$this->content['popup_controls']['popup_id'] = ($this->ajax_vars['popup_id'] ? $this->ajax_vars['popup_id'] : $_POST['popup_id']);
		$this->popup_id = $this->content['popup_controls']['popup_id'];
		$this->content['popup_controls']['popup_title'] = "New Check Entry";
		
		$this->fetch_account_record(DEFAULT_CASH_ACCT);
		
		$tbl .= $this->form->form_tag().
		$this->form->hidden(array("popup_id" => $this->popup_id, "p" => $p, "order" => $order, "order_dir" => $order_dir))."
		<div class=\"panel\" id=\"main_table".$this->popup_id."\" style=\"margin-top:0;\">
			<div id=\"feedback_holder".$this->popup_id."\" style=\"background-color:#ffffff;border:1px solid #cccccc;font-weight:bold;padding:5px;display:none;margin-bottom:5px;\">
				<h3 class=\"error_msg\" style=\"margin-top:0;\">Error!</h3>
					<p id=\"feedback_message".$this->popup_id."\">".($error ? 
						$err_feedback : NULL)."</p>
			</div>				
			<table cellspacing=\"1\" cellpadding=\"5\" style=\"background-color:#8c8c8c;width:700px;margin-top:0;\">
				<tr>
					<td class=\"smallfont\" style=\"text-align:right;background-color:#ffffff;vertical-align:top;padding-top:10px;\" id=\"err1".$this->popup_id."\">Check Number: *</td>
					<td style=\"background-color:#ffffff;padding-top:10px;\">".
						$this->form->text_box("name=check_no",
											  "value=".(defined('NEXT_CHECK_NO') ? NEXT_CHECK_NO : NULL),
											  "size=15")."
					</td>
				</tr>
				<tr>
					<td class=\"smallfont\" style=\"text-align:right;background-color:#ffffff;vertical-align:top;padding-top:10px;\">
						<div id=\"err2".$this->popup_id."\">Payee: *</div>
						<div style=\"margin-top:12px;\">Remit To:</div>
					</td>
					<td style=\"background-color:#ffffff;padding-top:10px;\">
						".$this->form->text_box("name=journal_check_payee",
												"value=",
												"autocomplete=off",
												"size=40",
												"onFocus=if(this.value){select();}position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');if($F('journal_check_payee_hash')==''){clear_values('journal_check_payee');}key_call('accounting','journal_check_payee','journal_check_payee_hash',1);",
												"onBlur=vtobj.reset_keyResults();key_clear();",
												"onKeyDown=if(event.keyCode!=9){clear_values('journal_check_payee_hash');}").
						$this->form->hidden(array("journal_check_payee_hash" => ''))."
						<div style=\"width:250px;margin-top:5px;\">
							".$this->form->text_area("name=journal_check_remit_to","rows=3","cols=39")."
						</div>
					</td>
				</tr>
				<tr>
					<td class=\"smallfont\" style=\"text-align:right;background-color:#ffffff;vertical-align:top;padding-top:10px;\" id=\"err3".$this->popup_id."\">Cash Account: *</td>
					<td style=\"background-color:#ffffff;padding-top:10px;\">".
						$this->form->text_box("name=payment_account",
											  "value=".($this->current_account['account_no'] ? $this->current_account['account_no']." - " : NULL).$this->current_account['account_name'],
											  "autocomplete=off",
											  "size=40",
											  "onFocus=select();position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');if($F('payment_account_hash')==''){clear_values('payment_account');}key_call('payables','payment_account','payment_account_hash',1);",
											  "onBlur=vtobj.reset_keyResults();key_clear();if(!\$F('payment_account')){\$('payment_account_hash').value='';}",
											  "onKeyDown=if(event.keyCode!=9){clear_values('payment_account_hash');}").
						$this->form->hidden(array("payment_account_hash" => DEFAULT_CASH_ACCT))."
						<a href=\"javascript:void(0);\" onMouseOver=\"position_element($('keyResults'),findPos($('payment_account'),'top')+20,findPos($('payment_account'),'left')+1,'account_suggest');\" onClick=\"agent.call('payables','exec_post','cf_loadcontent','action=key_search','parent_name=payment_account','parent_id=payment_account_hash','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>
					</td>
				</tr>
				<tr>
					<td class=\"smallfont\" style=\"text-align:right;background-color:#ffffff;vertical-align:top;padding-top:10px;\" id=\"err3a".$this->popup_id."\">Expense Account: *</td>
					<td style=\"background-color:#ffffff;padding-top:10px;\">".
						$this->form->text_box("name=account_name",
											  "value=",
											  "autocomplete=off",
											  "size=40",
											  "onFocus=select();position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');if($F('payment_account_hash')==''){clear_values('account_name');}key_call('accounting','account_name','account_hash',1);",
											  "onBlur=vtobj.reset_keyResults();key_clear();if(!\$F('account_name')){\$('account_hash').value='';}",
											  "onKeyDown=if(event.keyCode!=9){clear_values('account_hash');}").
						$this->form->hidden(array("account_hash" => ''))."
						<a href=\"javascript:void(0);\" onMouseOver=\"position_element($('keyResults'),findPos($('account_name'),'top')+20,findPos($('account_name'),'left')+1,'account_suggest');\" onClick=\"agent.call('payables','exec_post','cf_loadcontent','action=key_search','parent_name=account_name','parent_id=account_hash','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>
					</td>
				</tr>
				<tr>
					<td class=\"smallfont\" style=\"text-align:right;background-color:#ffffff;vertical-align:top;padding-top:10px;\" id=\"err4".$this->popup_id."\">Check Amount: *</td>
					<td style=\"background-color:#ffffff;padding-top:10px;\">".
						$this->form->text_box("name=amount",
											  "size=10",
											  "onBlur=if(this.value){this.value=formatCurrency(this.value);}",
											  "style=text-align:right;")."
					</td>
				</tr>
				<tr>
					<td class=\"smallfont\" style=\"text-align:right;background-color:#ffffff;vertical-align:top;padding-top:10px;\" id=\"err5".$this->popup_id."\">Check Date: *</td>
					<td style=\"background-color:#ffffff;padding-top:10px;\">
						<span id=\"check_date_holder".$this->popup_id."\"></span>";
						$jscript[] = "setTimeout('DateInput(\'check_date\',\'true\',\'YYYY-MM-DD\',\'".date("Y-m-d")."\',1,\'check_date_holder".$this->popup_id."\')',45)";
						$tbl .= "
					</td>
				</tr>
				<tr>
					<td class=\"smallfont\" style=\"text-align:right;background-color:#ffffff;vertical-align:top;padding-top:10px;\">Memo: </td>
					<td style=\"background-color:#ffffff;padding-top:10px;\">".
						$this->form->text_box("name=memo",
											  "size=40")."
					</td>
				</tr>
			</table>
			<div style=\"padding:10px;text-align:right;padding-right:45px;\">
				".$this->form->button("value=Save Entry","onClick=submit_form(this.form,'accounting','exec_post','refresh_form','action=doit_new_check');")."
			</div>	
		</div>".
		$this->form->close_form();
		
		if ($local)
			return $inner_tbl;

		$this->content["jscript"] = $jscript;
		$this->content['popup_controls']["cmdTable"] = $tbl;
		return;
	}
	
	function doit_check_reg() {
		$cleared = $_POST['cleared'];
		$unclear = $_POST['unclear'];
		if (is_array($cleared)) {
			while (list($check_no,$val) = each($cleared)) {
				if ($val == 1) {
					$this->content['html']['cleared_'.$check_no] = "<a href=\"javascript:void(0);\" onClick=\"submit_form($('test').form,'accounting','exec_post','refresh_form','action=doit_check_reg','unclear=".$check_no."');\"><img src=\"images/check.gif\" alt=\"Remove cleared flag from this check\" border=\"0\" /></a>";
					$this->content['jscript'][] = "toggle_display('print_cntrl_".$check_no."','none');";
					$this->db->query("UPDATE `".DB_PREFIX."check_register`
									  SET `cleared` = 1
									  WHERE `check_no` = '$check_no'");
				}
			}
		}
		if ($unclear) {
			$this->content['html']['cleared_'.$unclear] = $this->form->checkbox("name=cleared[".$unclear."]","value=1","onClick=auto_save();");
			$this->content['jscript'][] = "toggle_display('print_cntrl_".$unclear."','block');";
			$this->db->query("UPDATE `".DB_PREFIX."check_register`
							  SET `cleared` = 0
							  WHERE `check_no` = '$unclear'");
		}
		$this->content['action'] = 'continue';
		return;
	}

	function doit_void() {
		$p = $_POST['p'];
		$order = $_POST['order'];
		$order_dir = $_POST['order_dir'];
		$check_no = $_POST['check_no'];
		$account_hash = $_POST['account_hash'];
		
		if ($valid = $this->fetch_check_detail($check_no,$account_hash)) {
			if ($this->current_check['cleared']) {
				$this->content['action'] = 'continue';
				$this->content['jscript'] = "alert('This check cannot be voided because it has already cleared.');";
				return;
			}
			$audit_id = fetch_sys_var('NEXT_AUDIT_ID');
			update_sys_data('NEXT_AUDIT_ID',($audit_id + 1));
			
			$this->acct_ops['check_no'] = $check_no;
			$this->acct_ops['vendor_hash'] = $this->current_check['payee'];
			
			//See if the check was created manually through a journal entry			
			if (!$this->current_check['expense_account']) {
				$result = $this->db->query("SELECT *
											FROM `".DB_PREFIX."journal`
											WHERE `audit_id` = '".$this->current_check['audit_id']."' AND `auto` = 0");
				while ($row = $this->db->fetch_assoc($result)) {
					$this->fetch_account_record($row['account_hash']);
					if ($row['debit'] != 0)
						$amount = $row['debit'];
					else
						$amount = $row['credit'];
					
					switch ($this->current_account['account_action']) {
						case 'DR':
						if ($row['debit'] != 0)
							$amount = $row['debit'] * -1;
						else
							$amount = $row['credit'];
						break;
						
						case 'CR':
						if ($row['credit'] != 0)
							$amount = $row['credit'] * -1;
						else
							$amount = $row['debit'];
						break;
					}
					$this->exec_trans($audit_id,date("Y-m-d"),$row['account_hash'],$amount,'AD',$this->acct_ops,'Voided Check : '.$this->current_check['check_no']);
				}
				
			} else {
				//Return the money to a/p and the used cash account:
				$this->exec_trans($audit_id,date("Y-m-d"),$this->current_check['account_hash'],$this->current_check['amount'],'AD',$this->acct_ops,'Voided Check : '.$this->current_check['check_no']);
				
				$this->fetch_account_record($this->current_check['expense_account']);
				if ($this->current_account['account_action'] == 'CR')
					$exp_amount = $this->current_check['amount'];
				else
					$exp_amount = $this->current_check['amount'] * -1;
					
				$this->exec_trans($audit_id,date("Y-m-d"),($this->current_check['expense_account'] ? $this->current_check['expense_account'] : DEFAULT_AP_ACCT),$exp_amount,'AD',$this->acct_ops,'Voided Check : '.$this->current_check['check_no']);
				
				$payables = new payables($this->current_hash);
				$result = $this->db->query("SELECT ".DB_PREFIX."vendor_payment.*
											FROM `".DB_PREFIX."vendor_payment`
											WHERE `check_no` = '".$this->current_check['check_no']."'");
				
				while ($row = $this->db->fetch_assoc($result)) {
					$payables->fetch_invoice_record($row['invoice_hash']);
					$this->acct_ops['ap_invoice_hash'] = $payables->invoice_hash;
					$this->acct_ops['ap_payment_hash'] = $row['payment_hash'];
					$this->acct_ops['proposal_hash'] = $payables->current_invoice['invoice_proposal'];
					
					$balance = $payables->current_invoice['balance'] + $row['payment_amount'] + $row['deposit_used'] + $row['discount_taken'] + $row['credit_used'];			

					if ($payables->current_invoice['type'] == 'I' && $row['deposit_used'] > 0) {						
						$this->exec_trans($audit_id,date("Y-m-d"),($this->current_check['expense_account'] ? $this->current_check['expense_account'] : DEFAULT_AP_ACCT),$row['deposit_used'],'AD',$this->acct_ops,'Refund a previously applied deposit');
						$this->exec_trans($audit_id,date("Y-m-d"),$row['deposit_hash'],$row['deposit_used'],'AD',$this->acct_ops,'Refund a previously applied deposit');				
					}
					if ($row['discount_taken'] > 0) {
						$this->exec_trans($audit_id,date("Y-m-d"),($this->current_check['expense_account'] ? $this->current_check['expense_account'] : DEFAULT_AP_ACCT),$row['discount_taken'],'AD',$this->acct_ops,'Reverse previous discounts taken');
						$this->exec_trans($audit_id,date("Y-m-d"),$row['discount_acct_hash'],$row['discount_taken'],'AD',$this->acct_ops,'Reverse previous discounts taken');				
					}
					if ($this->current_invoice['type'] == 'D') {
						$this->exec_trans($audit_id,date("Y-m-d"),DEFAULT_WIP_ACCT,$row['payment_amount'],'AD',$this->acct_ops,'Reverse deposit paid against WIP.');
						$this->exec_trans($audit_id,date("Y-m-d"),DEFAULT_VENDOR_DEPOSIT_ACCT,($row['payment_amount'] * -1),'AD',$this->acct_ops,'Reverse deposit paid against vendor deposits account.');				
					}
					if ($row['credit_used'] > 0) {
						$r = $this->db->query("SELECT ".DB_PREFIX."vendor_credit_applied.* , ".DB_PREFIX."vendor_payables.type AS credit_type ,
											   ".DB_PREFIX."vendor_payables.balance AS credit_balance
											   FROM `".DB_PREFIX."vendor_credit_applied`
											   LEFT JOIN `".DB_PREFIX."vendor_payables` ON ".DB_PREFIX."vendor_payables.invoice_hash = ".DB_PREFIX."vendor_credit_applied.invoice_hash
											   WHERE ".DB_PREFIX."vendor_credit_applied.payment_hash = '".$row['payment_hash']."'");
						while ($row2 = $this->db->fetch_assoc($r)) {
							$this->db->query("UPDATE ".DB_PREFIX."vendor_payables
											  SET `balance` = '".($row2['credit_type'] == 'I' ? $row2['credit_balance'] - $row2['amount'] : $row2['credit_balance'] + $row2['amount'])."'
											  WHERE `invoice_hash` = '".$row2['invoice_hash']."'");
							$this->db->query("DELETE FROM `".DB_PREFIX."vendor_credit_applied`
											  WHERE `obj_id` = '".$row2['obj_id']."'");
						}
					
					}								
					
					$this->db->query("UPDATE ".DB_PREFIX."vendor_payables
									  SET `timestamp` = ".time()." , `last_change` = '".$this->current_hash."' , `paid_in_full` = 0 , `balance` = '$balance'
									  WHERE `invoice_hash` = '".$payables->invoice_hash."'");
				}		
			}
			
			$this->db->query("UPDATE `".DB_PREFIX."check_register`
							  SET `void` = 1
							  WHERE `check_no` = '".$this->current_check['check_no']."'");
		
			$this->content['action'] = 'continue';
			$this->content['page_feedback'] = "Check ".$this->current_check['check_no']." has been voided.";
			$this->content['jscript_action'] = ($jscript_action ? $jscript_action : "agent.call('accounting','sf_loadcontent','cf_loadcontent','check_reg','p=$p','order=$order','order_dir=$order_dir');");
		} else {
			$this->content['action'] = 'continue';
			$this->content['jscript'] = "alert('We were unable to retrieve the check detail. Please make sure the check hasn't recently been voided by someone else.');";
			return;
		}
	}
	
	function show_invoices_paid() {
		$check_no = $this->ajax_vars['check_no'];
		
		$result = $this->db->query("SELECT ".DB_PREFIX."vendor_payables.invoice_hash , ".DB_PREFIX."vendor_payables.invoice_no , 
									".DB_PREFIX."vendor_payables.invoice_date , ".DB_PREFIX."vendor_payment.payment_amount AS amount , ".DB_PREFIX."check_register.void
									FROM `".DB_PREFIX."vendor_payables`
									LEFT JOIN `".DB_PREFIX."vendor_payment` ON ".DB_PREFIX."vendor_payment.invoice_hash = ".DB_PREFIX."vendor_payables.invoice_hash
									LEFT JOIN `".DB_PREFIX."check_register` ON ".DB_PREFIX."check_register.check_no = ".DB_PREFIX."vendor_payment.check_no
									WHERE ".DB_PREFIX."vendor_payment.check_no = '$check_no'");
		while ($row = $this->db->fetch_assoc($result)) {
			$no .= "
			<div style=\"font-size:8pt;".($row['void'] ? "color:#8f8f8f;font-style:italic;" : NULL)."\"><a href=\"javascript:void(0);\" class=\"link_standard\" ".($row['void'] ? "style=\"color:#8f8f8f;\"" : NULL)." onClick=\"agent.call('payables','sf_loadcontent','show_popup_window','edit_invoice','invoice_hash=".$row['invoice_hash']."','popup_id=invoice_detail');\" title=\"Open this invoice\">Invoice ".$row['invoice_no']."</a></div>";
			$date .= "
			<div style=\"font-size:8pt;".($row['void'] ? "color:#8f8f8f;font-style:italic;" : NULL)."\">".date(DATE_FORMAT,strtotime($row['invoice_date']))."</div>";
			$amt .= "
			<div style=\"font-size:8pt;".($row['void'] ? "color:#8f8f8f;font-style:italic;" : NULL)."\">$".number_format($row['amount'],2)."</div>";
		}
		
		$this->content['html']['invoice_list_no_'.$check_no] = $no;
		$this->content['html']['invoice_list_date_'.$check_no] = $date;
		$this->content['html']['invoice_list_amt_'.$check_no] = $amt;
		$this->content['jscript'] = "toggle_display('invoice_list_".$check_no."','block');";
		return;
	}
	
	function doit_search_check_reg() {
		$detail_search = $_POST['detail_search'];
		$check_no = ereg_replace("[^0-9]", "",$_POST['check_no']);
		$invoice_no = trim($_POST['invoice_no']);
		if ($invoice_no)
			$invoice_no = explode(",",$invoice_no);
		if ($invoice_no) {
			for ($i = 0; $i < count($invoice_no); $i++) {
				if (trim($invoice_no[$i]))
					$search_invoice[] = trim($invoice_no[$i]);
			}
			unset($invoice_no);
			$invoice_no = $search_invoice;
		}
		$from_account = $_POST['from_account'];
		$payee_filter = $_POST['customer_vendor_filter'];
		if (!is_array($payee_filter) && $payee_filter)
			$payee_filter = array($payee_filter);
			
		$cleared = $_POST['cleared'];
		$amount = ereg_replace("[^-.0-9]", "",$_POST['amount'])*1;
		$date_start = $_POST['date_start'];
		$date_end = $_POST['date_end'];
	
		$save = $_POST['save'];
		$search_name = $_POST['search_name'];
		if (!$search_name)
			unset($save);
			
		if ($check_no)
			$sql_p[] = DB_PREFIX."check_register.check_no = '".$check_no."'";
		if ($invoice_no)
			$sql_p[] = DB_PREFIX."vendor_payables.invoice_no LIKE '%".$dc_po_no."%'";
		if ($from_account)
			$sql_p[] = DB_PREFIX."check_register.account_hash = '".$from_account."'";
		if (is_array($payee_filter) && count($payee_filter)) {
			$payee_filter = array_unique($payee_filter);
			$payee_filter = array_values($payee_filter);
			array_walk($payee_filter,'add_quotes',"'");
			$sql_p[] = DB_PREFIX."check_register.payee IN (".implode(" , ",$payee_filter).")";
			array_walk($payee_filter,'strip_quotes');
		}
		if (is_array($invoice_no) && count($invoice_no)) {
			$invoice_no = array_unique($invoice_no);
			$invoice_no = array_values($invoice_no);
			array_walk($invoice_no,'add_quotes',"'");
			$sql_p[] = DB_PREFIX."vendor_payables.invoice_no IN (".implode(" , ",$invoice_no).")";
			array_walk($invoice_no,'strip_quotes');
		}
		if ($cleared)
			$sql_p[] = DB_PREFIX."check_register.cleared = ".($cleared == 1 ? 1 : 0);
		if ($amount)
			$sql_p[] = DB_PREFIX."check_register.amount BETWEEN '".($amount - 100)."' AND '".($amount + 100)."'";
		if ($date_start && !$date_end)
			$sql_p[] = DB_PREFIX."check_register.check_date >= '".$date_start."'";
		elseif ($date_end && $date_start && strtotime($date_end) > strtotime($date_start))
			$sql_p[] = DB_PREFIX."check_register.check_date BETWEEN '".$date_start."' AND '".$date_end."'";
			
		if ($sql_p) 
			$sql = implode(" AND ",$sql_p);
			
		$r = $this->db->query("SELECT COUNT(".DB_PREFIX."check_register.obj_id) AS Total
							   FROM `".DB_PREFIX."check_register`
							   LEFT JOIN `".DB_PREFIX."vendor_payment` ON ".DB_PREFIX."vendor_payment.check_no = ".DB_PREFIX."check_register.check_no
							   LEFT JOIN `".DB_PREFIX."vendor_payables` ON ".DB_PREFIX."vendor_payables.invoice_hash = ".DB_PREFIX."vendor_payment.invoice_hash".($sql ? "
							   WHERE $sql" : NULL)."
							   GROUP BY ".DB_PREFIX."check_register.check_no");
		$total = $this->db->num_rows($r);
		$search_hash = md5(global_classes::get_rand_id(32,"global_classes"));
		while (global_classes::key_exists(DB_PREFIX.'search','search_hash',$search_hash))
			$search_hash = md5(global_classes::get_rand_id(32,"global_classes"));
			
		$this->db->query("INSERT INTO `".DB_PREFIX."search`
						  (`timestamp` , `search_hash` , `saved` , `search_name` , `search_class` , `user_hash` , `detail_search` , `query` , `total` , `search_str`)
						  VALUES (".time()." , '$search_hash' , '$save' , '$search_name' , 'check_reg' , '".$this->current_hash."' , '$detail_search' , '".base64_encode($sql)."' , '$total' , '$str')");
		
		$this->active_search = $search_hash;
		
							  
		$this->content['action'] = ($detail_search ? 'close' : 'continue');
		$this->content['jscript_action'] = "agent.call('accounting','sf_loadcontent','cf_loadcontent','check_reg','active_search=".$this->active_search."');";
		return;
	}
	
	function search_check_reg() {
		$date = date("U") - 3600;
		$result = $this->db->query("DELETE FROM `".DB_PREFIX."search`
							  		WHERE `timestamp` <= '$date'");
							  
		$this->content['popup_controls']['popup_id'] = $this->ajax_vars['popup_id'];
		$this->content['popup_controls']['popup_title'] = "Search Check Register";		
		$this->content['focus'] = "check_no";
		
		list($search_name,$search_hash) = $this->fetch_searches();
		list($hash,$name) = $this->fetch_accounts_by_type('CA',1);
		$tbl .= $this->form->form_tag().
		$this->form->hidden(array('popup_id' 		=> $this->content['popup_controls']['popup_id'],
								  'detail_search' 	=> 1
								  ))."
		
		<div class=\"panel\" id=\"main_table\">
			<div id=\"feedback_holder\" style=\"background-color:#ffffff;border:1px solid #cccccc;font-weight:bold;padding:5px;display:none;margin-bottom:5px;\">
				<h3 class=\"error_msg\" style=\"margin-top:0;\">Error!</h3>
				<p id=\"feedback_message\"></p>
			</div>
			<div style=\"padding:15px 0 0 15px;font-weight:bold;\"></div>
			<table cellspacing=\"1\" cellpadding=\"5\" style=\"background-color:#8c8c8c;width:700px;margin-top:0;\" class=\"smallfont\">
				<tr>
					<td class=\"smallfont\" style=\"padding:20px 45px;background-color:#ffffff;\">
						<div style=\"font-weight:bold;padding-bottom:10px;\">
							Filter your check register search criteria below:
						</div>
						<table>
							<tr>
								<td style=\"padding-left:15px;\">
									<fieldset>
										<legend>Check Number</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->text_box("name=check_no","size=15","maxlength=12")."</div>
									</fieldset>
								</td>
								<td style=\"padding-left:15px;\">
									<fieldset>
										<legend>Vendor Invoice Number(s)</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->text_box("name=invoice_no","size=35","maxlength=255")."</div>
									</fieldset>
								</td>
								<td style=\"vertical-align:top;padding:5px;\" rowspan=\"6\">									
									<div style=\"margin-left:15px;\">".($search_name ? "
										<div style=\"margin-bottom:10px;\">
											Saved Searches:
											<div style=\"padding-top:5px\">
												".$this->form->select("saved_searches",$search_name,'',$search_hash,"style=width:100px","onChange=if(this.options[this.selectedIndex].value != ''){toggle_display('search_go_btn','block');}else{toggle_display('search_go_btn','none');}")."
												<div id=\"search_go_btn\" style=\"display:block;padding-top:5px;text-align:right;\">
													".$this->form->button("value=Go","onClick=agent.call('proposals','sf_loadcontent','cf_loadcontent','showall','active_search='+\$F('saved_searches'));window.setTimeout('popup_windows[\'".$this->content['popup_controls']['popup_id']."\'].hide()',1000);")."&nbsp;".$this->form->button("value=Remove","onClick=")."
												</div>
											</div>
										</div>" : NULL)."
										".$this->form->checkbox("name=save","value=1","onClick=if(this.checked){toggle_display('save_search_box','block')}else{toggle_display('save_search_box','none')}")."&nbsp;Save Search?
										<div style=\"padding-top:5px;display:none;\" id=\"save_search_box\">
											Search Name:
											<br />
											".$this->form->text_box("name=search_name","value=","size=15","maxlenth=64")."
										</div>
									</div>
								</td>
							</tr>
							<tr>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Paid from account: </legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->select("from_account",$name,'',$hash)."</div>
									</fieldset>
								</td>
								<td style=\"padding-left:15px;vertical-align:top;\" rowspan=\"2\">
									<fieldset>
										<legend>Search By Payee</legend>
										<div style=\"padding:5px;padding-bottom:5px\">
											".$this->form->text_box("name=customer_vendor",
																	"value=",
																	"autocomplete=off",
																	"size=37",
																	"onFocus=position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'));key_call('reports','customer_vendor','customer_hash',1);",
																	"onBlur=vtobj.reset_keyResults();key_clear();"
																	)."
											
									
											<div style=\"margin-top:15px;width:250px;height:45px;overflow:auto;display:block;background-color:#efefef;border:1px outset #cccccc;\" id=\"customer_vendor_filter_holder\"></div>
										</div>
									</fieldset>
								</td>
							</tr>
							<tr>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Cleared/Outstanding</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->select("cleared",array("Cleared","Outstanding"),'',array(1,2))."</div>
									</fieldset>
								</td>
							</tr>
							<tr>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Check Amount</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->text_box("name=amount","onBlur=if(this.value){this.value=formatCurrency(this.value);}")."</div>
									</fieldset>
								</td>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset style=\"width:90%;\">
										<legend>Date Range</legend>
										<div style=\"padding:5px;padding-bottom:5px\">
											<span id=\"date_start_holder\"></span>
											<span id=\"date_end_holder\"></span>";
										$this->content['jscript'][] = "
											setTimeout('DateInput(\'date_start\',false, \'YYYY-MM-DD\',\'\',1,\'date_start_holder".$this->popup_id."\',\'<span id=\"err1".$this->popup_id."\">From:</span>&nbsp;\')',20);						
											setTimeout('DateInput(\'date_end\',false, \'YYYY-MM-DD\',\'\',1,\'date_end_holder".$this->popup_id."\',\'<span id=\"err2".$this->popup_id."\">&nbsp;Thru:</span>&nbsp;\')',41);";
										
										$tbl .= "
										</div>
									</fieldset>
								</td>
							</tr>
						</table>
					</td>
				</tr>
			</table>
			<div style=\"text-align:right;padding:15px;\">
				".$this->form->button("value=Search","id=primary","onClick=submit_form($('popup_id').form,'accounting','exec_post','refresh_form','action=doit_search_check_reg');")."
			</div>
		</div>".
		$this->form->close_form();
		
		$this->content['popup_controls']["cmdTable"] = $tbl;
	}
	

	function check_reg() {
		$this->unlock("_");
		$this->load_class_navigation();		
		$p = $this->ajax_vars['p'];
		$order = $this->ajax_vars['order'];
		$order_dir = $this->ajax_vars['order_dir'];
		$this->active_search = $this->ajax_vars['active_search'];
		
		$num_pages = ceil($this->check_total / MAIN_PAGNATION_NUM);
		$p = (!isset($p) || $p <= 1 || $p > $num_pages) ? 1 : $p;
		$start_from = MAIN_PAGNATION_NUM * ($p - 1);
		
		$end = $start_from + MAIN_PAGNATION_NUM;
		if ($end > $this->check_total)
			$end = $this->check_total;
		
		$order_by_ops = array("check_date"			=>	DB_PREFIX."check_register.check_date",
							  "payee"				=>	DB_PREFIX."check_register.payee",
							  "check_no"			=>	DB_PREFIX."check_register.check_no");

		$this->fetch_check_register($start_from,$end,($order ? $order_by_ops[$order] : DB_PREFIX."check_register.check_no"),($order_dir ? $order_dir : "DESC"));
		$this->content['jscript'][] = "
		var auto_save_timer = 0;
		var current_saved = true;
		auto_save = function() {
			if (auto_save_timer == 0) {
				auto_save_timer = window.setTimeout('doit_auto_save()',2000);
				current_saved = false;
			}
		}
		doit_auto_save = function() {
			auto_save_timer = 0;
			current_saved = true;
			submit_form($('test').form,'accounting','exec_post','refresh_form','action=doit_check_reg');
		}";
		
		$this->fetch_account_record(DEFAULT_AP_ACCT);
		$AP = $this->current_account['account_name'];
		unset($this->current_account,$this->account_hash);
		
		$tbl .= ($this->active_search && $this->detail_search ? "
		<h3 style=\"color:#00477f;margin:0;\">Search Results</h3>
		<div style=\"padding-top:8px;padding-left:25px;font-weight:bold;\">[<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','cf_loadcontent','check_reg');\">Show All</a>]</div>" : NULL)."
		".$this->form->form_tag().$this->form->hidden(array('test' => 1))."
		<table cellpadding=\"0\" cellspacing=\"3\" border=\"0\" width=\"100%\">
			<tr>
				<td style=\"padding-left:10px;padding-top:0\">
					 <table class=\"tborder\" cellspacing=\"0\" cellpadding=\"6\" style=\"width:90%;\" >
						<tr>
							<td style=\"font-weight:bold;vertical-align:bottom;\" colspan=\"6\">
								<div style=\"float:right;font-weight:normal;padding-right:10px;text-align:right;\">".($this->check_total ? "
									".paginate_jscript($num_pages,$p,'sf_loadcontent','cf_loadcontent','accounting','check_reg',$order,$order_dir,"'active_search=".$this->active_search."'") : NULL)."
								</div>".($this->check_total ? "
								Showing ".($start_from + 1)." - ".($start_from + MAIN_PAGNATION_NUM > $this->check_total ? $this->check_total : $start_from + MAIN_PAGNATION_NUM)." of ".$this->check_total." Check Entries." : NULL)."
								<div style=\"padding-left:5px;padding-top:8px;font-weight:normal;\">".($this->p->ck(get_class($this),'A','check_reg') ? "
									<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','show_popup_window','edit_check_reg','popup_id=line_item','p=$p','order=$order','order_dir=$order_dir');\"><img src=\"images/new.gif\" alt=\"New Entry\" border=\"0\" /></a>
									&nbsp;" : NULL)."
									<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','show_popup_window','search_check_reg','popup_id=line_item');\"><img src=\"images/search.gif\" alt=\"Search check register\" border=\"0\" /></a>
									&nbsp;
								</div>
							</td>
						</tr>
						<tr class=\"thead\" style=\"font-weight:bold;\">
							<td style=\"vertical-align:bottom;width:150px;\">
								<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','cf_loadcontent','check_reg','p=$p','order=check_no','order_dir=".($order == "check_no" && $order_dir == 'ASC' ? 'DESC' : 'ASC')."'".($this->active_search ? ",'active_search=".$this->active_search."'" : NULL).");\" style=\"color:#ffffff;text-decoration:underline;\">
									Check No.</a>
								".($order == 'check_no' ? 
									"&nbsp;<img src=\"images/".($order_dir == 'ASC' ? "s_asc.png" : "s_desc.png")."\">" : NULL)."
							</td>
							<td style=\"vertical-align:bottom;width:105px\">
								<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','cf_loadcontent','check_reg','p=$p','order=check_date','order_dir=".($order == "check_date" && $order_dir == 'ASC' ? 'DESC' : 'ASC')."'".($this->active_search ? ",'active_search=".$this->active_search."'" : NULL).");\" style=\"color:#ffffff;text-decoration:underline;\">
									Date</a>
								".($order == 'check_date' ? 
									"&nbsp;<img src=\"images/".($order_dir == 'ASC' ? "s_asc.png" : "s_desc.png")."\">" : NULL)."
							</td>
							<td style=\"vertical-align:bottom;\">
								<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','cf_loadcontent','check_reg','p=$p','order=payee','order_dir=".($order == "payee" && $order_dir == 'ASC' ? 'DESC' : 'ASC')."'".($this->active_search ? ",'active_search=".$this->active_search."'" : NULL).");\" style=\"color:#ffffff;text-decoration:underline;\">
									Payee</a>
								".($order == 'payee' ? 
									"&nbsp;<img src=\"images/".($order_dir == 'ASC' ? "s_asc.png" : "s_desc.png")."\">" : NULL)."
							</td>
							<td style=\"vertical-align:bottom;\">Memo</td>
							<td style=\"vertical-align:bottom;padding-right:10px;width:175px\" class=\"num_field\">Amount</td>
							<td style=\"vertical-align:bottom;padding-right:10px;width:50px\" class=\"num_field\">Cleared</td>
						</tr>";
						for ($i = 0; $i < ($end - $start_from); $i++) {	
							$b++;
							$tbl .= "
							<tr ".($this->check_register[$i]['void'] ? "style=\"color:#8f8f8f;font-style:italic;\" title=\"This check has been voided\"" : NULL).">
								<td style=\"vertical-align:bottom;\" style=\"text-align:left;padding-left:10px;\" rowspan=\"2\">
									<table cellpadding=\"0\" cellspacing=\"0\">
										<tr>
											<td colspan=\"2\" style=\"font-weight:bold;\">".$this->check_register[$i]['check_no']."</td>
										</tr>
										<tr>
											<td style=\"padding-top:7px;\" nowrap>
												<div id=\"print_cntrl_".$this->check_register[$i]['check_no']."\" style=\"padding-right:5px;display:".($this->check_register[$i]['void'] == 0 && $this->check_register[$i]['cleared'] == 0 ? "block" : "none")."\">".($this->p->ck(get_class($this),'L','check_reg') ? "
													<a href=\"javascript:void(0);\" onClick=\"agent.call('payables','sf_loadcontent','show_popup_window','empty_queue','popup_id=line_item','preview=2','reprint=".$this->check_register[$i]['check_no']."','from=check_reg');\"><img src=\"images/print_sm.gif\" alt=\"Reprint this check\" border=\"0\" /></a>" : NULL).($this->p->ck(get_class($this),'D','check_reg') ? "
													<a href=\"javascript:void(0);\" onClick=\"if(confirm('Are you sure you want to void this check? This action CANNOT be undone!')){submit_form($('test').form,'accounting','exec_post','refresh_form','action=doit_void','check_no=".$this->check_register[$i]['check_no']."','account_hash=".$this->check_register[$i]['account_hash']."','p=$p','order=$order','order_dir=$order_dir');}\"><img src=\"images/void_check.gif\" alt=\"Void this check\" border=\"0\" /></a>" : NULL)."
												</div>
											</td>
											<td style=\"padding-top:7px;padding-left:5px;\">".($this->check_register[$i]['account_name'] ? 
												($this->check_register[$i]['account_no'] ? 
													$this->check_register[$i]['account_no']." - " : NULL).(strlen($this->check_register[$i]['account_name']) > 35 ? 
														substr($this->check_register[$i]['account_name'],0,33)."..." : $this->check_register[$i]['account_name']) : "&nbsp;")."
											</td>
										</tr>
									</table>
								</td>
								<td style=\"vertical-align:bottom;\" style=\"text-align:left;\" >".date(DATE_FORMAT,strtotime($this->check_register[$i]['check_date']))."</td>
								<td style=\"vertical-align:bottom;\" style=\"text-align:left;\">".($this->check_register[$i]['total_invoices_paid'] ? "
									<a href=\"javascript:void(0);\" class=\"link_standard\" ".($this->check_register[$i]['void'] ? "style=\"color:#8f8f8f;\"" : NULL)." onClick=\"if(\$('invoice_list_".$this->check_register[$i]['check_no']."').getStyle('display')=='block'){toggle_display('invoice_list_".$this->check_register[$i]['check_no']."','none');\$('invoice_list_no_".$this->check_register[$i]['check_no']."').innerHTML='';\$('invoice_list_date_".$this->check_register[$i]['check_no']."').innerHTML='';\$('invoice_list_amt_".$this->check_register[$i]['check_no']."').innerHTML='';} else{agent.call('accounting','sf_loadcontent','cf_loadcontent','show_invoices_paid','check_no=".$this->check_register[$i]['check_no']."');}\" title=\"View invoices paid by this check\">" : NULL).
										($this->check_register[$i]['customer_name'] ? $this->check_register[$i]['customer_name'] : $this->check_register[$i]['vendor_name']).($this->check_register[$i]['total_invoices_paid'] > 0 ? 
									"</a>" : NULL)."
								</td>
								<td style=\"vertical-align:bottom;\" style=\"text-align:left;\" rowspan=\"2\">".$this->check_register[$i]['memo']."</td>
								<td style=\"vertical-align:bottom;padding-right:10px;vertical-align:bottom;\" class=\"num_field\" rowspan=\"2\">$".number_format($this->check_register[$i]['amount'],2)."</td>
								<td style=\"vertical-align:bottom;padding-right:10px;vertical-align:bottom;\" class=\"num_field\" rowspan=\"2\" id=\"cleared_".$this->check_register[$i]['check_no']."\">".($this->check_register[$i]['void'] == 0 ?
									($this->check_register[$i]['cleared'] ? 
										($this->p->ck(get_class($this),'E','check_reg') ? 
											"<a href=\"javascript:void(0);\" onClick=\"submit_form($('test').form,'accounting','exec_post','refresh_form','action=doit_check_reg','unclear=".$this->check_register[$i]['check_no']."');\">" : NULL)."<img src=\"images/check.gif\" alt=\"Remove cleared flag from this check\" border=\"0\" />".($this->p->ck(get_class($this),'E','check_reg') ? 
												"</a>" : NULL) : ($this->p->ck(get_class($this),'E','check_reg') ? 
													$this->form->checkbox("name=cleared[".$this->check_register[$i]['check_no']."]","value=1","onClick=auto_save();") : "&nbsp;")) : NULL)."
								</td>
							</tr>
							<tr ".($this->check_register[$i]['void'] ? "style=\"color:#8f8f8f;font-style:italic;\" title=\"This check has been voided\"" : NULL).">
								<td colspan=\"2\">".($this->check_register[$i]['expense_account_name'] ? 
									($this->check_register[$i]['expense_account_no'] ? 
										$this->check_register[$i]['expense_account_no']." - " : NULL).(strlen($this->check_register[$i]['expense_account_name']) > 40 ? 
											substr($this->check_register[$i]['expense_account_name'],0,37)."..." : $this->check_register[$i]['expense_account_name']) : "<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','refresh_form','doit_search_journal','audit_id=".$this->check_register[$i]['audit_id']."')\" class=\"link_standard\" ".($this->check_register[$i]['void'] ? "style=\"color:#8f8f8f;\"" : NULL)." title=\"View journal details\">SPLIT</a>")."
								</td>
							</tr>".($this->check_register[$i]['total_invoices_paid'] ? "
							<tr id=\"invoice_list_".$this->check_register[$i]['check_no']."\" style=\"display:none;\">
								<td></td>
								<td></td>
								<td id=\"invoice_list_no_".$this->check_register[$i]['check_no']."\" style=\"padding-left:10px;\"></td>
								<td id=\"invoice_list_date_".$this->check_register[$i]['check_no']."\" ></td>
								<td id=\"invoice_list_amt_".$this->check_register[$i]['check_no']."\" style=\"padding-right:10px;\" class=\"num_field\"></td>
							</tr>" : NULL).($b < ($end - $start_from) ? "
							<tr>
								<td style=\"background-color:#cccccc;\" colspan=\"6\"></td>
							</tr>" : NULL);
						}
						
						if (!$this->check_total)
							$tbl .= "
							<tr >
								<td colspan=\"6\">Check register is empty.</td>
							</tr>";
						
			$tbl .= "
					</table>
				</td>
			</tr>
		</table>".$this->form->close_form();
		
		$this->content['html']['place_holder'] = $tbl;
	
	}

	function bank_reconcile() {
		$account_hash = "001bdd9879308bf1646cdba2bd1a3806";
		$this->fetch_bank_reconcile($account_hash);
		$this->content['popup_controls']['popup_id'] = ($this->ajax_vars['popup_id'] ? $this->ajax_vars['popup_id'] : $_POST['popup_id']);
		$this->popup_id = $this->content['popup_controls']['popup_id'];
		$this->content['popup_controls']['popup_title'] = "Reconcile Bank Accounts";
		
		$tbl .= $this->form->form_tag().
		$this->form->hidden(array("popup_id" => $this->popup_id, "p" => $p, "order" => $order, "order_dir" => $order_dir))."
		<div class=\"panel\" id=\"main_table".$this->popup_id."\" style=\"margin-top:0;\">
			<div id=\"feedback_holder".$this->popup_id."\" style=\"background-color:#ffffff;border:1px solid #cccccc;font-weight:bold;padding:5px;display:none;margin-bottom:5px;\">
				<h3 class=\"error_msg\" style=\"margin-top:0;\">Error!</h3>
					<p id=\"feedback_message".$this->popup_id."\">".($error ? 
						$err_feedback : NULL)."</p>
			</div>				
			<table cellspacing=\"1\" cellpadding=\"5\" style=\"background-color:#8c8c8c;width:700px;margin-top:0;\" class=\"smallfont\">
				<tr>
					<td style=\"background-color:#ffffff;padding:10px 0 10px 25px;width:50%;\">
						<div style=\"padding-bottom:5px;font-weight:bold;\" id=\"err1".$this->popup_id."\">Entry Type:</div>
						".$this->form->select("trans_type",array_slice($this->trans_type['type'],2),NULL,array_slice($this->trans_type['code'],2),"onChange=if(this.options[this.selectedIndex].value=='CD'){toggle_display('journal_check_input".$this->popup_id."','block');toggle_display('journal_memo_input".$this->popup_id."','none');}else if(this.options[this.selectedIndex].value=='ME'){toggle_display('journal_check_input".$this->popup_id."','none');toggle_display('journal_memo_input".$this->popup_id."','block');}else{toggle_display('journal_check_input".$this->popup_id."','none');toggle_display('journal_memo_input".$this->popup_id."','none');}")."
						<div style=\"margin-top:10px;display:none;\" id=\"journal_check_input".$this->popup_id."\">
							<table>
								<tr>
									<td style=\"text-align:right;\" id=\"err_check_acct\">Checking Acct:</td>
									<td>".($checking_acct_hash ? 
										$this->form->select("journal_checking_acct",$checking_acct_name,'',$checking_acct_hash,"blank=1") : "<img src=\"images/alert.gif\" />&nbsp;You do not have a checking account!")."
									</td>
								</tr>
								<tr>
									<td style=\"text-align:right;\" id=\"err_check_no\">Check No:</td>
									<td>".$this->form->text_box("name=journal_check_no","value=","size=10")."</td>
								</tr>
								<tr>
									<td style=\"text-align:right;\" id=\"err_check_payee\">Check Payee:</td>
									<td>".
										$this->form->text_box("name=journal_check_payee",
																"value=",
																"autocomplete=off",
																"size=30",
																"onFocus=position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'));key_call('accounting','journal_check_payee','journal_check_payee_hash',1);",
																"onBlur=vtobj.reset_keyResults();key_clear();",
																"onKeyDown=if(event.keyCode!=9){clear_values('journal_check_payee_hash');}").
										$this->form->hidden(array("journal_check_payee_hash" => ''))."
									</td>
								</tr>
								<tr>
									<td style=\"text-align:right;vertical-align:top;\">Remit To:</td>
									<td>".$this->form->text_area("name=journal_check_remit_to","rows=3","cols=25")."</td>
								</tr>
							</table>
						</div>
						<div style=\"margin-top:10px;display:none;\" id=\"journal_memo_input".$this->popup_id."\">
							<div style=\"margin-bottom:5px;\" id=\"err_proposal_no\">Proposal No:</div>
							".$this->form->text_box("name=journal_proposal_no",
													"value=",
													"autocomplete=off",
													"onBlur=vtobj.reset_keyResults();key_clear();",
													"onFocus=position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('payables','journal_proposal_no','journal_proposal_hash',1);",
													"onKeyDown=if(event.keyCode!=9){clear_values('journal_proposal_hash');}").
							$this->form->hidden(array("journal_proposal_hash" => ''))."
						</div>
					</td>
					<td style=\"background-color:#ffffff;padding:10px 0 10px 25px;width:50%;vertical-align:top;\" >
						<div style=\"padding-bottom:5px;font-weight:bold;\" id=\"err2".$this->popup_id."\">Entry Date:</div>
						<span id=\"entry_date_holder".$this->popup_id."\"></span>";
						$jscript[] = "setTimeout('DateInput(\'entry_date\',\'true\',\'YYYY-MM-DD\',\'".($this->current_entry['date'] && $this->current_entry['date'] != '0000-00-00' ? $this->current_entry['date'] : date("Y-m-d"))."\',1,\'entry_date_holder".$this->popup_id."\')',45)";
						$tbl .= "
					</td>
				</tr>				
			</table>
			<div style=\"padding:10px;text-align:right;padding-right:45px;\">
				".$this->form->button("value=Save Entry","id=journal_btn","onClick=submit_form(this.form,'accounting','exec_post','refresh_form','btn=saveentry');this.disabled=1")."
			</div>	
		</div>".
		$this->form->close_form();
		
		if ($local)
			return $inner_tbl;

		$this->content["jscript"] = $jscript;
		$this->content['popup_controls']["cmdTable"] = $tbl;
		return;
	
	}
	
	function search_accounts() {
		global $stateNames,$states;
	
		$date = date("U") - 3600;
		$result = $this->db->query("DELETE FROM `".DB_PREFIX."search`
							  		WHERE `timestamp` <= '$date'");
							  
		$this->content['popup_controls']['popup_id'] = $this->ajax_vars['popup_id'];
		$this->content['popup_controls']['popup_title'] = "Search Proposals";
		$this->content['focus'] = 'proposal_no';
		
		$users = new system_config($this->current_hash);
		$users->fetch_users();
		$user_name[] = "All Sales Reps";
		$user_hash[] = "";
		for ($i = 0; $i < count($users->user_info); $i++) {
			$user_name[] = $users->user_info[$i]['full_name'];
			$user_hash[] = $users->user_info[$i]['user_hash'];
		}
		unset($users);
		$this->content['focus'] = "proposal_no";
		
		list($search_name,$search_hash) = $this->fetch_searches();
		
		$tbl .= $this->form->form_tag().
		$this->form->hidden(array('popup_id' 		=> $this->content['popup_controls']['popup_id'],
								  'detail_search' 	=> 1
								  ))."

		<div class=\"panel\" id=\"main_table\">
			<div id=\"feedback_holder\" style=\"background-color:#ffffff;border:1px solid #cccccc;font-weight:bold;padding:5px;display:none;margin-bottom:5px;\">
				<h3 class=\"error_msg\" style=\"margin-top:0;\">Error!</h3>
				<p id=\"feedback_message\"></p>
			</div>
			<div style=\"padding:15px 0 0 15px;font-weight:bold;\"></div>
			<table cellspacing=\"1\" cellpadding=\"5\" style=\"background-color:#8c8c8c;width:700px;margin-top:0;\" class=\"smallfont\">
				<tr>
					<td class=\"smallfont\" style=\"padding:20px 45px;background-color:#ffffff;\">
						<div style=\"font-weight:bold;padding-bottom:10px;\">
							Filter your proposal search criteria below:
						</div>
						<table>
							<tr>
								<td style=\"padding-left:15px;\">
									<fieldset>
										<legend>Proposal Number</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->text_box("name=proposal_no","size=15","maxlength=12")."</div>
									</fieldset>
								</td>
								<td style=\"padding-left:15px;\">
									<fieldset>
										<legend>Customer PO Number</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->text_box("name=po_no","size=35","maxlength=255")."</div>
									</fieldset>
								</td>
								<td style=\"vertical-align:top;padding:5px;\" rowspan=\"6\">									
									<div style=\"margin-left:15px;\">".($search_name ? "
										<div style=\"margin-bottom:10px;\">
											Saved Searches:
											<div style=\"padding-top:5px\">
												".$this->form->select("saved_searches",$search_name,'',$search_hash,"style=width:100px","onChange=if(this.options[this.selectedIndex].value != ''){toggle_display('search_go_btn','block');}else{toggle_display('search_go_btn','none');}")."
												<div id=\"search_go_btn\" style=\"display:block;padding-top:5px;text-align:right;\">
													".$this->form->button("value=Go","onClick=agent.call('proposals','sf_loadcontent','cf_loadcontent','showall','active_search='+\$F('saved_searches'));window.setTimeout('popup_windows[\'".$this->content['popup_controls']['popup_id']."\'].hide()',1000);")."&nbsp;".$this->form->button("value=Remove","onClick=")."
												</div>
											</div>
										</div>" : NULL)."
										".$this->form->checkbox("name=save","value=1","onClick=if(this.checked){toggle_display('save_search_box','block')}else{toggle_display('save_search_box','none')}")."&nbsp;Save Search?
										<div style=\"padding-top:5px;display:none;\" id=\"save_search_box\">
											Search Name:
											<br />
											".$this->form->text_box("name=search_name","value=","size=15","maxlenth=64")."
										</div>
									</div>
								</td>
							</tr>
							<tr>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Sales Rep</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->select("sales_rep_match[]",$user_name,'',$user_hash,"multiple=multiple","size=6","cols=5","blank=1")."</div>
									</fieldset>
								</td>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Search By Customer</legend>
										<div style=\"padding:5px;padding-bottom:5px\">
											".$this->form->text_box("name=customer",
																	"value=",
																	"autocomplete=off",
																	"size=37",
																	"onFocus=position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'));key_call('reports','customer','customer_hash',1);",
																	"onBlur=vtobj.reset_keyResults();key_clear();"
																	)."
											
									
											<div style=\"margin-top:15px;width:250px;height:45px;overflow:auto;display:block;background-color:#efefef;border:1px outset #cccccc;\" id=\"customer_filter_holder\"></div>
										</div>
									</fieldset>
								</td>
							</tr>
							<tr>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Active/Archived</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->select("active_archived",array("Active","Archived"),'',array(1,2))."</div>
									</fieldset>
								</td>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Purchase Order Number</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->text_box("name=dc_po_no","size=35","maxlength=255")."</div>
									</fieldset>
								</td>
							</tr>
							<tr>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Proposal Status</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->select("proposal_status",array("Proposed","Booked","Invoiced","Punchlist"),'',array(1,2,3,4))."</div>
									</fieldset>
								</td>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Acknowledgment Number</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->text_box("name=ack_no","size=35","maxlength=255")."</div>
									</fieldset>
								</td>
							</tr>
							<tr>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Direct Bill</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->select("direct_bill",array("Direct Bill","Normal Business"),'',array('D','N'))."</div>
									</fieldset>
								</td>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Line Item Number</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->text_box("name=item_no","size=35","maxlength=255")."</div>
									</fieldset>
								</td>
							</tr>
							<tr>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Invoice Number</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->text_box("name=invoice_no","size=15","maxlength=64")."</div>
									</fieldset>
								</td>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Proposal Description</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->text_box("name=descr","size=35","maxlength=64")."</div>
									</fieldset>
								</td>
							</tr>
						</table>
					</td>
				</tr>
			</table>
			<div style=\"text-align:right;padding:15px;\">
				".$this->form->button("value=Search","id=primary","onClick=submit_form($('popup_id').form,'proposals','exec_post','refresh_form','action=doit_search');")."
			</div>
		</div>".
		$this->form->close_form();
		
		$this->content['popup_controls']["cmdTable"] = $tbl;
	}

	function showall() {
		$this->unlock("_");
		$this->load_class_navigation();		
		$p = $this->ajax_vars['p'];
		$order = $this->ajax_vars['order'];
		$order_dir = $this->ajax_vars['order_dir'];
		
		$num_pages = ceil($this->total / MAIN_PAGNATION_NUM);
		$p = (!isset($p) || $p <= 1 || $p > $num_pages) ? 1 : $p;
		$start_from = MAIN_PAGNATION_NUM * ($p - 1);
		
		$end = $start_from + MAIN_PAGNATION_NUM;
		if ($end > $this->total)
			$end = $this->total;
		
		$order_by_ops = array("timestamp"			=>	"t1.timestamp",
							  "account_name"		=>	"t1.account_name",
							  "account_no"			=>	"t1.account_no",
							  "account_type"		=>	"t1.account_type");

		$tbl = $this->fetch_accounts($start_from,$end,($order ? $order_by_ops[$order] : "t1.account_no"),$order_dir);
		list($type,$code) = $this->fetch_account_types();
		
		$tbl .= "
		<table cellpadding=\"0\" cellspacing=\"3\" border=\"0\" width=\"100%\">
			<tr>
				<td style=\"padding-left:10px;padding-top:0\">
					 <table class=\"tborder\" cellspacing=\"0\" cellpadding=\"6\" style=\"width:90%;\">
						<tr>
							<td style=\"font-weight:bold;vertical-align:bottom;\" colspan=\"4\">
								<div style=\"float:right;font-weight:normal;padding-right:10px;text-align:right;\">".($this->total ? "
									".paginate_jscript($num_pages,$p,'sf_loadcontent','cf_loadcontent','accounting','showall',$order,$order_dir,"'active_search=".$this->active_search."','popup_id=".$this->popup_id."','show=".(is_array($show) ? implode("|",$show) : $show)."'") : NULL)."
								</div>".($this->total ? "
								Showing ".($start_from + 1)." - ".($start_from + MAIN_PAGNATION_NUM > $this->total ? $this->total : $start_from + MAIN_PAGNATION_NUM)." of ".$this->total." Accounts." : NULL)."
								<div style=\"padding-left:5px;padding-top:8px;font-weight:normal;\">".($this->p->ck(get_class($this),'A','accounts') ? "
									<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','show_popup_window','edit_account','popup_id=line_item','p=$p','order=$order','order_dir=$order_dir');\"><img src=\"images/new.gif\" alt=\"Create a new account\" border=\"0\" /></a>
									&nbsp;" : NULL)."
									<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','show_popup_window','search_accounts','popup_id=line_item');\"><img src=\"images/search.gif\" alt=\"Search for an account\" border=\"0\" /></a>
									&nbsp;
								</div>
							</td>
						</tr>
						<tr class=\"thead\" style=\"font-weight:bold;\">
							<td style=\"width:125px;vertical-align:bottom;\">
								<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','cf_loadcontent','showall','p=$p','order=account_no','order_dir=".($order == "account_no" && $order_dir == 'ASC' ? 'DESC' : 'ASC')."','show=".(is_array($show) ? implode("|",$show) : $show)."');\" style=\"color:#ffffff;text-decoration:underline;\">
									Account No.</a>
								".($order == 'account_no' ? 
									"&nbsp;<img src=\"images/".($order_dir == 'ASC' ? "s_asc.png" : "s_desc.png")."\">" : NULL)."
							</td>
							<td style=\"vertical-align:bottom;\">
								<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','cf_loadcontent','showall','p=$p','order=account_name','order_dir=".($order == "account_name" && $order_dir == 'ASC' ? 'DESC' : 'ASC')."','show=".(is_array($show) ? implode("|",$show) : $show)."');\" style=\"color:#ffffff;text-decoration:underline;\">
									Account Name</a>
								".($order == 'account_name' ? 
									"&nbsp;<img src=\"images/".($order_dir == 'ASC' ? "s_asc.png" : "s_desc.png")."\">" : NULL)."
							</td>
							<td style=\"width:250px;vertical-align:bottom;\">
								<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','cf_loadcontent','showall','p=$p','order=account_type','order_dir=".($order == "account_type" && $order_dir == 'ASC' ? 'DESC' : 'ASC')."','show=".(is_array($show) ? implode("|",$show) : $show)."');\" style=\"color:#ffffff;text-decoration:underline;\">
									Account Type</a>
								".($order == 'account_type' ? 
									"&nbsp;<img src=\"images/".($order_dir == 'ASC' ? "s_asc.png" : "s_desc.png")."\">" : NULL)."
							</td>
							<td style=\"vertical-align:bottom;padding-right:10px;\" class=\"num_field\">Balance</td>
						</tr>";
						reset($this->account_info);
						for ($i = 0; $i < ($end - $start_from); $i++) {	
							$account_info = current($this->account_info);
							$b++;
							
							$tbl .= "
							<tr ".($this->p->ck(get_class($this),'V','accounts') ? "onMouseOver=\"this.className='item_row_over'\" onMouseOut=\"this.className=''\" onClick=\"agent.call('accounting','sf_loadcontent','show_popup_window','edit_account','account_hash=".key($this->account_info)."','popup_id=line_item','p=$p','order=$order','order_dir=$order_dir');\"" : NULL).">
								<td style=\"vertical-align:bottom;\" style=\"text-align:left;padding-left:10px;\" >".$account_info['account_info']['account_no']."</td>
								<td style=\"vertical-align:bottom;\" style=\"text-align:left;\" >".$account_info['account_info']['account_name']."</td>
								<td style=\"vertical-align:bottom;\" style=\"text-align:left;\" >".$account_info['account_info']['type_name']."</td>
								<td style=\"vertical-align:bottom;padding-right:10px;\" class=\"num_field\" >".($account_info['account_info']['balance'] != 0 ? 
									($account_info['account_info']['balance'] < 0 ? "
										<span style=\"color:#ff0000;\">($".number_format($account_info['account_info']['balance']*-1,2).")</span>" : "$".number_format($account_info['account_info']['balance'],2)) : NULL)."
								</td>
							</tr>";
							if ($account_info['children']) {
								for ($j = 0; $j < count($account_info['children']); $j++) 
									$tbl .= "
									<tr ".($this->p->ck(get_class($this),'V','accounts') ? "onMouseOver=\"this.className='item_row_over'\" onMouseOut=\"this.className=''\" onClick=\"agent.call('accounting','sf_loadcontent','show_popup_window','edit_account','account_hash=".$account_info['children'][$j]['child_account_hash']."','popup_id=line_item');\"" : NULL)." >
										<td style=\"vertical-align:bottom;\" style=\"text-align:left;padding-left:20px;\" >
											<img src=\"images/tree_down1.gif\" />
											&nbsp;
											".$account_info['children'][$j]['child_account_no']."
										</td>
										<td style=\"vertical-align:bottom;\" style=\"text-align:left;padding-left:30px;\" >".$account_info['children'][$j]['child_account_name']."</td>
										<td style=\"vertical-align:bottom;\" style=\"text-align:left;\" ></td>
										<td style=\"vertical-align:bottom;padding-right:10px;\" class=\"num_field\" >".($account_info['children'][$j]['child_account_balance'] != 0 ? 
											($account_info['children'][$j]['child_account_balance'] < 0 ? "
												($".number_format($account_info['children'][$j]['child_account_balance']*-1,2).")" : "$".number_format($account_info['children'][$j]['child_account_balance'],2)) : NULL)."
										</td>
									</tr>";								
							}
							$tbl .= ($b < ($end - $start_from) ? "
							<tr>
								<td style=\"background-color:#cccccc;\" colspan=\"4\"></td>
							</tr>" : NULL);
							
							next($this->account_info);
						}
						
						if (!$this->total)
							$tbl .= "
							<tr >
								<td colspan=\"4\">You have no accounts defined.</td>
							</tr>";
						
			$tbl .= "
					</table>
				</td>
			</tr>
		</table>";
		
		$this->content['html']['place_holder'] = $tbl;
	}
	
	function period_ck($date) {
		$result = $this->db->query("SELECT COUNT(*) AS Total
									FROM `".DB_PREFIX."period_dates`
									WHERE `fiscal_year` = '".CURRENT_FISCAL_YEAR."' AND '$date' BETWEEN `period_start` AND `period_end` AND `closed` = 1");
		return $this->db->result($result);
	}
	
	function reverse_trans($account_hash,$debit=0,$credit=0) {
		if ($debit == 0 && $credit == 0)
			return 0;
			
		$this->fetch_account_record($account_hash);
		$account_type = $this->current_account['account_action'];

		switch($account_type) {
			case 'DR':
			if ($debit > 0)
				return $debit * -1;
			elseif ($credit > 0)
				return $credit;
			break;
			
			case 'CR':
			if ($credit > 0)
				return $credit * -1;
			elseif ($debit > 0)
				return $debit;
			break;
		}

	}
	
	function exec_trans($audit_id,$date,$account_hash,$amount,$type,$value_array=NULL,$memo=NULL) {
		if ($amount == 0 || !$amount)
			return;
		if (!$date)
			$date = date("Y-m-d");
		
		$this->fetch_account_record($account_hash);
		$account_type = $this->current_account['account_action'];
		$balance = $this->current_account['balance'] + $amount;
		//Debit or credit account
		switch($account_type) {
			case 'DR':
			if ($amount > 0) 
				$debit = $amount;
			else 
				$credit = $amount * -1;
			break;
			
			case 'CR':
			if ($amount > 0) 
				$credit = $amount;
			else 
				$debit = $amount * -1;
			break;
		}

		$journal_hash = md5(global_classes::get_rand_id(32,"global_classes"));
		while (global_classes::key_exists(DB_PREFIX.'journal','journal_hash',$journal_hash))
			$journal_hash = md5(global_classes::get_rand_id(32,"global_classes"));
			
		$cols = array('timestamp'		=>	time(),
					  'date'			=>	$date,
					  'id_hash'			=>	$this->current_hash,
					  'journal_hash'	=>	$journal_hash,
					  'proposal_hash'	=>	NULL,
					  'ar_invoice_hash'	=>	NULL,
					  'ap_invoice_hash'	=>	NULL,
					  'customer_hash'	=>	NULL,
					  'vendor_hash'		=>	NULL,
					  'check_no'		=>	NULL,
					  'ar_payment_hash'	=>	NULL,
					  'ap_payment_hash'	=>	NULL,
					  'audit_id'		=>	$audit_id,
					  'item_hash'		=>	NULL,
					  'account_hash'	=>	$account_hash,
					  'trans_type'		=>	$type,
					  'memo'		    =>	addslashes($memo));
		
		if (is_array($value_array)) {
			while (list($col,$val) = each($cols)) {
				if ($val === NULL && $value_array[$col])
					$cols[$col] = $value_array[$col];
				elseif (!$val)
					unset($cols[$col]);
			}
		} elseif (!is_array($value_array) && $value_array)
			$cols['memo'] = $value_array;
			
		
		if ($debit != 0)
			$cols['debit'] = $debit;
		elseif ($credit != 0)
			$cols['credit'] = $credit;
			
		$keys = array_keys($cols);
		$vals = array_values($cols);
			
		array_walk($keys,'add_quotes',"`");
		array_walk($vals,'add_quotes',"'");
		
		$this->db->query("INSERT INTO `".DB_PREFIX."journal`
						  (".implode(" , ",array_values($keys)).")
						  VALUES (".implode(" , ",array_values($vals)).")");
			
		$this->db->query("UPDATE `".DB_PREFIX."accounts`
						  SET `timestamp` = ".time()." , `last_change` = '".$this->current_hash."' , `balance` = '$balance'
						  WHERE `account_hash` = '$account_hash'");  
						
		if ($this->current_account['account_side'] == 'P')
			$this->update_profit($audit_id,$date,$debit,$credit,$cols);
			
		return true;
	}
	
	function update_profit($audit_id,$date,$debit=0,$credit=0,$value_array=NULL) {
		$this->fetch_account_record(DEFAULT_PROFIT_ACCT);
		
		$value_array['debit'] = $value_array['credit'] = 0;
		
		if ($debit > 0) {
			$balance = $this->current_account['balance'] - $debit;
			$value_array['debit'] = $debit;
		} elseif ($credit > 0) {
			$balance = $this->current_account['balance'] + $credit;
			$value_array['credit'] = $credit;
		}

		$journal_hash = md5(global_classes::get_rand_id(32,"global_classes"));
		while (global_classes::key_exists(DB_PREFIX.'journal','journal_hash',$journal_hash))
			$journal_hash = md5(global_classes::get_rand_id(32,"global_classes"));		

		$value_array['auto'] = 1;
		$value_array['date'] = $date;
		$value_array['journal_hash'] = $journal_hash;
		$value_array['audit_id'] = $audit_id;
		$value_array['account_hash'] = DEFAULT_PROFIT_ACCT;
		
		$keys = array_keys($value_array);
		$vals = array_values($value_array);
			
		array_walk($keys,'add_quotes',"`");
		array_walk($vals,'add_quotes',"'");							

		$this->db->query("INSERT INTO `".DB_PREFIX."journal`
						  (".implode(" , ",array_values($keys)).")
						  VALUES (".implode(" , ",array_values($vals)).")");

		$this->db->query("UPDATE `".DB_PREFIX."accounts`
						  SET `timestamp` = ".time()." , `last_change` = '".$this->current_hash."' , `balance` = '$balance'
						  WHERE `account_hash` = '".DEFAULT_PROFIT_ACCT."'");
	}
	
	function audit_log($audit_id,$record_hash=NULL,$id_hash=NULL,$title=NULL) {
		return;
		$this->db->query("INSERT INTO `".DB_PREFIX."audit_log`
						  (`timestamp` , `audit_id` , `id_hash` , `record_hash` , `title`)
						  VALUES (".time()." , '$audit_id' , '".($id_hash ? $id_hash : $this->current_hash)."' , '$record_hash' , '$title')");
		
		
		return true;
	}
	
	function fetch_journal_entries($audit_id,$item_hash=NULL) {
		$result = $this->db->query("SELECT ".DB_PREFIX."journal.*
									FROM `".DB_PREFIX."journal`
									WHERE `auto` = 0 AND `audit_id` = '$audit_id' ".($item_hash ? 
										"AND `item_hash` = '$item_hash'" : "AND ISNULL(`item_hash`)"));
		while ($row = $this->db->fetch_assoc($result))
			$entry[] = $row;

		return $entry;
	}
	
	function doit_add_line() {
		$line_int = $_POST['line_int'];
		$this->content['html']["line_holder".$this->popup_id] = $this->new_journal_entry($line_int);
		$this->content['action'] = 'continue';
		return;
	}
	
	function doit_import_csv() {
		$import_from = $_POST['import_from'];
		$proposal_hash = $_POST['proposal_hash'];
		$file_name = $_POST['file_name'];
		$file_type = $_POST['file_type'];
		$file_size = $_POST['file_size'];
		$file_error = $_POST['file_error'];
		$opening = $_POST['opening'];
		$journal_popup_id = $_POST['journal_popup_id'];
		
		$file_str = strtolower(strrev(substr(strrev($file_name),0,3)));
		if ($file_name && !$file_error && $file_str == 'csv') {
			$csv_file = $file_name;

			if ($csv_file) {
				$row = 0;
				$fh = fopen($csv_file,"r");
				while (($data = fgetcsv($fh, 1000, ",")) !== FALSE) {
					$d++;
					$num = count($data);
					if ($opening && $num < 6) {
						$this->content['error'] = 1;
						$this->content['form_return']['feedback'] = "The CSV file is not valid! In order to import opening balances it must contain 7 columns each cooresponding to the following layout:<br />'Account No - Opening - Current - Debit - Credit - Closing - Memo'. Please refer to the instructions in the CSV upload window.";
						break;
					}
					elseif (!$opening && $num < 1) {
						$this->content['form_return']['feedback'] = "$num The CSV file is not valid! It must contain 4 columns each cooresponding to the following layout:<br />'Account No - Debit - Credit - Memo'. Please refer to the instructions in the CSV upload window.";
						$this->content['error'] = 1;
						break;
					}

					if ($data[0]) {
						for ($c = 0; $c < 4; $c++) {
							unset($account_info['memo']);						
							switch ($c) {
								//account number
								case 0:
								unset($alt_account_no);
								$account_no = trim($data[0]);								
								unset($alt_account_no);
								if (strspn($account_no,"0123456789.") != strlen($account_no)) 
									$alt_account_no[] = DB_PREFIX."accounts.account_no = '".trim(strrev(strrchr(strrev($account_no)," ")))."'";								
								if (ereg(".00",$account_no))
									$alt_account_no[] = DB_PREFIX."accounts.account_no = '".trim(substr(strrev(strrchr(strrev($account_no),".00")),0,strpos($account_no,'.')))."'";
									
								$result = $this->db->query("SELECT `account_hash` , `account_name` , `account_no`
															FROM `".DB_PREFIX."accounts`
															WHERE `account_no` = '".addslashes($account_no)."'");
								if ($db_row = $this->db->fetch_assoc($result)) {
									$account_info['account_no'] = array("account_name"	=>	$db_row['account_name'],
																		"account_hash"	=>	$db_row['account_hash'],
																		"account_no"	=>	$db_row['account_no']);
								} else {
									if ($alt_account_no) {
										array_unshift($alt_account_no,DB_PREFIX."accounts.account_no = '".addslashes($account_no)."'");
										$result = $this->db->query("SELECT `account_hash` , `account_name` , `account_no`
																	FROM `".DB_PREFIX."accounts`
																	WHERE ".implode(" OR ",$alt_account_no));
										
										if ($db_row = $this->db->fetch_assoc($result)) {
											$account_info['account_no'] = array("account_name"	=>	$db_row['account_name'],
																				"account_hash"	=>	$db_row['account_hash'],
																				"account_no"	=>	$db_row['account_no']);
										} else
											$account_info['account_no'] = array("error"			=>	$account_no); 
	
									} else
										$account_info['account_no'] = array("error"			=>	$account_no); 
								}								
								break;
								
								//debit
								case 1:
								if ($opening) {
									if (ereg_replace("[^-.0-9]", "",$data[5]) > 0)
										$account_info['dr'] = ereg_replace("[^-.0-9]", "",$data[5]);
								} else {
									if ($data[1] * 1 > 0)
										$account_info['dr'] = ereg_replace("[^-.0-9]", "",$data[1]);
									else
										$account_info['dr'] = 0;
								}
								break;
								
								case 2:
								if ($opening) {
									if (ereg_replace("[^-.0-9]", "",$data[5]) < 0)									
										$account_info['cr'] = (ereg_replace("[^-.0-9]", "",$data[5]) * -1);									
								} else {
									if ($data[2] * 1 > 0)
										$account_info['cr'] = ereg_replace("[^-.0-9]", "",$data[2]);
									else
										$account_info['cr'] = 0;
								}
								break;
								
								case 3:
								if ($opening) {
									if ($data[6]) 
										$account_info['memo'] = $data[3];
								} else {
									if ($data[$c])
										$account_info['memo'] = $data[3];
								}
								break;
							} 						
							$csv[$row] = $account_info;
						}
					}
					$row++;
				}
				
				if ($this->content['error']) {
					$this->content['jscript'] = "remove_element('progress_holder','progress_div');remove_element('iframe');create_element('iframe','iframe','src=upload.php?proposal_hash=123&class=accounting&action=doit_import_csv&current_hash=".$this->current_hash."&popup_id=".$this->popup_id."','frameBorder=0','height=30px');toggle_display('iframe','block');";
					return;
				}
				$tbl = "
				<table class=\"tborder\" cellspacing=\"0\" cellpadding=\"5\" style=\"width:97%;\" >
					<tr style=\"font-weight:bold;background-color:#efefef;font-size:8pt\">
						<td style=\"border-bottom:1px solid #cccccc;\">Account</td>
						<td style=\"border-bottom:1px solid #cccccc;\">Debit</td>
						<td style=\"border-bottom:1px solid #cccccc;\">Credit</td>
						<td style=\"border-bottom:1px solid #cccccc;\">Memo</td>
					</tr>";


				$csv = array_values($csv);

				for ($i = 0; $i < count($csv); $i++) {
					if ($csv[$i]['account_no'] && ($csv[$i]['dr'] > 0 || $csv[$i]['cr'] > 0)) {
						$tbl .= "
						<tr >
							<td style=\"vertical-align:bottom;\" nowrap>
								".$this->form->text_box("name=account_name[".$i."]",
														"id=err".$i,
														"value=".($csv[$i]['account_no']['error'] ? $csv[$i]['account_no']['error'] : $csv[$i]['account_no']['account_no']." - ".$csv[$i]['account_no']['account_name']),
														"autocomplete=off",
														"size=25",
														($csv[$i]['account_no']['error'] ? "style=color:#ff0000;" : NULL),
														"onFocus=if(this.value){select();}position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('payables','account_name[".$i."]','account_hash[".$i."]',1);",
														"onKeyDown=if(event.keyCode!=9){clear_values('account_hash[".$i."]');}",
														"onBlur=vtobj.reset_keyResults();key_clear();").
								$this->form->hidden(array("account_hash[".$i."]" => ($csv[$i]['account_no']['account_hash'] ? $csv[$i]['account_no']['account_hash'] : '')))."
								<a href=\"javascript:void(0);\" onMouseOver=\"position_element($('keyResults'),findPos($('account_name[".$i."]'),'top')+20,findPos($('account_name[".$i."]'),'left')+1,'account_suggest');\" onClick=\"agent.call('payables','exec_post','cf_loadcontent','action=key_search','parent_name=account_name[".$i."]','parent_id=account_hash[".$i."]','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>
							</td>
							<td>".$this->form->text_box("name=debit[".$i."]",
														"id=dr_amount_holder_".$i,
														"value=".($csv[$i]['dr'] > 0 ? number_format($csv[$i]['dr'],2) : NULL),
														"size=10",
														"style=text-align:right","onFocus=if(this.value){select();}else{}",
														"onBlur=if(this.value && this.value > 0){this.value=formatCurrency(this.value);clear_values('credit[".$i."]')}else if(this.value < 0){alert('Negative values are not allowed.');selectItem('credit[".$i."]='+(this.value * -1));this.value='';}")."
							</td>
							<td>".$this->form->text_box("name=credit[".$i."]",
														"id=cr_amount_holder_".$i,
														"value=".($csv[$i]['cr'] > 0 ? number_format($csv[$i]['cr'],2) : NULL),
														"size=10",
														"style=text-align:right",
														"onFocus=if(this.value){select();}else{}",
														"onBlur=if(this.value){this.value=formatCurrency(this.value);clear_values('debit[".$i."]')}")."
							</td>
							<td>".$this->form->text_box("name=memo[".$i."]","value=".($csv[$i]['memo'] ? $csv[$i]['memo'] : NULL),"size=35","maxlength=64")."</td>
						</tr>";
								
						$csv_dr += $csv[$i]['dr'];
						$csv_cr += $csv[$i]['cr'];
					}
				}
				$tbl .= "
				</table>";
			}

			$this->content['action'] = 'close';
			$this->content['html']['line_holder'.$journal_popup_id] = $tbl;
			return;
		} else {
			$this->content['jscript'] = "remove_element('progress_holder','progress_div');remove_element('iframe');create_element('iframe','iframe','src=upload.php?proposal_hash=123&class=accounting&action=doit_import_csv&current_hash=".$this->current_hash."&popup_id=".$this->popup_id."','frameBorder=0','height=30px');toggle_display('iframe','block');";
			$this->content['form_return']['feedback'] = ($file_type != "application/octet-stream" ? "The file you are importing is not a valid CSV file. Please make sure when creating a CSV file, you follow the instructions provided." : "There was a problem with the file you imported. Please check to make sure the file is valid and not damaged and try again.");
			$this->content['error'] = 1;
			return;
		}
	}
	
	function upload_journal_entry() {
		if ($this->ajax_vars['popup_id'])
			$this->popup_id = $this->ajax_vars['popup_id'];
		
		$this->popup_id = $this->content['popup_controls']['popup_id'] = $this->ajax_vars['popup_id'];
		$this->content['popup_controls']['popup_title'] = "Create a Journal Entry From a CSV Upload";

		$tbl = $this->form->form_tag('upload_journal').
		$this->form->hidden(array('aaa' => 123, "proposal_hash" => '', "popup_id" => $this->popup_id, "journal_popup_id" => $this->ajax_vars['journal_popup_id']))."
		<div class=\"panel\" id=\"main_table".$this->popup_id."\" style=\"margin-top:0\">
			<div id=\"feedback_holder".$this->popup_id."\" style=\"background-color:#ffffff;border:1px solid #cccccc;font-weight:bold;padding:5px;display:none;margin-bottom:5px;\">
				<h3 class=\"error_msg\" style=\"margin-top:0;\">Error!</h3>
					<p id=\"feedback_message".$this->popup_id."\"></p>
			</div>
			<table cellspacing=\"1\" cellpadding=\"5\" style=\"background-color:#8c8c8c;\" class=\"popup_tab_table\">
				<tr>
					<td style=\"background-color:#ffffff;padding:15px 20px;\">
						By creating a journal entry from a CSV file, you can quickly and easily create large journal entries in a single step. 
						<br /><br />
						To get started, create 
						an excel spreadsheet with 4 columns. The first row of the columns should contain the actual journal information, not a column header. The first 
						column should coorespond to the account number. Make sure you enter only the account number, not the name. The second column should contain your 
						debit entries. Only enter numbers, however commas will be accepted if they are found. Please don't enter any dollar signs. The third column is the 
						same as the second, but should contain your credit entries. Finally, the last column should contain any memo to be created with that line. This column 
						is optional.
						<br /><br />
						When you are finished, from the File menu, choose 'Save As', then under the file type, choose CSV (comma seperated values).
						<div style=\"padding-top:5px;font-weight:bold;\" id=\"err2".$this->popup_id."\">CSV File: </div>
						<div id=\"iframe\"><iframe src=\"upload.php?proposal_hash=123&class=accounting&action=doit_import_csv&current_hash=".$this->current_hash."&popup_id=".$this->popup_id."&form_name=upload_journal\" frameborder=\"0\" style=\"height:30px;\"></iframe></div>
						<div id=\"progress_holder\"></div>".
						$this->form->hidden(array("file_name" 		=>		$this->xmlPar->xmlFile['name'],
												  "file_type" 		=>		$this->xmlPar->xmlFile['type'],
												  "file_size" 		=>		$this->xmlPar->xmlFile['size'],
												  "file_error" 		=>		$this->xmlPar->xmlFile['error']
												  )
											)."
					</td>
				</tr>
			</table>
		</div>".$this->form->close_form();
		
		$this->content['popup_controls']["cmdTable"] = $tbl;
	}
	
	function vendor_remit_to() {
		if ($vendor_hash = $this->ajax_vars['vendor_hash']) {
			$vendors = new vendors($this->current_hash);
			$vendors->fetch_master_record($vendor_hash);
			
			if ($vendors->current_vendor['remit_street1'])
				$remit_to = 
				($vendors->current_vendor['remit_name'] ? 
					$vendors->current_vendor['remit_name']."\n" : NULL).
				$vendors->current_vendor['remit_street1']."\n".($vendors->current_vendor['remit_street2'] ? 
					$vendors->current_vendor['remit_street2']." " : NULL).($vendors->current_vendor['remit_street3'] ? 
						$vendors->current_vendor['remit_street3']."\n" : NULL).($vendors->current_vendor['remit_city'] ? $vendors->current_vendor['remit_city'].", " : NULL).$vendors->current_vendor['remit_state']." ".$vendors->current_vendor['remit_zip'];
			else
				$remit_to = 
				$vendors->current_vendor['vendor_name']."\n".$vendors->current_vendor['street1']."\r\n".($vendors->current_vendor['street2'] ? 
					$vendors->current_vendor['street2']."\n" : NULL).($vendors->current_vendor['street3'] ?	
						$vendors->current_vendor['street3']."\n" : NULL).($vendors->current_vendor['city'] ? $vendors->current_vendor['city'].", " : NULL).$vendors->current_vendor['state']." ".$vendors->current_vendor['zip'];
		}
		$this->content['value']['journal_check_remit_to'] = $remit_to;
		return;
	}
	
	function fetch_checking_accounts() {
		$result = $this->db->query("SELECT `account_no` , `account_name` , `account_hash`
									FROM `".DB_PREFIX."accounts`
									WHERE `account_type` = 'CA' AND `checking` = 1
									ORDER BY `account_no` , `account_name` ASC");
		while ($row = $this->db->fetch_assoc($result)) {
			$checking_acct_hash[] = $row['account_hash'];
			$checking_acct_name[] = ($row['account_no'] ? $row['account_no']." : " : NULL).stripslashes($row['account_name']);
		}	
		
		return array($checking_acct_hash,$checking_acct_name);
	}
	
	function new_journal_entry($local=NULL) {
		$p = $this->ajax_vars['p'];
		$order = $this->ajax_vars['order'];
		$order_dir = $this->ajax_vars['order_dir'];
		if ($this->ajax_vars['popup_id'])
			$this->popup_id = $this->ajax_vars['popup_id'];
		
		$this->content['popup_controls']['popup_id'] = ($this->ajax_vars['popup_id'] ? $this->ajax_vars['popup_id'] : $_POST['popup_id']);
		$this->popup_id = $this->content['popup_controls']['popup_id'];
		$this->content['popup_controls']['popup_title'] = "Make a Journal Entry";
		
		//Get the checking accounts for journal type - check
		list($checking_acct_hash,$checking_acct_name) = $this->fetch_checking_accounts();
		
		$tbl .= $this->form->form_tag().
		$this->form->hidden(array("popup_id" => $this->popup_id, 
								  "p" => $p, 
								  "order" => $order, 
								  "order_dir" => $order_dir,
								  "proposal_hash"	=>	$this->ajax_vars['proposal_hash']))."
		<div class=\"panel\" id=\"main_table".$this->popup_id."\" style=\"margin-top:0;\">
			<div id=\"feedback_holder".$this->popup_id."\" style=\"background-color:#ffffff;border:1px solid #cccccc;font-weight:bold;padding:5px;display:none;margin-bottom:5px;\">
				<h3 class=\"error_msg\" style=\"margin-top:0;\">Error!</h3>
					<p id=\"feedback_message".$this->popup_id."\">".($error ? 
						$err_feedback : NULL)."</p>
			</div>				
			<table cellspacing=\"1\" cellpadding=\"5\" style=\"background-color:#8c8c8c;width:700px;margin-top:0;\" class=\"smallfont\">
				<tr>
					<td style=\"background-color:#ffffff;padding:10px 0 10px 25px;width:50%;\">
						<div style=\"padding-bottom:5px;font-weight:bold;\" id=\"err1".$this->popup_id."\">Entry Type:</div>
						".$this->form->select("trans_type",array_slice($this->trans_type['type'],2),NULL,array_slice($this->trans_type['code'],2),"onChange=if(this.options[this.selectedIndex].value=='CD'){toggle_display('journal_check_input".$this->popup_id."','block');toggle_display('journal_memo_input".$this->popup_id."','none');}else if(this.options[this.selectedIndex].value=='ME'){toggle_display('journal_check_input".$this->popup_id."','none');toggle_display('journal_memo_input".$this->popup_id."','block');}else{toggle_display('journal_check_input".$this->popup_id."','none');toggle_display('journal_memo_input".$this->popup_id."','none');}")."
						<div style=\"margin-top:10px;display:none;\" id=\"journal_check_input".$this->popup_id."\">
							<table>
								<tr>
									<td style=\"text-align:right;\" id=\"err_check_acct\">Checking Acct:</td>
									<td>".($checking_acct_hash ? 
										$this->form->select("journal_checking_acct",$checking_acct_name,'',$checking_acct_hash,"blank=1") : "<img src=\"images/alert.gif\" />&nbsp;You do not have a checking account!")."
									</td>
								</tr>
								<tr>
									<td style=\"text-align:right;\" id=\"err_check_no\">Check No:</td>
									<td>".$this->form->text_box("name=journal_check_no","value=","size=10")."</td>
								</tr>
								<tr>
									<td style=\"text-align:right;\" id=\"err_check_payee\">Check Payee:</td>
									<td>".
										$this->form->text_box("name=journal_check_payee",
																"value=",
																"autocomplete=off",
																"size=30",
																"onFocus=position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'));key_call('accounting','journal_check_payee','journal_check_payee_hash',1);",
																"onBlur=vtobj.reset_keyResults();key_clear();",
																"onKeyDown=if(event.keyCode!=9){clear_values('journal_check_payee_hash');}").
										$this->form->hidden(array("journal_check_payee_hash" => ''))."
									</td>
								</tr>
								<tr>
									<td style=\"text-align:right;vertical-align:top;\">Remit To:</td>
									<td>".$this->form->text_area("name=journal_check_remit_to","rows=3","cols=25")."</td>
								</tr>
							</table>
						</div>
						<div style=\"margin-top:10px;display:none;\" id=\"journal_memo_input".$this->popup_id."\">
							<div style=\"margin-bottom:5px;\" id=\"err_proposal_no\">Proposal No:</div>
							".$this->form->text_box("name=journal_proposal_no",
													"value=",
													"autocomplete=off",
													"onBlur=vtobj.reset_keyResults();key_clear();",
													"onFocus=position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('payables','journal_proposal_no','journal_proposal_hash',1);",
													"onKeyDown=if(event.keyCode!=9){clear_values('journal_proposal_hash');}").
							$this->form->hidden(array("journal_proposal_hash" => ''))."
						</div>
					</td>
					<td style=\"background-color:#ffffff;padding:10px 0 10px 25px;width:50%;vertical-align:top;\" >
						<div style=\"padding-bottom:5px;font-weight:bold;\" id=\"err2".$this->popup_id."\">Entry Date:</div>
						<span id=\"entry_date_holder".$this->popup_id."\"></span>";
						$jscript[] = "setTimeout('DateInput(\'entry_date\',\'true\',\'YYYY-MM-DD\',\'".($this->current_entry['date'] && $this->current_entry['date'] != '0000-00-00' ? $this->current_entry['date'] : date("Y-m-d"))."\',1,\'entry_date_holder".$this->popup_id."\')',45)";
						$tbl .= "
					</td>
				</tr>
				<tr>
					<td style=\"background-color:#ffffff;padding:10px;\" colspan=\"2\" >
						<div style=\"padding-bottom:5px\">
							To create a journal entry from a CSV file <a href=\"javascript:void(0);\" class=\"link_standard\" onClick=\"agent.call('accounting','sf_loadcontent','show_popup_window','upload_journal_entry','popup_id=upload_journal_win','journal_popup_id=".$this->popup_id."');\">click here</a>.
						</div>
						<div id=\"line_holder".$this->popup_id."\">";
						$inner_tbl = "
							<table class=\"tborder\" cellspacing=\"0\" cellpadding=\"5\" style=\"width:97%;\" >
								<tr style=\"font-weight:bold;background-color:#efefef;font-size:8pt\">
									<td style=\"border-bottom:1px solid #cccccc;\">Account</td>
									<td style=\"border-bottom:1px solid #cccccc;\">Debit</td>
									<td style=\"border-bottom:1px solid #cccccc;\">Credit</td>
									<td style=\"border-bottom:1px solid #cccccc;\">Memo</td>
								</tr>";
							$line_int = ($local ? $local : 5);
							$tabindex = 10;
							for ($i = 0; $i < $line_int; $i++) {
							
								$inner_tbl .= "
								<tr >
									<td style=\"vertical-align:bottom;\" nowrap>
										".$this->form->text_box("name=account_name[".$i."]",
																"id=err".$i,
																"value=".($_POST['account_name'][$i] ? $_POST['account_name'][$i] : NULL),
																"autocomplete=off",
																"size=25",
																"tabindex=".($tabindex++),
																"onFocus=if(this.value){select();}position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('accounting','account_name[".$i."]','account_hash[".$i."]',1);",
																"onKeyDown=if(event.keyCode!=9){clear_values('account_hash[".$i."]');}",
																"onBlur=vtobj.reset_keyResults();key_clear();").
										$this->form->hidden(array("account_hash[".$i."]" => ($_POST['account_hash'][$i] ? $_POST['account_hash'][$i] : '')))."
										<a href=\"javascript:void(0);\" tabindex=\"".($tabindex++)."\" onMouseOver=\"position_element($('keyResults'),findPos($('account_name[".$i."]'),'top')+20,findPos($('account_name[".$i."]'),'left')+1,'account_suggest');\" onClick=\"agent.call('accounting','exec_post','cf_loadcontent','action=key_search','parent_name=account_name[".$i."]','parent_id=account_hash[".$i."]','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>
									</td>
									<td>".$this->form->text_box("name=debit[".$i."]",
																"id=dr_amount_holder_".$i,
																"value=".($_POST['debit'][$i] ? $_POST['debit'][$i] : NULL),
																"size=10",
																"tabindex=".($tabindex++),
																"style=text-align:right","onFocus=if(this.value){select();}else{}",
																"onBlur=if(this.value && this.value > 0){this.value=formatCurrency(this.value);clear_values('credit[".$i."]')}else if(this.value < 0){alert('Negative values are not allowed.');selectItem('credit[".$i."]='+(this.value * -1));this.value='';}")."
									</td>
									<td>".$this->form->text_box("name=credit[".$i."]",
																"id=cr_amount_holder_".$i,
																"value=".($_POST['credit'][$i] ? $_POST['credit'][$i] : NULL),
																"size=10",
																"tabindex=".($tabindex++),
																"style=text-align:right",
																"onFocus=if(this.value){select();}else{}",
																"onBlur=if(this.value){this.value=formatCurrency(this.value);clear_values('debit[".$i."]')}")."
									</td>
									<td>".$this->form->text_box("name=memo[".$i."]","tabindex=".($tabindex++),"value=".($_POST['memo'][$i] ? $_POST['memo'][$i] : NULL),"size=35","maxlength=64")."</td>
								</tr>";
							}
							$inner_tbl .= "							
							</table>
							<div style=\"float:right;padding:10px 25px 0 0;\">
								<a href=\"javascript:void(0);\" onClick=\"submit_form($('popup_id').form,'accounting','exec_post','refresh_form','action=doit_add_line','line_int=".(++$i)."');\"><img src=\"images/plus.gif\" alt=\"Add a line\" border=\"0\" /></a>
							</div>";
						$tbl .= (!$local ? $inner_tbl : NULL)."
						</div>
					</td>
				</tr>
			</table>
			<div style=\"padding:10px;text-align:right;padding-right:45px;\">
				".$this->form->button("value=Save Entry","id=journal_btn","onClick=submit_form(this.form,'accounting','exec_post','refresh_form','btn=saveentry');this.disabled=1")."
			</div>	
		</div>".
		$this->form->close_form();
		
		if ($local)
			return $inner_tbl;

		$this->content["jscript"] = $jscript;
		$this->content['popup_controls']["cmdTable"] = $tbl;
		return;
	}
	function getLastDayOfMonth($month, $year) {
		return idate('d', mktime(0, 0, 0, ($month + 1), 0, $year));
	}

	
	function config($local=NULL,$fiscal_start=NULL,$period_start=NULL) {
		$this->unlock("_");
		$this->load_class_navigation();		
		$p = ($_POST['p'] ? $_POST['p'] : $this->ajax_vars['p']);
		$order = ($_POST['order'] ? $_POST['order'] : $this->ajax_vars['order']);
		$order_dir = ($_POST['order_dir'] ? $_POST['order_dir'] : $this->ajax_vars['order_dir']);
		$fiscal_period_config = ($_POST['fiscal_period_config'] ? $_POST['fiscal_period_config'] : (defined('FISCAL_PERIOD_CONFIG') ? FISCAL_PERIOD_CONFIG : ""));
		
		if (defined('FISCAL_YEAR_START'))
			list($fiscal_month,$fiscal_day) = explode("/",FISCAL_YEAR_START);
			
		$date = strtotime("2007-01-01");
		for ($i = 1; $i <= 12; $i++) {
			$month_name[] = date("F",strtotime("2007-".$i."-01"));
			$month_int[] = $i;
		}
		for ($i = 1; $i <= 31; $i++) 
			$days[] = $i;
			
		$period_types = array("Standard, last day of each month","13 week period using 4-4-5","13 week period using 5-4-4","13 week period using 4-5-4","Let me define my own");
		$period_id = array(1,2,3,4,5);
		
		for ($i = 0; $i < 5; $i++) {
			if ($i > 0) {
				$result = $this->db->query("SELECT COUNT(*) AS Total
											FROM `".DB_PREFIX."period_dates`
											WHERE `fiscal_year` = '".date("Y",strtotime(date("Y")." +".($i - 1)." years"))."'");
				if (!$this->db->result($result))
					break;
			}
			$years[] = date("Y",strtotime(date("Y")." +".$i." years"));
		}
		$years = array_merge(array($years[0] - 1),$years);
		
		if ($local)
			$jscript[] = "\$('fiscal_month').disabled=0;\$('fiscal_day').disabled=0;\$('fiscal_year').disabled=0;\$('period_type').disabled=0;";
		
		$tbl = $this->form->form_tag().$this->form->hidden(array('p' => $p, 
																 'order' => $order, 
																 'order_dir' => $order_dir))."
		<div id=\"feedback_holder\" style=\"background-color:#ffffff;border:1px solid #cccccc;font-weight:bold;padding:5px;display:none;margin-bottom:5px;\">
			<h3 class=\"error_msg\" style=\"margin-top:0;\">Error!</h3>
				<p id=\"feedback_message\"></p>
		</div>
		<table cellspacing=\"1\" cellpadding=\"5\" class=\"main_tab_table\">
			<tr>
				<td style=\"padding:0;\">
					 <div style=\"background-color:#ffffff;height:100%;\">
					 	<div style=\"margin:15px 35px;\">
							<h3 style=\"margin-bottom:5px;color:#00477f;\">Configure Your Business Cycle &amp; Settings</h3>
							<div style=\"float:right;\">".($this->p->ck(get_class($this),'E','config') ? 
								$this->form->button("name=null","value=Save Settings","onClick=submit_form(this.form,'accounting','exec_post','refresh_form','action=doit_config','final=1');") : NULL)."
							</div>
							<small style=\"margin-left:20px;\"><a href=\"javascript:void(0);\" class=\"link_standard\" onClick=\"agent.call('accounting','sf_loadcontent','cf_loadcontent','show_journal','p=$p','order=$order','order_dir=$order_dir')\"><-- Back</a></small>
							<div style=\"margin:20px;width:800px;padding:0;\">
								<fieldset>
									<legend>Fiscal Year Period Configuration</legend>
									<table class=\"tborder\" cellspacing=\"0\" cellpadding=\"8\" style=\"width:100%;border:0\">
										<tr>
											<td style=\"padding:10px 25px;\">
												What fiscal year are you setting up?
												<div style=\"margin-left:25px;padding-top:5px;\">".
													$this->form->select("year_config",$years,$_POST['year_config'],$years,"onChange=submit_form(this.form,'accounting','exec_post','refresh_form','action=doit_config','toggle_layout=1','change_year='+this.options[this.selectedIndex].value);")."
												</div>
											</td>
										</tr>
										<tr>
											<td style=\"padding:10px 25px;\">
												<span id=\"err_date\">When is the first day of the fiscal year for the year you are configuring?</span>
												<div style=\"margin-left:25px;padding-top:5px;\">".
													$this->form->select("fiscal_month",$month_name,$fiscal_month,$month_int,"blank=1","disabled","onChange=submit_form(this.form,'accounting','exec_post','refresh_form','action=doit_config','toggle_layout=1')").
													"&nbsp;".
													$this->form->select("fiscal_day",$days,$fiscal_day,$days,"blank=1","disabled","onChange=submit_form(this.form,'accounting','exec_post','refresh_form','action=doit_config','toggle_layout=1')")."
													&nbsp;".
													$this->form->select("fiscal_year",$years,($_POST['fiscal_year'] ? $_POST['fiscal_year'] : ($_POST['year_config'] ? $_POST['year_config'] : date("Y"))),$years,"blank=1","disabled","onChange=submit_form(this.form,'accounting','exec_post','refresh_form','action=doit_config','toggle_layout=1')")."
												</div>
											</td>
										</tr>
										<tr>
											<td style=\"padding:10px 25px;\">
												What type of periods do you operate?
												<div style=\"margin-left:25px;padding-top:5px;\">".
													$this->form->select("period_type",$period_types,($local ? $local : ($_POST['year_config'] ? $fiscal_period_config : NULL)),$period_id,"disabled","onChange=if(!\$F('year_config')){alert('Please select the fiscal year you are configuring before changing this field.');this.value=''}else{submit_form(this.form,'accounting','exec_post','refresh_form','action=doit_config','toggle_layout=1');}")."
												</div>
											</td>
										</tr>
										<tr>
											<td style=\"padding:10px 25px;\" id=\"period_layout_holder\">";
											if ($local) {
												$year = $_POST['year_config'];
												$year_start = ($_POST['fiscal_year'] && $_POST['fiscal_year'] != $_POST['year_config'] ? $_POST['fiscal_year'] : $year);
												
												list($month,$day) = explode("/",$fiscal_start);
												if ($local == 1 || $local == 5)
													$month--;
												elseif ($local >= 2 && $local < 5) {
													$date = $fiscal_start."/".$year_start;
													$w_i = 0;
												}
												$inner_tbl = "
												<span id=\"err_layout\">Layout your period closing dates:</span> [<small><a href=\"javascript:void(0);\" onClick=\"submit_form($('test').form,'accounting','exec_post','refresh_form','action=doit_config','period_start=');\"\" class=\"link_standard\">reset</a></small>]
												<table >";
												if ($local < 5) {
													for ($i = 1; $i <= 12; $i++) {
														$result = $this->db->query("SELECT `period_end` , `closed`
																					FROM `".DB_PREFIX."period_dates`
																					WHERE `fiscal_year` = '$year' AND `period` = '".$i."'");
														$closed = $this->db->result($result,0,'closed');
														$period_end = $this->db->result($result,0,'period_end');
														switch ($local) {
															case 1:
															$inner_tbl .= "
															<td>										
																<div style=\"margin-left:25px;padding-top:10px;\">
																	<span id=\"err".$i."\">Period $i ".($closed ? "is closed as of: " : "will close on:")."</span>
																	<div style=\"padding-top:5px;margin-left:10px;\" id=\"period_".$i."_holder\">".($closed ? 
																		date(DATE_FORMAT,strtotime($period_end)) : NULL)."
																	</div>
																</div>
															</td>".($i % 3 == 0 ? "</tr>".($i < 12 ? "<tr>" : NULL) : NULL);
															if (!$closed)
																$jscript[] = "setTimeout('DateInput(\'period".$i."\', \'true\', \'YYYY-MM-DD\',\'".($period_end ? $period_end : $year_start."-".($i + $month)."-".$this->getLastDayOfMonth(($i + $month),$year_start))."\',1,\'period_".$i."_holder\')',".($i * 20).");";						
															break;
		
															case 2:
															case 3:
															case 4:
															if ($local == 2)
																$weeks = array(4,4,5);
															elseif ($local == 3)
																$weeks = array(5,4,4);
															elseif ($local == 4)
																$weeks = array(4,5,4);
																
															$inner_tbl .= "
															<td>										
																<div style=\"margin-left:25px;padding-top:10px;\">
																	<span id=\"err".$i."\">Period $i ".($closed ? "is closed as of: " : "will close on:")."</span>
																	<div style=\"padding-top:5px;margin-left:10px;\" id=\"period_".$i."_holder\">".($closed ? 
																		date(DATE_FORMAT,strtotime($period_end)) : NULL)."
																	</div>
																</div>
															</td>".($i % 3 == 0 ? "</tr>".($i < 12 ? "<tr>" : NULL) : NULL);
															$date = date("Y-m-d",strtotime($date." +".$weeks[$w_i]." weeks"));
															if (!$closed)
																$jscript[] = "setTimeout('DateInput(\'period".$i."\', \'true\', \'YYYY-MM-DD\',\'".$date."\',1,\'period_".$i."_holder\')',".($i * 20).");";						
															$w_i = ($i % 3 == 0 ? 0 : $w_i + 1);
															break;
														}
													}
													$total_periods = 12;
												} elseif ($local == 5) {
													$result = $this->db->query("SELECT *
																				FROM `".DB_PREFIX."period_dates`
																				WHERE `fiscal_year` = '$year'");
													while ($row = $this->db->fetch_assoc($result))
														$period_data[$row['period']] = $row;		
													
													if (count($period_data) > 1)
														$period_start = count($period_data);
														
													if (!$period_start) {
														$start = 1;
														$period_start = 1;
													}
													for ($i = 1; $i <= $period_start; $i++) {
														if ($period_data[$i])
															$_POST['period'.$i] = $period_data[$i]['period_end'];
															
														if ($start)
															$use_date = $year."-".($i + $month)."-".$this->getLastDayOfMonth(($i + $month),$year);
														if ($_POST['period'.$i]) 
															$use_date = $_POST['period'.$i];
														elseif ($_POST['period'.($i - 1)]) {
															$use_date = date("Y",strtotime($_POST['period'.($i - 1)]." +15 days"))."-".date("m",strtotime($_POST['period'.($i - 1)]." +15 days"))."-".$this->getLastDayOfMonth(date("m",strtotime($_POST['period'.($i - 1)]." +15 days")),date("Y",strtotime($_POST['period'.($i - 1)]." +15 days")));
															if (strtotime($use_date) > strtotime($fiscal_start."/".($year + 1)))
																$use_date = date("Y-m-d",strtotime($fiscal_start."/".($year + 1))-86400);
														}
														$inner_tbl .= ($start ? "
														<tr>" : NULL)."
															<td style=\"vertical-align:top;\">										
																<div style=\"margin-left:25px;padding-top:10px;\">
																	Period $i ".($period_data[$i]['closed'] == 1 ? "is closed as of: " : "will close on: [<small><a href=\"javascript:void(0);\" onClick=\"submit_form($('test').form,'accounting','exec_post','refresh_form','action=doit_config','period_start=".($i-1)."');\"\" class=\"link_standard\">x</a></small>]")."
																	<div style=\"padding-top:5px;margin-left:10px;\" id=\"period_".$i."_holder\">".($period_data[$i]['closed'] ? 
																		date(DATE_FORMAT,strtotime($period_data[$i]['period_end'])) : NULL)."
																	</div>
																</div>
															</td>".($i % 3 == 0 ? "</tr>".($i < 12 ? "<tr>" : NULL) : NULL);
														if (!$period_data[$i]['closed'])
															$jscript[] = "setTimeout('DateInput(\'period".$i."\', \'true\', \'YYYY-MM-DD\',\'".($period_data[$row['period']]['period_end'] ? $period_data[$row['period']]['period_end'] : $use_date)."\',1,\'period_".$i."_holder\')',".($i * 20).");";						
														
														if ($i == $period_start && strtotime($use_date) + 86400 < strtotime($fiscal_start."/".($year + 1)))
															$next_cntrl = "
															<a href=\"javascript:void(0);\" onClick=\"submit_form($('test').form,'accounting','exec_post','refresh_form','action=doit_config','period_start=".($i + 1)."');\"><img src=\"images/plus.gif\" border=\"0\" alt=\"Next Period\" /></a>";
														elseif (strtotime($use_date) + 86400 >= strtotime($fiscal_start."/".($year + 1)))
															$next_cntrl = 
															$this->form->hidden(array("period_config_complete" => 1));
													}
													$total_periods = $i;
													if ($next_cntrl)
														$inner_tbl .= "
														<tr>
															<td colspan=\"3\">
																".$next_cntrl."
															</td>
														</tr>";
												}
												$inner_tbl .= $this->form->hidden(array('total_periods' => $total_periods))."
												</table>";
											} 
									
									$tbl .= "											
											</td>
										</tr>
									</table>
								</fieldset>
								<fieldset style=\"margin-top:10px;\">
									<legend>WIP Auto Reconciliation</legend>
									<table class=\"tborder\" cellspacing=\"0\" cellpadding=\"8\" style=\"width:100%;border:0\">
										<tr>
											<td style=\"padding:10px 25px;\">
												Occasionally, work-in-progress (WIP) money may be left in the WIP account due to small billing discrepencies. 
												By entering an amount and account below we can reconcile outstanding balances up to the amount you enter, and 
												clear those balances into the clearing account you select below. If you leave this area blank this automatic function will not be available to you.
												<br /><br />
												What is the minimum amount you would like have automatically reconciled? The average amount is around $250.
												<div style=\"margin-left:25px;padding-top:5px;padding-bottom:10px;\">".
													$this->form->text_box("name=wip_min_amt",
																		  "id=err_wip_amt",
																		  "value=".($_POST['wip_min_amt'] ? $_POST['wip_min_amt'] : (defined('AUTO_WIP_MIN_AMT') ? number_format(AUTO_WIP_MIN_AMT,2) : NULL)),
																		  "size=8",
																		  (!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																		  "style=text-align:right",
																		  "onBlur=if(this.value){this.value=formatCurrency(this.value);}",
																		  "onFocus=select();")."
												</div>
												Which account would you like to reconcile these amounts into? 
												<div style=\"margin-left:25px;padding-top:5px;\">";
												if ($_POST['wip_clearing_acct'] || defined('AUTO_WIP_CLEARING_ACCT'))
													$this->fetch_account_record(($_POST['wip_clearing_acct_hash'] ? $_POST['wip_clearing_acct_hash'] : (defined('AUTO_WIP_CLEARING_ACCT') ? AUTO_WIP_CLEARING_ACCT : NULL)));
													
													$tbl .= 
													$this->form->text_box("name=wip_clearing_acct",
																			"id=err_wip_acct",
																			"value=".($this->account_hash ? ($this->current_account['account_no'] ? $this->current_account['account_no']." - " : NULL).$this->current_account['account_name'] : NULL),
																			"autocomplete=off",
																			"size=25",
																			(!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onFocus=if(this.value){select();}position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('payables','wip_clearing_acct','wip_clearing_acct_hash',1);" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onKeyDown=if(event.keyCode!=9){clear_values('wip_clearing_acct_hash');}" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onBlur=vtobj.reset_keyResults();key_clear();" : NULL)).
													$this->form->hidden(array("wip_clearing_acct_hash" => ($_POST['wip_clearing_acct_hash'] ? $_POST['wip_clearing_acct_hash'] : ($this->account_hash ? $this->account_hash : NULL)))).($this->p->ck(get_class($this),'E','config') ? "
													<a href=\"javascript:void(0);\" onMouseOver=\"position_element($('keyResults'),findPos($('wip_clearing_acct'),'top')+20,findPos($('wip_clearing_acct'),'left')+1,'account_suggest');\" onClick=\"agent.call('payables','exec_post','cf_loadcontent','action=key_search','parent_name=wip_clearing_acct','parent_id=wip_clearing_acct_hash','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>" : NULL)."
												</div>
											</td>
										</tr>
									</table>
								</fieldset>
								<fieldset style=\"margin-top:10px;\">
									<legend>Account Aging</legend>
									<table class=\"tborder\" cellspacing=\"0\" cellpadding=\"8\" style=\"width:100%;border:0\">
										<tr>
											<td style=\"padding:10px 25px;\" colspan=\"3\">
												Balance sheet accounts can be aged at any interval you choose. Aging is calculated in real time, therefore changing 
												your aging schedule midway through the year will not cause errors in your accounting.
												
											</td>
										</tr>
										<tr>
											<td style=\"padding:10px 25px;width:33%\">
												Account aging schedule 1:
												<div style=\"margin-left:25px;padding-top:5px;padding-bottom:10px;\">".
													$this->form->text_box("name=ACCOUNT_AGING_SCHED1",
																		  "id=err_ACCOUNT_AGING_SCHED1",
																		  "value=".($_POST['ACCOUNT_AGING_SCHED1'] ? $_POST['ACCOUNT_AGING_SCHED1'] : (defined('ACCOUNT_AGING_SCHED1') ? ACCOUNT_AGING_SCHED1 : 30)),
																		  "size=8",
																		  (!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																		  "style=text-align:right",
																		  "onFocus=select();")."
												</div>
											</td>
											<td style=\"padding:10px 25px;width:33%\">
												Account aging schedule 2:
												<div style=\"margin-left:25px;padding-top:5px;padding-bottom:10px;\">".
													$this->form->text_box("name=ACCOUNT_AGING_SCHED2",
																		  "id=err_ACCOUNT_AGING_SCHED2",
																		  "value=".($_POST['ACCOUNT_AGING_SCHED2'] ? $_POST['ACCOUNT_AGING_SCHED2'] : (defined('ACCOUNT_AGING_SCHED2') ? ACCOUNT_AGING_SCHED2 : 60)),
																		  "size=8",
																		  (!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																		  "style=text-align:right",
																		  "onFocus=select();")."
												</div>
											</td>
											<td style=\"padding:10px 25px;width:33%\">
												Account aging schedule 3:
												<div style=\"margin-left:25px;padding-top:5px;padding-bottom:10px;\">".
													$this->form->text_box("name=ACCOUNT_AGING_SCHED3",
																		  "id=err_ACCOUNT_AGING_SCHED3",
																		  "value=".($_POST['ACCOUNT_AGING_SCHED3'] ? $_POST['ACCOUNT_AGING_SCHED3'] : (defined('ACCOUNT_AGING_SCHED3') ? ACCOUNT_AGING_SCHED3 : 90)),
																		  "size=8",
																		  (!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																		  "style=text-align:right",
																		  "onFocus=select();")."
												</div>
											</td>
										</tr>
									</table>
								</fieldset>
								<fieldset style=\"margin-top:10px;\">
									<legend>Assigning Your Default Accounts</legend>
									<table class=\"tborder\" cellspacing=\"0\" cellpadding=\"8\" style=\"width:100%;border:0\">
										<tr>
											<td style=\"padding:10px 25px;\" colspan=\"3\">
												There are certain actions such as creating customer invoices and receiving payment that have a direct 
												impact on your company's accounting. In order to prevent employees from potentially assigning these 
												transactions to incorrect accounts you can assign your default accounts here. Defaults accounts are 
												never set in stone and can always be changed.
											</td>
										</tr>
										<tr>
											<td style=\"padding:10px 25px;width:33%;vertical-align:top;\">
												What is your default <span title=\"Cost of Goods Sold\">COGS</span><br />account?
												<div style=\"margin-left:5px;padding-top:5px;padding-bottom:10px\">";
												unset($this->current_account);
												if ($_POST['DEFAULT_COGS_ACCT'] || defined('DEFAULT_COGS_ACCT'))
													$this->fetch_account_record(($_POST['DEFAULT_COGS_ACCT_hash'] ? $_POST['DEFAULT_COGS_ACCT_hash'] : (defined('DEFAULT_COGS_ACCT') ? DEFAULT_COGS_ACCT : NULL)));
													$tbl .= 
													$this->form->text_box("name=DEFAULT_COGS_ACCT",
																			"id=err_DEFAULT_COGS_ACCT",
																			"value=".($this->current_account['account_hash'] ? ($this->current_account['account_no'] ? $this->current_account['account_no']." - " : NULL).$this->current_account['account_name'] : NULL),
																			"autocomplete=off",
																			"size=25",
																			(!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onFocus=if(this.value){select();}position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('payables','DEFAULT_COGS_ACCT','DEFAULT_COGS_ACCT_hash',1);" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onKeyDown=if(event.keyCode!=9){clear_values('DEFAULT_COGS_ACCT_hash');}" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onBlur=vtobj.reset_keyResults();key_clear();" : NULL)).
													$this->form->hidden(array("DEFAULT_COGS_ACCT_hash" => ($this->current_account['account_hash'] ? $this->current_account['account_hash'] : NULL))).($this->p->ck(get_class($this),'E','config') ? "
													<a href=\"javascript:void(0);\" onMouseOver=\"position_element($('keyResults'),findPos($('DEFAULT_COGS_ACCT'),'top')+20,findPos($('DEFAULT_COGS_ACCT'),'left')+1,'account_suggest');\" onClick=\"agent.call('payables','exec_post','cf_loadcontent','action=key_search','parent_name=DEFAULT_COGS_ACCT','parent_id=DEFAULT_COGS_ACCT_hash','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>" : NULL)."
												</div>
											</td>
											<td style=\"padding:10px 25px;width:33%;vertical-align:top;\">
												What is your default Cash<br />account?
												<div style=\"margin-left:5px;padding-top:5px;padding-bottom:10px\">";
												unset($this->current_account);
												if ($_POST['DEFAULT_CASH_ACCT'] || defined('DEFAULT_CASH_ACCT'))
													$this->fetch_account_record(($_POST['DEFAULT_CASH_ACCT_hash'] ? $_POST['DEFAULT_CASH_ACCT_hash'] : (defined('DEFAULT_CASH_ACCT') ? DEFAULT_CASH_ACCT : NULL)));
													$tbl .= 
													$this->form->text_box("name=DEFAULT_CASH_ACCT",
																			"id=err_DEFAULT_CASH_ACCT",
																			"value=".($this->current_account['account_hash'] ? ($this->current_account['account_no'] ? $this->current_account['account_no']." - " : NULL).$this->current_account['account_name'] : NULL),
																			"autocomplete=off",
																			"size=25",
																			(!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onFocus=if(this.value){select();}position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('payables','DEFAULT_CASH_ACCT','DEFAULT_CASH_ACCT_hash',1);" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onKeyDown=if(event.keyCode!=9){clear_values('DEFAULT_CASH_ACCT_hash');}" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onBlur=vtobj.reset_keyResults();key_clear();" : NULL)).
													$this->form->hidden(array("DEFAULT_CASH_ACCT_hash" => ($this->current_account['account_hash'] ? $this->current_account['account_hash'] : NULL))).($this->p->ck(get_class($this),'E','config') ? "
													<a href=\"javascript:void(0);\" onMouseOver=\"position_element($('keyResults'),findPos($('DEFAULT_CASH_ACCT'),'top')+20,findPos($('DEFAULT_CASH_ACCT'),'left')+1,'account_suggest');\" onClick=\"agent.call('payables','exec_post','cf_loadcontent','action=key_search','parent_name=DEFAULT_CASH_ACCT','parent_id=DEFAULT_CASH_ACCT_hash','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>" : NULL)."
												</div>
											</td>
											<td style=\"padding:10px 25px;width:33%;vertical-align:top;\">
												What is the default sales tax<br />payable account?
												<div style=\"margin-left:5px;padding-top:5px;padding-bottom:10px\">";
												unset($this->current_account);
												if ($_POST['SALES_TAX_PAYABLE'] || defined('SALES_TAX_PAYABLE'))
													$this->fetch_account_record(($_POST['SALES_TAX_PAYABLE_hash'] ? $_POST['SALES_TAX_PAYABLE_hash'] : (defined('SALES_TAX_PAYABLE') ? SALES_TAX_PAYABLE : NULL)));
													$tbl .= 
													$this->form->text_box("name=SALES_TAX_PAYABLE",
																			"id=err_SALES_TAX_PAYABLE",
																			"value=".($this->current_account['account_hash'] ? ($this->current_account['account_no'] ? $this->current_account['account_no']." - " : NULL).$this->current_account['account_name'] : NULL),
																			"autocomplete=off",
																			"size=25",
																			(!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onFocus=if(this.value){select();}position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('payables','SALES_TAX_PAYABLE','SALES_TAX_PAYABLE_hash',1);" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onKeyDown=if(event.keyCode!=9){clear_values('SALES_TAX_PAYABLE_hash');}" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onBlur=vtobj.reset_keyResults();key_clear();" : NULL)).
													$this->form->hidden(array("SALES_TAX_PAYABLE_hash" => ($this->current_account['account_hash'] ? $this->current_account['account_hash'] : NULL))).($this->p->ck(get_class($this),'E','config') ? "
													<a href=\"javascript:void(0);\" onMouseOver=\"position_element($('keyResults'),findPos($('SALES_TAX_PAYABLE'),'top')+20,findPos($('SALES_TAX_PAYABLE'),'left')+1,'account_suggest');\" onClick=\"agent.call('payables','exec_post','cf_loadcontent','action=key_search','parent_name=SALES_TAX_PAYABLE','parent_id=SALES_TAX_PAYABLE_hash','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>" : NULL)."
												</div>
											</td>
										</tr>
									</table>
								</fieldset>
								<fieldset style=\"margin-top:10px;\">
									<legend>Miscellaneous Vendor Charges &amp; Fees</legend>
									<table class=\"tborder\" cellspacing=\"0\" cellpadding=\"8\" style=\"width:100%;border:0\">
										<tr>
											<td style=\"padding:10px 25px;\" colspan=\"2\">
												When DealerChoice finds miscellaneous vendor charges &amp; fees such as fuel surcharges and freight fees, those fees 
												must be tied against a valid COGS and Income account. Please assign those defaults below:
											</td>
										</tr>
										<tr>
											<td style=\"padding:10px 25px;width:50%;\">
												Default income account for Small Order Fees:
												<div style=\"margin-left:25px;padding-top:5px;padding-bottom:10px\">";
												unset($this->current_account);
												if ($_POST['SMALL_ORDER_FEE_INCOME_ACCT'] || defined('SMALL_ORDER_FEE_INCOME_ACCT'))
													$this->fetch_account_record(($_POST['SMALL_ORDER_FEE_INCOME_ACCT_hash'] ? $_POST['SMALL_ORDER_FEE_INCOME_ACCT_hash'] : (defined('SMALL_ORDER_FEE_INCOME_ACCT') ? SMALL_ORDER_FEE_INCOME_ACCT : NULL)));
													$tbl .= 
													$this->form->text_box("name=SMALL_ORDER_FEE_INCOME_ACCT",
																			"id=err_SMALL_ORDER_FEE_INCOME_ACCT",
																			"value=".($this->current_account['account_hash'] ? ($this->current_account['account_no'] ? $this->current_account['account_no']." - " : NULL).$this->current_account['account_name'] : NULL),
																			"autocomplete=off",
																			"size=25",
																			(!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onFocus=if(this.value){select();}position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('payables','SMALL_ORDER_FEE_INCOME_ACCT','SMALL_ORDER_FEE_INCOME_ACCT_hash',1);" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onKeyDown=if(event.keyCode!=9){clear_values('SMALL_ORDER_FEE_INCOME_ACCT_hash');}" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onBlur=vtobj.reset_keyResults();key_clear();" : NULL)).
													$this->form->hidden(array("SMALL_ORDER_FEE_INCOME_ACCT_hash" => ($this->current_account['account_hash'] ? $this->current_account['account_hash'] : NULL))).($this->p->ck(get_class($this),'E','config') ? "
													<a href=\"javascript:void(0);\" onMouseOver=\"position_element($('keyResults'),findPos($('SMALL_ORDER_FEE_INCOME_ACCT'),'top')+20,findPos($('SMALL_ORDER_FEE_INCOME_ACCT'),'left')+1,'account_suggest');\" onClick=\"agent.call('payables','exec_post','cf_loadcontent','action=key_search','parent_name=SMALL_ORDER_FEE_INCOME_ACCT','parent_id=SMALL_ORDER_FEE_INCOME_ACCT_hash','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>" : NULL)."
												</div>
											</td>
											<td style=\"padding:10px 25px;width:50%;vertical-align:top;\">
												Default COGS account for Small Order Fees:
												<div style=\"margin-left:25px;padding-top:5px;padding-bottom:10px\">";
												unset($this->current_account);
												if ($_POST['SMALL_ORDER_FEE_COGS_ACCT'] || defined('SMALL_ORDER_FEE_COGS_ACCT'))
													$this->fetch_account_record(($_POST['SMALL_ORDER_FEE_COGS_ACCT_hash'] ? $_POST['SMALL_ORDER_FEE_COGS_ACCT_hash'] : (defined('SMALL_ORDER_FEE_COGS_ACCT') ? SMALL_ORDER_FEE_COGS_ACCT : NULL)));
													$tbl .= 
													$this->form->text_box("name=SMALL_ORDER_FEE_COGS_ACCT",
																			"id=err_SMALL_ORDER_FEE_COGS_ACCT",
																			"value=".($this->current_account['account_hash'] ? ($this->current_account['account_no'] ? $this->current_account['account_no']." - " : NULL).$this->current_account['account_name'] : NULL),
																			"autocomplete=off",
																			"size=25",
																			(!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onFocus=if(this.value){select();}position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('payables','SMALL_ORDER_FEE_COGS_ACCT','SMALL_ORDER_FEE_COGS_ACCT_hash',1);" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onKeyDown=if(event.keyCode!=9){clear_values('SMALL_ORDER_FEE_COGS_ACCT_hash');}" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onBlur=vtobj.reset_keyResults();key_clear();" : NULL)).
													$this->form->hidden(array("SMALL_ORDER_FEE_COGS_ACCT_hash" => ($this->current_account['account_hash'] ? $this->current_account['account_hash'] : NULL))).($this->p->ck(get_class($this),'E','config') ? "
													<a href=\"javascript:void(0);\" onMouseOver=\"position_element($('keyResults'),findPos($('SMALL_ORDER_FEE_COGS_ACCT'),'top')+20,findPos($('SMALL_ORDER_FEE_COGS_ACCT'),'left')+1,'account_suggest');\" onClick=\"agent.call('payables','exec_post','cf_loadcontent','action=key_search','parent_name=SMALL_ORDER_FEE_COGS_ACCT','parent_id=SMALL_ORDER_FEE_COGS_ACCT_hash','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>" : NULL)."
												</div>
											</td>
										</tr>
										<tr>
											<td style=\"padding:10px 25px;width:50%;\">
												Default income account for Freight Fees:
												<div style=\"margin-left:25px;padding-top:5px;padding-bottom:10px\">";
												unset($this->current_account);
												if ($_POST['FREIGHT_INCOME_ACCT'] || defined('FREIGHT_INCOME_ACCT'))
													$this->fetch_account_record(($_POST['FREIGHT_INCOME_ACCT_hash'] ? $_POST['FREIGHT_INCOME_ACCT_hash'] : (defined('FREIGHT_INCOME_ACCT') ? FREIGHT_INCOME_ACCT : NULL)));
													$tbl .= 
													$this->form->text_box("name=FREIGHT_INCOME_ACCT",
																			"id=err_FREIGHT_INCOME_ACCT",
																			"value=".($this->current_account['account_hash'] ? ($this->current_account['account_no'] ? $this->current_account['account_no']." - " : NULL).$this->current_account['account_name'] : NULL),
																			"autocomplete=off",
																			"size=25",
																			(!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onFocus=if(this.value){select();}position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('payables','FREIGHT_INCOME_ACCT','FREIGHT_INCOME_ACCT_hash',1);" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onKeyDown=if(event.keyCode!=9){clear_values('FREIGHT_INCOME_ACCT_hash');}" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onBlur=vtobj.reset_keyResults();key_clear();" : NULL)).
													$this->form->hidden(array("FREIGHT_INCOME_ACCT_hash" => ($this->current_account['account_hash'] ? $this->current_account['account_hash'] : NULL))).($this->p->ck(get_class($this),'E','config') ? "
													<a href=\"javascript:void(0);\" onMouseOver=\"position_element($('keyResults'),findPos($('FREIGHT_INCOME_ACCT'),'top')+20,findPos($('FREIGHT_INCOME_ACCT'),'left')+1,'account_suggest');\" onClick=\"agent.call('payables','exec_post','cf_loadcontent','action=key_search','parent_name=FREIGHT_INCOME_ACCT','parent_id=FREIGHT_INCOME_ACCT_hash','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>" : NULL)."
												</div>
											</td>
											<td style=\"padding:10px 25px;width:50%;vertical-align:top;\">
												Default COGS account for Freight Fees:
												<div style=\"margin-left:25px;padding-top:5px;padding-bottom:10px\">";
												unset($this->current_account);
												if ($_POST['FREIGHT_COGS_ACCT'] || defined('FREIGHT_COGS_ACCT'))
													$this->fetch_account_record(($_POST['FREIGHT_COGS_ACCT_hash'] ? $_POST['FREIGHT_COGS_ACCT_hash'] : (defined('FREIGHT_COGS_ACCT') ? FREIGHT_COGS_ACCT : NULL)));
													$tbl .= 
													$this->form->text_box("name=FREIGHT_COGS_ACCT",
																			"id=err_FREIGHT_COGS_ACCT",
																			"value=".($this->current_account['account_hash'] ? ($this->current_account['account_no'] ? $this->current_account['account_no']." - " : NULL).$this->current_account['account_name'] : NULL),
																			"autocomplete=off",
																			"size=25",
																			(!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onFocus=if(this.value){select();}position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('payables','FREIGHT_COGS_ACCT','FREIGHT_COGS_ACCT_hash',1);" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onKeyDown=if(event.keyCode!=9){clear_values('FREIGHT_COGS_ACCT_hash');}" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onBlur=vtobj.reset_keyResults();key_clear();" : NULL)).
													$this->form->hidden(array("FREIGHT_COGS_ACCT_hash" => ($this->current_account['account_hash'] ? $this->current_account['account_hash'] : NULL))).($this->p->ck(get_class($this),'E','config') ? "
													<a href=\"javascript:void(0);\" onMouseOver=\"position_element($('keyResults'),findPos($('FREIGHT_COGS_ACCT'),'top')+20,findPos($('FREIGHT_COGS_ACCT'),'left')+1,'account_suggest');\" onClick=\"agent.call('payables','exec_post','cf_loadcontent','action=key_search','parent_name=FREIGHT_COGS_ACCT','parent_id=FREIGHT_COGS_ACCT_hash','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>" : NULL)."
												</div>
											</td>
										</tr>
										<tr>
											<td style=\"padding:10px 25px;width:50%;\">
												Default income account for Fuel Surcharge Fees:
												<div style=\"margin-left:25px;padding-top:5px;padding-bottom:10px\">";
												unset($this->current_account);
												if ($_POST['FUEL_SURCHARGE_INCOME_ACCT'] || defined('FUEL_SURCHARGE_INCOME_ACCT'))
													$this->fetch_account_record(($_POST['FUEL_SURCHARGE_INCOME_ACCT_hash'] ? $_POST['FUEL_SURCHARGE_INCOME_ACCT_hash'] : (defined('FUEL_SURCHARGE_INCOME_ACCT') ? FUEL_SURCHARGE_INCOME_ACCT : NULL)));
													$tbl .= 
													$this->form->text_box("name=FUEL_SURCHARGE_INCOME_ACCT",
																			"id=err_FUEL_SURCHARGE_INCOME_ACCT",
																			"value=".($this->current_account['account_hash'] ? ($this->current_account['account_no'] ? $this->current_account['account_no']." - " : NULL).$this->current_account['account_name'] : NULL),
																			"autocomplete=off",
																			"size=25",
																			(!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onFocus=if(this.value){select();}position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('payables','FUEL_SURCHARGE_INCOME_ACCT','FUEL_SURCHARGE_INCOME_ACCT_hash',1);" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onKeyDown=if(event.keyCode!=9){clear_values('FUEL_SURCHARGE_INCOME_ACCT_hash');}" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onBlur=vtobj.reset_keyResults();key_clear();" : NULL)).
													$this->form->hidden(array("FUEL_SURCHARGE_INCOME_ACCT_hash" => ($this->current_account['account_hash'] ? $this->current_account['account_hash'] : NULL))).($this->p->ck(get_class($this),'E','config') ? "
													<a href=\"javascript:void(0);\" onMouseOver=\"position_element($('keyResults'),findPos($('FUEL_SURCHARGE_INCOME_ACCT'),'top')+20,findPos($('FUEL_SURCHARGE_INCOME_ACCT'),'left')+1,'account_suggest');\" onClick=\"agent.call('payables','exec_post','cf_loadcontent','action=key_search','parent_name=FUEL_SURCHARGE_INCOME_ACCT','parent_id=FUEL_SURCHARGE_INCOME_ACCT_hash','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>" : NULL)."
												</div>
											</td>
											<td style=\"padding:10px 25px;width:50%;vertical-align:top;\">
												Default COGS account for Fuel Surcharge Fees:
												<div style=\"margin-left:25px;padding-top:5px;padding-bottom:10px\">";
												unset($this->current_account);
												if ($_POST['FUEL_SURCHARGE_COGS_ACCT'] || defined('FUEL_SURCHARGE_COGS_ACCT'))
													$this->fetch_account_record(($_POST['FUEL_SURCHARGE_COGS_ACCT_hash'] ? $_POST['FUEL_SURCHARGE_COGS_ACCT_hash'] : (defined('FUEL_SURCHARGE_COGS_ACCT') ? FUEL_SURCHARGE_COGS_ACCT : NULL)));
													$tbl .= 
													$this->form->text_box("name=FUEL_SURCHARGE_COGS_ACCT",
																			"id=err_FUEL_SURCHARGE_COGS_ACCT",
																			"value=".($this->current_account['account_hash'] ? ($this->current_account['account_no'] ? $this->current_account['account_no']." - " : NULL).$this->current_account['account_name'] : NULL),
																			"autocomplete=off",
																			"size=25",
																			(!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onFocus=if(this.value){select();}position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('payables','FUEL_SURCHARGE_COGS_ACCT','FUEL_SURCHARGE_COGS_ACCT_hash',1);" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onKeyDown=if(event.keyCode!=9){clear_values('FUEL_SURCHARGE_COGS_ACCT_hash');}" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onBlur=vtobj.reset_keyResults();key_clear();" : NULL)).
													$this->form->hidden(array("FUEL_SURCHARGE_COGS_ACCT_hash" => ($this->current_account['account_hash'] ? $this->current_account['account_hash'] : NULL))).($this->p->ck(get_class($this),'E','config') ? "
													<a href=\"javascript:void(0);\" onMouseOver=\"position_element($('keyResults'),findPos($('FUEL_SURCHARGE_COGS_ACCT'),'top')+20,findPos($('FUEL_SURCHARGE_COGS_ACCT'),'left')+1,'account_suggest');\" onClick=\"agent.call('payables','exec_post','cf_loadcontent','action=key_search','parent_name=FUEL_SURCHARGE_COGS_ACCT','parent_id=FUEL_SURCHARGE_COGS_ACCT_hash','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>" : NULL)."
												</div>
											</td>
										</tr>
										<tr>
											<td style=\"padding:10px 25px;width:50%;\">
												Default income account for CBD Fees:
												<div style=\"margin-left:25px;padding-top:5px;padding-bottom:10px\">";
												unset($this->current_account);
												if ($_POST['CBD_INCOME_ACCT'] || defined('CBD_INCOME_ACCT'))
													$this->fetch_account_record(($_POST['CBD_INCOME_ACCT_hash'] ? $_POST['CBD_INCOME_ACCT_hash'] : (defined('CBD_INCOME_ACCT') ? CBD_INCOME_ACCT : NULL)));
													$tbl .= 
													$this->form->text_box("name=CBD_INCOME_ACCT",
																			"id=err_CBD_INCOME_ACCT",
																			"value=".($this->current_account['account_hash'] ? ($this->current_account['account_no'] ? $this->current_account['account_no']." - " : NULL).$this->current_account['account_name'] : NULL),
																			"autocomplete=off",
																			"size=25",
																			(!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onFocus=if(this.value){select();}position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('payables','CBD_INCOME_ACCT','CBD_INCOME_ACCT_hash',1);" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onKeyDown=if(event.keyCode!=9){clear_values('CBD_INCOME_ACCT_hash');}" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onBlur=vtobj.reset_keyResults();key_clear();" : NULL)).
													$this->form->hidden(array("CBD_INCOME_ACCT_hash" => ($this->current_account['account_hash'] ? $this->current_account['account_hash'] : NULL))).($this->p->ck(get_class($this),'E','config') ? "
													<a href=\"javascript:void(0);\" onMouseOver=\"position_element($('keyResults'),findPos($('CBD_INCOME_ACCT'),'top')+20,findPos($('CBD_INCOME_ACCT'),'left')+1,'account_suggest');\" onClick=\"agent.call('payables','exec_post','cf_loadcontent','action=key_search','parent_name=CBD_INCOME_ACCT','parent_id=CBD_INCOME_ACCT_hash','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>" : NULL)."
												</div>
											</td>
											<td style=\"padding:10px 25px;width:50%;vertical-align:top;\">
												Default COGS account for CBD Fees:
												<div style=\"margin-left:25px;padding-top:5px;padding-bottom:10px\">";
												unset($this->current_account);
												if ($_POST['CBD_COGS_ACCT'] || defined('CBD_COGS_ACCT'))
													$this->fetch_account_record(($_POST['CBD_COGS_ACCT_hash'] ? $_POST['CBD_COGS_ACCT_hash'] : (defined('CBD_COGS_ACCT') ? CBD_COGS_ACCT : NULL)));
													$tbl .= 
													$this->form->text_box("name=CBD_COGS_ACCT",
																			"id=err_CBD_COGS_ACCT",
																			"value=".($this->current_account['account_hash'] ? ($this->current_account['account_no'] ? $this->current_account['account_no']." - " : NULL).$this->current_account['account_name'] : NULL),
																			"autocomplete=off",
																			"size=25",
																			(!$this->p->ck(get_class($this),'E','config') ? "readonly" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onFocus=if(this.value){select();}position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('payables','CBD_COGS_ACCT','CBD_COGS_ACCT_hash',1);" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onKeyDown=if(event.keyCode!=9){clear_values('CBD_COGS_ACCT_hash');}" : NULL),
																			($this->p->ck(get_class($this),'E','config') ? "onBlur=vtobj.reset_keyResults();key_clear();" : NULL)).
													$this->form->hidden(array("CBD_COGS_ACCT_hash" => ($this->current_account['account_hash'] ? $this->current_account['account_hash'] : NULL))).($this->p->ck(get_class($this),'E','config') ? "
													<a href=\"javascript:void(0);\" onMouseOver=\"position_element($('keyResults'),findPos($('CBD_COGS_ACCT'),'top')+20,findPos($('CBD_COGS_ACCT'),'left')+1,'account_suggest');\" onClick=\"agent.call('payables','exec_post','cf_loadcontent','action=key_search','parent_name=CBD_COGS_ACCT','parent_id=CBD_COGS_ACCT_hash','display_area=keyResults','q=*');\"><img src=\"images/arrow_down.gif\" border=\"0\" alt=\"Show all accounts\" /></a>" : NULL)."
												</div>
											</td>
										</tr>
									</table>
								</fieldset>
							</div>
						</div >
					</div>
				</td>
			</tr>
		</table>".
		$this->form->close_form();

		if ($local) 
			return array($inner_tbl,$jscript);
		
		
		$this->content['html']['place_holder'] = $tbl;
	}

	function close_period() {
		$this->unlock("_");
		$this->load_class_navigation();		
		$p = ($_POST['p'] ? $_POST['p'] : $this->ajax_vars['p']);
		$order = ($_POST['order'] ? $_POST['order'] : $this->ajax_vars['order']);
		$order_dir = ($_POST['order_dir'] ? $_POST['order_dir'] : $this->ajax_vars['order_dir']);
		$period = $this->ajax_vars['period'];
		$fiscal_year = $this->ajax_vars['fiscal_year'];
		
		if ($open = $this->ajax_vars['open']) 
			$this->db->query("UPDATE `".DB_PREFIX."period_dates`
							  SET `closed` = 0
							  WHERE `obj_id` = '$open'");
		
		
		if (!$fiscal_year) {
			$period_info = get_period_info(date("Y-m-d"));
			$fiscal_year = $period_info['fiscal_year'];
		}
		$date = "2007-07-17";
		$result = $this->db->query("SELECT `obj_id` , `closed` , `fiscal_year` , `period` , `period_end` , `period_start`
									FROM `".DB_PREFIX."period_dates`
									WHERE `fiscal_year` = '".$fiscal_year."'
									ORDER BY `period` ASC");
		while ($row = $this->db->fetch_assoc($result)) 
			$open_periods[$row['fiscal_year']][$row['period']] = array('close_date' 	=> $row['period_end'],
																	   'period_start'	=> $row['period_start'],
																	   'closed'			=> $row['closed'],
																	   'obj_id'			=> $row['obj_id']);
		
		
		$tbl .= $this->form->form_tag().$this->form->hidden(array('p' => $p, 'order' => $order, 'order_dir' => $order_dir, 'fiscal_year' => $fiscal_year))."
		<div id=\"feedback_holder\" style=\"background-color:#ffffff;border:1px solid #cccccc;font-weight:bold;padding:5px;display:none;margin-bottom:5px;\">
			<h3 class=\"error_msg\" style=\"margin-top:0;\">Error!</h3>
				<p id=\"feedback_message\"></p>
		</div>
		<table cellspacing=\"1\" cellpadding=\"5\" class=\"main_tab_table\">
			<tr>
				<td style=\"padding:0;\" id=\"inner_tbl_holder\">
					 <div style=\"background-color:#ffffff;height:100%;\">
					 	<div style=\"margin:15px 35px;\">
							<h3 style=\"margin-bottom:5px;color:#00477f;\">Perform Period Closings</h3>
							<small style=\"margin-left:20px;\"><a href=\"javascript:void(0);\" class=\"link_standard\" onClick=\"agent.call('accounting','sf_loadcontent','cf_loadcontent','show_journal','p=$p','order=$order','order_dir=$order_dir')\"><-- Back</a></small>
							<div style=\"margin:20px;width:800px;padding:0;\">
								<table class=\"tborder\" cellspacing=\"0\" cellpadding=\"8\" style=\"width:100%;\">
									<tr>
										<td style=\"padding:10px 25px;\" >
												What period would you like to close?
												<div style=\"margin-left:25px;padding-top:10px;font-weight:bold;\">
													Fiscal Year ".$fiscal_year."
													<span style=\"padding-left:10px;font-weight:normal;\">
														[<small><a href=\"javascript:void(0);\" class=\"link_standard\" onClick=\"agent.call('accounting','sf_loadcontent','cf_loadcontent','close_period','fiscal_year=".date("Y",strtotime($fiscal_year."-01-01 -1 year"))."')\">previous year</a></small>]
														&nbsp;&nbsp;
														[<small><a href=\"javascript:void(0);\" class=\"link_standard\" onClick=\"agent.call('accounting','sf_loadcontent','cf_loadcontent','close_period','fiscal_year=".date("Y",strtotime($fiscal_year."-01-01 +1 year"))."')\">next year</a></small>]
													</span>
													
												</div>";
											if (is_array($open_periods)) {
												while (list($year,$period) = each($open_periods)) {
													while (list($period_no,$closing) = each($period)) {
														$i++;
														$tbl .= "
														<div style=\"margin-left:50px;padding-top:10px;\">
															".($closing['closed'] ? 
																"<a href=\"javascript:void(0);\" class=\"link_standard\" onClick=\"if(confirm('Are you sure you want to reopen this period?')){agent.call('accounting','sf_loadcontent','cf_loadcontent','close_period','fiscal_year=$fiscal_year','open=".$closing['obj_id']."');}\"><img src=\"images/check.gif\" border=\"0\" alt=\"Click to reopen this period.\" /></a>" : $this->form->checkbox("name=period[]","value=".$closing['obj_id']))."
															&nbsp;
															Period ".$period_no." ending ".date(DATE_FORMAT,strtotime($closing['close_date']))."
														</div>";
													}
												}
												$tbl .= "
												<div style=\"margin-top:25px;margin-left:25px;\">
													".$this->form->button("value=Close Period","onClick=submit_form(this.form,'accounting','exec_post','refresh_form','action=doit_close_period')")."
												</div>";
											} else
												$tbl .= "
												<div style=\"margin-left:25px;padding-top:10px;\">
													There are no open periods available for closing at this time.
												</div>";
											$tbl .= "
										</td>
									</tr>
								</table>
							</div>
						</div>
					</div>
				</td>
			</tr>
		</table>".		
		$this->form->close_form();
		
		$this->content['html']['place_holder'] = $tbl;
		return;
	}
	
	function fetch_journal($start,$end,$order_by=NULL,$order_dir=NULL) {
		$this->journal_info = array();
		
		if ($this->active_search) {
			$result = $this->db->query("SELECT `query` , `total`
								  		FROM `".DB_PREFIX."search`
								  		WHERE `search_hash` = '".$this->active_search."'");
			$row = $this->db->fetch_assoc($result);
			$this->journal_total = $row['total'];
			$sql = base64_decode($row['query']);
			
		}
		$result = $this->db->query("SELECT ".DB_PREFIX."journal.audit_id , ".DB_PREFIX."journal.trans_type
									FROM `".DB_PREFIX."journal`".($sql || $this->proposal_hash ? "
									WHERE ".($this->proposal_hash ? DB_PREFIX."journal.proposal_hash = '".$this->proposal_hash."' ".($sql ? "AND " : NULL) : NULL).$sql : NULL)."
									GROUP BY ".DB_PREFIX."journal.audit_id
									ORDER BY ".DB_PREFIX."journal.date DESC , ".DB_PREFIX."journal.obj_id DESC".($start ? "
									LIMIT $start , $end" : NULL));
		/*
		$result = $this->db->query("SELECT ".DB_PREFIX."journal.audit_id , ".DB_PREFIX."journal.trans_type
									FROM `".DB_PREFIX."journal`
								    LEFT JOIN `".DB_PREFIX."customer_invoice` ON ".DB_PREFIX."customer_invoice.invoice_hash = ".DB_PREFIX."journal.ar_invoice_hash
								    LEFT JOIN `".DB_PREFIX."customer_payment` ON ".DB_PREFIX."customer_payment.payment_hash = ".DB_PREFIX."journal.ar_payment_hash
								    LEFT JOIN `".DB_PREFIX."vendor_payables` ON ".DB_PREFIX."vendor_payables.invoice_hash = ".DB_PREFIX."journal.ap_invoice_hash 
								    LEFT JOIN `".DB_PREFIX."vendor_payment` ON ".DB_PREFIX."vendor_payment.invoice_hash = ".DB_PREFIX."vendor_payables.invoice_hash ".($sql || $this->proposal_hash ? "
									WHERE ".($this->proposal_hash ? DB_PREFIX."journal.proposal_hash = '".$this->proposal_hash."' ".($sql ? "AND " : NULL) : NULL).$sql : NULL)."
									GROUP BY ".DB_PREFIX."journal.audit_id
									ORDER BY ".DB_PREFIX."journal.date DESC , ".DB_PREFIX."journal.obj_id DESC".($start ? "
									LIMIT $start , $end" : NULL));
*/		
		while ($row = $this->db->fetch_assoc($result))
					array_push($this->journal_info,$row);

		return;
	}
	
	function fetch_journal_trasactions($audit_id,$show_profit=false) {
		$result = $this->db->query("SELECT ".DB_PREFIX."journal.* , ".DB_PREFIX."accounts.account_name , ".DB_PREFIX."accounts.account_no ,
									CASE 
									WHEN !ISNULL(".DB_PREFIX."journal.proposal_hash)
										THEN (
												SELECT ".DB_PREFIX."proposals.proposal_no
												FROM `".DB_PREFIX."proposals`
												WHERE ".DB_PREFIX."proposals.proposal_hash = ".DB_PREFIX."journal.proposal_hash
											)
										ELSE NULL
									END AS `proposal_no` ,
									CASE 
									WHEN !ISNULL(".DB_PREFIX."journal.proposal_hash)
										THEN (
												SELECT ".DB_PREFIX."proposals.proposal_descr
												FROM `".DB_PREFIX."proposals`
												WHERE ".DB_PREFIX."proposals.proposal_hash = ".DB_PREFIX."journal.proposal_hash
											)
										ELSE NULL
									END AS `proposal_descr` ,	
									CASE 
									WHEN !ISNULL(".DB_PREFIX."journal.ar_invoice_hash)
										THEN (
												SELECT ".DB_PREFIX."customer_invoice.invoice_no
												FROM `".DB_PREFIX."customer_invoice`
												WHERE ".DB_PREFIX."customer_invoice.invoice_hash = ".DB_PREFIX."journal.ar_invoice_hash
											)
										ELSE NULL
									END AS `ar_invoice_no` ,																		
									CASE 
									WHEN !ISNULL(".DB_PREFIX."journal.ap_invoice_hash)
										THEN (
												SELECT ".DB_PREFIX."vendor_payables.invoice_no
												FROM `".DB_PREFIX."vendor_payables`
												WHERE ".DB_PREFIX."vendor_payables.invoice_hash = ".DB_PREFIX."journal.ap_invoice_hash
											)
										ELSE NULL
									END AS `ap_invoice_no` ,	
									CASE 
									WHEN !ISNULL(".DB_PREFIX."journal.customer_hash)
										THEN (
												SELECT ".DB_PREFIX."customers.customer_name
												FROM `".DB_PREFIX."customers`
												WHERE ".DB_PREFIX."customers.customer_hash = ".DB_PREFIX."journal.customer_hash
											)
										ELSE NULL
									END AS `customer_name` ,
									CASE 
									WHEN !ISNULL(".DB_PREFIX."journal.vendor_hash)
										THEN (
												SELECT ".DB_PREFIX."vendors.vendor_name
												FROM `".DB_PREFIX."vendors`
												WHERE ".DB_PREFIX."vendors.vendor_hash = ".DB_PREFIX."journal.vendor_hash
											)
										ELSE NULL
									END AS `vendor_name` ,	
									CASE 
									WHEN !ISNULL(".DB_PREFIX."journal.check_no)
										THEN (
												SELECT ".DB_PREFIX."check_register.check_no
												FROM `".DB_PREFIX."check_register`
												WHERE ".DB_PREFIX."check_register.check_no = ".DB_PREFIX."journal.check_no AND ".DB_PREFIX."check_register.audit_id = mod_journal.audit_id
											)
										ELSE NULL
									END AS `payment_check_no`									
									FROM `".DB_PREFIX."journal`
									LEFT JOIN ".DB_PREFIX."accounts ON ".DB_PREFIX."accounts.account_hash = ".DB_PREFIX."journal.account_hash
									WHERE ".DB_PREFIX."journal.audit_id = '".$audit_id."' ".(!$show_profit ? "AND ".DB_PREFIX."journal.account_hash != '".DEFAULT_PROFIT_ACCT."'" : NULL)."
									ORDER BY ".DB_PREFIX."journal.obj_id ASC");
		while ($row = $this->db->fetch_assoc($result))
			$journal_info[] = $row;
			
		return $journal_info;
	}
	function show_journal() {
		$this->unlock("_");
		$this->load_class_navigation();		
		$p = $this->ajax_vars['p'];
		$order = $this->ajax_vars['order'];
		$order_dir = $this->ajax_vars['order_dir'];
		$this->active_search = $this->ajax_vars['active_search'];

		$total_1 = $this->journal_total;
		$num_pages = ceil($this->journal_total / MAIN_PAGNATION_NUM);
		$p = (!isset($p) || $p <= 1 || $p > $num_pages) ? 1 : $p;
		$start_from = MAIN_PAGNATION_NUM * ($p - 1);
		
		$end = $start_from + MAIN_PAGNATION_NUM;
		if ($end > $this->journal_total)
			$end = $this->journal_total;
		
		$order_by_ops = array("timestamp"			=>	DB_PREFIX."journal.timestamp",
							  "date"				=>	DB_PREFIX."journal.date",
							  "account_name"		=>	DB_PREFIX."accounts.account_name",
							  "audit_id"			=>	DB_PREFIX."journal.audit_id",
							  "type"				=>	DB_PREFIX."journal.trans_type");


		$this->active_search = $this->ajax_vars['active_search'];
		$tbl = $this->fetch_journal($start_from,$end,DB_PREFIX."journal.obj_id",($order_dir ? $order_dir : "DESC"));
		//if ($this->active_search)
			//$this->page_pref =& $this->search_vars;
		
		if ($this->journal_total != $total_1) {
			$num_pages = ceil($this->journal_total / MAIN_PAGNATION_NUM);
			$p = (!isset($p) || $p <= 1 || $p > $num_pages) ? 1 : $p;
			$start_from = MAIN_PAGNATION_NUM * ($p - 1);
			
			$end = $start_from + MAIN_PAGNATION_NUM;
			if ($end > $this->journal_total)
				$end = $this->journal_total;
			
		}
		
		$tbl .= ($this->active_search ? "
		<h3 style=\"color:#00477f;margin:0;\">Search Results</h3>
		<div style=\"padding-top:8px;padding-left:25px;padding-bottom:10px;font-weight:bold;\">[<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','cf_loadcontent','show_journal');\">Show All</a>]</div>" : NULL)."
		<table cellpadding=\"0\" cellspacing=\"3\" width=\"100%\">
			<tr>
				<td style=\"padding-left:10px;padding-top:0\">
					 <table class=\"tborder\" cellspacing=\"0\" cellpadding=\"6\" style=\"width:90%;\">
						<tr>
							<td style=\"font-weight:bold;vertical-align:bottom;\" colspan=\"7\">".($this->journal_total ? "
								<div style=\"float:right;font-weight:normal;padding-right:10px;text-align:right;\">
									".paginate_jscript($num_pages,$p,'sf_loadcontent','cf_loadcontent','accounting','show_journal',$order,$order_dir,"'active_search=".$this->active_search."','popup_id=".$this->popup_id."','show=".(is_array($show) ? implode("|",$show) : $show)."'")."
								</div>
								Showing ".($start_from + 1)." - ".($start_from + MAIN_PAGNATION_NUM > $this->journal_total ? $this->journal_total : $start_from + MAIN_PAGNATION_NUM)." of ".$this->journal_total." Journal Entries." : NULL)."
								<div style=\"padding-left:5px;padding-top:8px;font-weight:normal;\">".($this->p->ck(get_class($this),'A','journal') ? "
									<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','show_popup_window','new_journal_entry','popup_id=line_item','p=$p','order=$order','order_dir=$order_dir');\"><img src=\"images/new.gif\" alt=\"Create a new journal entry\" border=\"0\" /></a>
									&nbsp;" : NULL)."
									<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','show_popup_window','search_journal_entries','popup_id=line_item');\"><img src=\"images/search.gif\" alt=\"Search journal\" border=\"0\" /></a>
									&nbsp;".($this->p->ck(get_class($this),'E','period') ? "
									<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','cf_loadcontent','close_period','p=$p','order=$order','order_dir=$order_dir');\"><img src=\"images/close_period.gif\" alt=\"Perform period closing functions\" border=\"0\" /></a>
									&nbsp;&nbsp;&nbsp;&nbsp;" : NULL).($this->p->ck(get_class($this),'V','config') ? "
									<a href=\"javascript:void(0);\" onClick=\"agent.call('accounting','sf_loadcontent','cf_loadcontent','config','p=$p','order=$order','order_dir=$order_dir');\"><img src=\"images/configure_acct.gif\" alt=\"Configure your business cycle and settings\" border=\"0\" /></a>
									&nbsp;" : NULL)."
								</div>
							</td>
						</tr>
						<tr class=\"thead\" style=\"font-weight:bold;\">
							<td style=\"width:175px;vertical-align:bottom;padding-left:10px;\">Date/Time</td>
							<td style=\"vertical-align:bottom;\">Type</td>
							<td >Proposal</td>
							<td >Account</td>
							<td >Memo</td>
							<td class=\"num_field\" >Debit</td>
							<td class=\"num_field\" style=\"padding-right:10px;\">Credit</td>
						</tr>";
						for ($i = 0; $i < ($end - $start_from); $i++) {	
							$b++;
							$dr = $cr = 0;
							$journal_info = $this->fetch_journal_trasactions($this->journal_info[$i]['audit_id'],1);
							unset($title,$show_title);
							for ($j = 0; $j < count($journal_info); $j++) {
								if ($journal_info[$j]['account_hash'] != DEFAULT_PROFIT_ACCT || $journal_info[$j]['trans_type'] == 'GJ') {
									switch ($journal_info[$j]['trans_type']) {
										case 'AR':
										case 'CR':
										if ($journal_info[$j]['record_hash'])
											$onClick = "onClick=\"agent.call('customer_invoice','sf_loadcontent','show_popup_window','".($journal_info[$j]['trans_type'] == 'CR' ? 'new_deposit' : 'edit_invoice')."','invoice_hash=".$journal_info[$j]['record_hash']."','popup_id=line_item');\"";
										break;
										
										case 'AP':
										case 'CD':
										if ($journal_info[$j]['record_hash'])
											$onClick = "onClick=\"agent.call('payables','sf_loadcontent','show_popup_window','".($journal_info[$j]['trans_type'] == 'AR' ? "edit_invoice" : "new_deposit")."','invoice_hash=".$journal_info[$j]['record_hash']."','popup_id=line_item');\"";
										break;
										
										case 'ME':
										if ($journal_info[$j]['record_hash'])
											$onClick = "onClick=\"agent.call('proposals','sf_loadcontent','cf_loadcontent','edit_invoice','invoice_hash=".$journal_info[$j]['record_hash']."','popup_id=line_item');\"";
										break;
									}
									
									$tbl .= "
									<tr >
										<td style=\"vertical-align:bottom;\">".(!$show_title ? 
											date(DATE_FORMAT,strtotime($journal_info[$j]['date']))."&nbsp;".($journal_info[$j]['timestamp'] ? 
														date(TIMESTAMP_FORMAT,$journal_info[$j]['timestamp']) : NULL) : ($j == 1 && ($journal_info[$j]['customer_name'] || $journal_info[$j]['vendor_name']) ? 
															($journal_info[$j]['customer_name'] ? "<i>".$journal_info[$j]['customer_name']."</i>" : "<i>".$journal_info[$j]['vendor_name']."</i>") : "&nbsp;"))."
										</td>
										<td style=\"vertical-align:bottom;\">".(!$show_title ? 
												($onClick ?
													"<a href=\"javascript:void(0);\" $onClick class=\"link_standard\">" : NULL).
														$this->trans_type['type'][array_search($journal_info[$j]['trans_type'],$this->trans_type['code'])].($onClick ? "</a>" : NULL).(($journal_info[$j]['trans_type'] == 'AR' || $journal_info[$j]['trans_type'] == 'AD' || $journal_info[$j]['trans_type'] == 'CR') && $journal_info[$j]['ar_invoice_no'] ? 
															"&nbsp;".$journal_info[$j]['ar_invoice_no'] : (($journal_info[$j]['trans_type'] == 'AP' || $journal_info[$j]['trans_type'] == 'AD') && $journal_info[$j]['ap_invoice_no'] ? 
																$journal_info[$j]['ap_invoice_no'] : ($journal_info[$j]['trans_type'] == 'CD' && ($journal_info[$j]['check_no'] || $journal_info[$j]['payment_check_no']) ? 
																	"&nbsp;".($journal_info[$j]['payment_check_no'] ? 
																		$journal_info[$j]['payment_check_no'] : $journal_info[$j]['check_no']) : "&nbsp;"))) : "&nbsp;")."
										</td>
										<td>".(!$show_title ? 
											$journal_info[$j]['proposal_no'] : NULL)."										
										</td>
										<td style=\"vertical-align:bottom;\">".($journal_info[$j]['account_no'] ? 
											$journal_info[$j]['account_no']." - " : NULL).$journal_info[$j]['account_name']."
										</td>
										<td style=\"vertical-align:bottom;\">".stripslashes($journal_info[$j]['memo'])."</td>
										<td style=\"vertical-align:bottom;\" class=\"num_field\">".($journal_info[$j]['debit'] > 0 ?
											"$".number_format($journal_info[$j]['debit'],2) : NULL)."
										</td>
										<td style=\"vertical-align:bottom;\" class=\"num_field\" style=\"padding-right:10px;\">".($journal_info[$j]['credit'] > 0 ?
											"$".number_format($journal_info[$j]['credit'],2) : NULL)."
										</td>
									</tr>";
									$show_title = 1;
									$dr += $journal_info[$j]['debit'];
									$cr += $journal_info[$j]['credit'];
								} 
							}
							$tbl .= "
							<tr>
								<td colspan=\"5\"></td>
								<td class=\"num_field\" style=\"border-top:1px solid #8c8c8c;font-weight:bold;font-size:9pt;\">$".number_format($dr,2)."</td>
								<td class=\"num_field\" style=\"border-top:1px solid #8c8c8c;font-weight:bold;font-size:9pt;\">$".number_format($cr,2)."</td>
							</tr>";
							
							if ($b < ($end - $start_from))
								$tbl .= "
								<tr>
									<td style=\"background-color:#cccccc;\" colspan=\"7\"></td>
								</tr>";
							next($this->journal_info);
						}
						
						if (!$this->journal_info)
							$tbl .= "
							<tr >
								<td colspan=\"7\">Your journal is empty.</td>
							</tr>";
						
			$tbl .= "
					</table>
				</td>
			</tr>
		</table>";
		
		$this->content['html']['place_holder'] = $tbl;
	}
	
	function search_journal_entries() {
		$date = date("U") - 3600;
		$result = $this->db->query("DELETE FROM `".DB_PREFIX."search`
							  		WHERE `timestamp` <= '$date'");
							  
		$this->content['popup_controls']['popup_id'] = $this->ajax_vars['popup_id'];
		$this->content['popup_controls']['popup_title'] = "Search General Journal";		
		$this->content['focus'] = "audit_id";
		
		list($search_name,$search_hash) = $this->fetch_searches();
		$this->fetch_accounts(0,$this->total);
		$acct_name[] = "All Accounts";
		$acct_hash[] = "";
		while (list($hash,$detail) = each($this->account_info)) {
			$acct_name[] = ($detail['account_info']['account_no'] ? $detail['account_info']['account_no']." : " : NULL).stripslashes($detail['account_info']['account_name']);
			$acct_hash[] = $detail['account_info']['account_hash'];
			if ($detail['children']) {
				for ($i = 0; $i < count($detail['children']); $i++) {
					$acct_name[] = "&nbsp;&nbsp;&nbsp;&nbsp;--".($detail['children'][$i]['account_no'] ? $detail['children'][$i]['account_no']." : " : NULL).stripslashes($detail['children'][$i]['account_name']);
					$acct_hash[] = $detail['children'][$i]['account_hash'];
				}
			}
		}

		$tbl .= $this->form->form_tag().
		$this->form->hidden(array('popup_id' 		=> $this->content['popup_controls']['popup_id'],
								  'detail_search' 	=> 1
								  ))."
		
		<div class=\"panel\" id=\"main_table\">
			<div id=\"feedback_holder\" style=\"background-color:#ffffff;border:1px solid #cccccc;font-weight:bold;padding:5px;display:none;margin-bottom:5px;\">
				<h3 class=\"error_msg\" style=\"margin-top:0;\">Error!</h3>
				<p id=\"feedback_message\"></p>
			</div>
			<div style=\"padding:15px 0 0 15px;font-weight:bold;\"></div>
			<table cellspacing=\"1\" border=1 cellpadding=\"5\" style=\"background-color:#8c8c8c;width:700px;margin-top:0;\" class=\"smallfont\">
				<tr>
					<td class=\"smallfont\" style=\"padding:20px 45px;background-color:#ffffff;\">
						<div style=\"font-weight:bold;padding-bottom:10px;\">
							Filter your journal search criteria below:
						</div>
						<table>
							<tr>
								<td style=\"padding-left:15px;\">
									<fieldset>
										<legend>Check Number</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->text_box("name=check_no")."</div>
									</fieldset>
								</td>
								<td style=\"padding-left:15px;vertical-align:top;\" rowspan=\"2\">
									<fieldset>
										<legend>Search By Proposal</legend>
										<div style=\"padding:5px;padding-bottom:5px\">
											".$this->form->text_box("name=proposal",
																	"value=",
																	"autocomplete=off",
																	"size=37",
																	"onFocus=position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('reports','proposal','proposal_hash',1);",
																	"onBlur=vtobj.reset_keyResults();key_clear();"
																	)."
											
									
											<div style=\"margin-top:15px;width:250px;height:45px;overflow:auto;display:block;background-color:#efefef;border:1px outset #cccccc;\" id=\"proposal_filter_holder\"></div>
										</div>
									</fieldset>
								</td>
								<td style=\"vertical-align:top;padding:5px;\" rowspan=\"6\">									
									<div style=\"margin-left:15px;\">".($search_name ? "
										<div style=\"margin-bottom:10px;\">
											Saved Searches:
											<div style=\"padding-top:5px\">
												".$this->form->select("saved_searches",$search_name,'',$search_hash,"style=width:100px","onChange=if(this.options[this.selectedIndex].value != ''){toggle_display('search_go_btn','block');}else{toggle_display('search_go_btn','none');}")."
												<div id=\"search_go_btn\" style=\"display:block;padding-top:5px;text-align:right;\">
													".$this->form->button("value=Go","onClick=agent.call('proposals','sf_loadcontent','cf_loadcontent','showall','active_search='+\$F('saved_searches'));window.setTimeout('popup_windows[\'".$this->content['popup_controls']['popup_id']."\'].hide()',1000);")."&nbsp;".$this->form->button("value=Remove","onClick=")."
												</div>
											</div>
										</div>" : NULL)."
										".$this->form->checkbox("name=save","value=1","onClick=if(this.checked){toggle_display('save_search_box','block')}else{toggle_display('save_search_box','none')}")."&nbsp;Save Search?
										<div style=\"padding-top:5px;display:none;\" id=\"save_search_box\">
											Search Name:
											<br />
											".$this->form->text_box("name=search_name","value=","size=15","maxlenth=64")."
										</div>
									</div>
								</td>
							</tr>
							<tr>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Transaction Type</legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->select("type",array("Invoice","Bill","Cash Receipt","Check","General Journal","Payroll","Adjustment","Memo Cost"),'',array("AR","AP","CR","CD","GJ","PR","AD","ME"))."</div>
									</fieldset>
								</td>
							</tr>
							<tr>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Matching Account: </legend>
										<div style=\"padding:5px;padding-bottom:5px\">".$this->form->select("from_account[]",$acct_name,'',$acct_hash,"multiple","size=5","style=width:200px;","blank=1")."</div>
									</fieldset>
								</td>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Search By Vendor</legend>
										<div style=\"padding:5px;padding-bottom:5px\">
											".$this->form->text_box("name=vendor",
																	"value=",
																	"autocomplete=off",
																	"size=37",
																	"onFocus=position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('reports','vendor','vendor_hash',1);",
																	"onBlur=vtobj.reset_keyResults();key_clear();"
																	)."
											
									
											<div style=\"margin-top:15px;width:250px;height:45px;overflow:auto;display:block;background-color:#efefef;border:1px outset #cccccc;\" id=\"vendor_filter_holder\"></div>
										</div>
									</fieldset>
								</td>
							</tr>
							<tr>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset style=\"width:90%;\">
										<legend>Date Range</legend>
										<div style=\"padding:5px;padding-bottom:5px\">
											<span id=\"date_start_holder\"></span>
											<span id=\"date_end_holder\"></span>";
										$this->content['jscript'][] = "
											setTimeout('DateInput(\'date_start\',false, \'YYYY-MM-DD\',\'\',1,\'date_start_holder".$this->popup_id."\',\'<span id=\"err1".$this->popup_id."\">From:</span>&nbsp;\')',20);						
											setTimeout('DateInput(\'date_end\',false, \'YYYY-MM-DD\',\'\',1,\'date_end_holder".$this->popup_id."\',\'<span id=\"err2".$this->popup_id."\">&nbsp;Thru:</span>&nbsp;\')',41);";
										
										$tbl .= "
										</div>
									</fieldset>
								</td>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Search By Customer</legend>
										<div style=\"padding:5px;padding-bottom:5px\">
											".$this->form->text_box("name=customer",
																	"value=",
																	"autocomplete=off",
																	"size=37",
																	"onFocus=position_element($('keyResults'),findPos(this,'top')+20,findPos(this,'left'),'account_suggest');key_call('reports','customer','customer_hash',1);",
																	"onBlur=vtobj.reset_keyResults();key_clear();"
																	)."
											
									
											<div style=\"margin-top:15px;width:250px;height:45px;overflow:auto;display:block;background-color:#efefef;border:1px outset #cccccc;\" id=\"customer_filter_holder\"></div>
										</div>
									</fieldset>								
								</tr>
							</tr>
							<tr>
								<td style=\"padding-left:15px;vertical-align:top;\">
									<fieldset>
										<legend>Search By Customer/Vendor Invoice No.</legend>
										<div style=\"padding:5px;padding-bottom:5px\">
											".$this->form->text_box("name=invoice_no")."
										</div>
									</fieldset>
								</td>
								<td></td>
							</tr>
						</table>
					</td>
				</tr>
			</table>
			<div style=\"text-align:right;padding:15px;\">
				".$this->form->button("value=Search","id=primary","onClick=submit_form($('popup_id').form,'accounting','exec_post','refresh_form','action=doit_search_journal');")."
			</div>
		</div>".
		$this->form->close_form();
		
		$this->content['popup_controls']["cmdTable"] = $tbl;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
?>